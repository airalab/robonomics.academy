{"hash":"b7127cfb676a767c419fa0b68f47fd3dddba7323","data":{"course":{"id":"ff3ed2f6ede8fa7c6d73927f6229360d","title":"エンジニアワークベンチの展開","description":"このコースは、Feeccシステムとそのすべてのコンポーネントを知ることについてです。","content":"\n<RoboAcademyText fWeight=\"500\">\nこのレッスンでは、Feecc Engineer Workbench の必要なコンポーネントを自分でデプロイする方法を学習します。\n</RoboAcademyText>\n\nコンポーネントには次のものがあります:\n\n- ワークベンチデーモン\n- ワークベンチフロントエンド\n- IPFSゲートウェイ\n- HIDリーダーデーモン\n\nすべてのコンポーネントは、[Docker](https://docs.docker.com/engine/install/ubuntu/) および [Docker compose](https://docs.docker.com/compose/) を使用して起動されます。 彼らはインストールされました。\n\n## ソフトウェアの準備\n\n1. Feeccコンポーネントはデータの保存とアクセスに[MongoDB](https://www.mongodb.com/)データベースを使用します。Feeccを使用する前に、便利な方法でMongoDBを展開する必要があります。展開オプションのいくつかは次のとおりです: [独自のサーバーを使用](https://www.mongodb.com/try/download/community)、[Atlasのクラウドデータベース](https://www.mongodb.com/atlas) (無料)、[DigitalOceanのクラウドデータベース](https://www.digitalocean.com/products/managed-databases-mongodb) (有料)。 \n    \n    いずの場合も、すべてのシステムコンポーネントの`MONGODB_URI`変数の値として入力する必要があるMongoDBへの接続URIを取得する必要があります。\n    \n2. 本番システムからのデータの信頼性と透明性を活用したい場合は、Robonomicsにアカウントを作成する必要があります。これを行うには、次のリンクにある手順を使用してください: https://wiki.robonomics.network/docs/create-account-in-dapp/\n    \n    アカウントのシードフレーズを後で`ROBONOMICS_ACCOUNT_SEED`変数で使用するため、保存する必要があります。\n\n## ワークベンチの準備\n\n開始する前に、コンピューターまたはサーバーにすべての必要な機器を接続してください:\n\n- USBを使用したラベルプリンター\n- USBを使用したRFID / バーコードリーダー\n- PoEルーター/ネットワークスイッチを介したIPカメラ\n- USBおよびHDMI/VGAを使用したモニターとキーボードおよびマウスまたはタッチスクリーン（オプション）\n\n## HIDリーダーデーモンの起動\n\n1. リポジトリをクローンする:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon.git\ncd feecc-hid-reader-daemon\n</LessonCodeWrapper>\n\n2. デーモンを起動します：\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## ワークベンチデーモンの起動\n\n1. リポジトリのクローンを作成します。\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-daemon.git\ncd feecc-workbench-daemon\n</LessonCodeWrapper>\n\n2. ファイル `docker-compose.yml` を使用してデーモンを必要に応じて構成します。ファイルにはさまざまな環境変数が含まれています：\n\n    - MongoDBの構成；\n    - Robonomicsの構成；\n    - IPFSの構成；\n    - プリンターパラメータ；\n    - カメラパラメータ；\n    - RFID / バーコードリーダーパラメータ。\n    \n    変数の完全なリストはデーモンの[リポジトリ](https://github.com/Multi-Agent-io/feecc-workbench-daemon)で利用できます。次のパラメータは必須です：\n    \n    - `MONGODB_URI`: MongoDBへの接続URI;\n    - `MONGODB_DB_NAME`: MongoDBのデータベース名;\n    - `WORKBENCH_NUMBER`：従業員の作業台番号。\n\n3. デーモンを起動します：\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. 機能を確認します。ブラウザを開いて `http://127.0.0.1:5000/docs` ページに移動し、システムのREST APIインターフェースに関するドキュメントが表示されるはずです。ページが利用できない場合は、サーバーが正しく起動していない可能性があります。エラーがある場合は、コンテナ内のログを確認し、修正してビルドおよび実行手順を繰り返してください。\n\n## IPFSゲートウェイの起動\n\n1. リポジトリのクローンを作成します。\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git\n</LessonCodeWrapper>\n\n\n2. `docker-compose.yml`ファイルを使用して、必要に応じてマイクロサービスを構成します。ファイルには、MongoDB、Robonomics、およびPinataとの接続用の環境変数が含まれています。変数の完全なリストは、ゲートウェイの[リポジトリ](https://github.com/Multi-Agent-io/feecc-ipfs-gateway)で入手できます。\n\n3. マイクロサービスを起動します。\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## ワークベンチフロントエンドの起動\n\n1. リポジトリのクローンを作成します。\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git\n</LessonCodeWrapper>\n\n2. `configs`ディレクトリに移動し、`config.json`ファイルを使用してフロントエンドサービスを必要に応じて構成します。次のパラメータが特に重要です。\n    - `socket` — ここにワークベンチデーモンのアドレスを挿入します。\n    - `interface_language` — インターフェース言語、`en`と`ru`のオプションが利用可能です。\n    - `dev_show_reducers` — 開発者モードの有効化/無効化\n    - `pulling_period` — バックエンドからデータを受信する間隔（ミリ秒単位）\n\n3. フロントエンドコンテナを起動する:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. 機能を確認します。ブラウザに移動し、`http://localhost:3000`ページを開くと、認証ページが表示されます。\n\n<RoboAcademyText fWeight=\"500\">\n次のレッスンでは、Feecc Analyticsサービスを説明します。\n</RoboAcademyText>","fileInfo":{"path":"ja/learn/feecc-course/feecc-workbench-deployment.md","name":"feecc-workbench-deployment"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}