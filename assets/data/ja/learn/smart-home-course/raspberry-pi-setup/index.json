{"hash":"0a452ea1a3cc334a5e8ca4f3b7c819e6bb138602","data":{"course":{"id":"189eb94e0fd48a198d4b399df2483580","title":"レッスン＃2、Raspberry Piのセットアップ","description":"ホームアシスタントコース","content":"\n## イントロ\n\nこのレッスンでは、Raspberry PiをIoTハブにする準備をします。次のすべての必要なコンポーネント、すなわち：\n\n<List>\n\n- サーバーのオペレーティングシステムとしてRaspberry Pi用のUbuntu Linuxディストリビューション；\n- Home Assistantパッケージ；\n- IPFSパッケージ；\n- robonomics-interfaceライブラリ。\n\n</List>\n\n## 手順\n\n<List type=\"numbers\">\n\n<li>\n\nRaspberry Piの準備と設定\n\n<List>\n\n  <li>\n\n  Raspberry Pi用の[64ビットUbuntu Server 22.04 LTS](https://ubuntu.com/download/raspberry-pi)またはそれ以降のイメージをダウンロードします。\n  </li>\n\n  <li>\n\n  コンピューターに[Raspberry Pi Imager](https://www.raspberrypi.com/software/)というイメージファイルを書き込むためのツールをダウンロードしてインストールします。\n  </li>\n\n  <li>\n\n  SDカードを挿入してRaspberry Pi Imagerを実行します。ダウンロードしたオペレーティングシステムのイメージを選択し、ストレージのドロップダウンメニューからSDカードを選択してください。\n\n  </li>\n\n  <li>\n\n  設定を開き、<code>SSHを有効にする</code>オプションと<code>パスワード認証を使用する</code>パラメータをチェクします。\n\n  \\- <code>ユーザー名とパスワードの設定</code>で、Raspberry Piユーザーのユーザー名とパスワードを追加します。\n\n  \\- <code>無線LANの設定</code>で、Wi-Fiとそのパスワードを入力し、ドロップダウンリストから国を選択します。その後、<code>書き込み</code>します。\n\n  <robo-academy-note type=\"okay\">\n  実際のWi-Fi名とWi-Fiパスワードを入力したことを確認してください。\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  書き込みが完了するまで待機し、その後SDカードをRaspberry Piに挿入して電源を入れます。Wi-Fiネットワークに接続するはずで、それには時間がかかります。\n\n  </li>\n  \n  <li>\n\n  今、デバイスのアドレスを見つける必要があります。これを行うには、[Fing App](https://www.fing.com/products)、<code>arp -a</code>コマンド、または[nmap](https://nmap.org/download.html)などのネットワークスキャンのさまざまな方法を使用できます。次にnmapを使用します。\n\n  コマンドを使用してnmapをインストールします\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  次に、ローカルネットワーク内のアドレスを見つけます。それは<code>192.168.xxx.xxx</code>または<code>172.xxx.xxx.xxx</code>のように見えるはずです。nmapはローカルネットワーク上の多くのアドレスを見つけることができるので注意してください。\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  次に、以下に示すようにネットワークをスキャンします。アドレスの最後のオクテットを<code>0</code>に置き換えます。\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  コマンドの出力は次のようになります。\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  この例では、アドレスは<code>192.168.43.56</code>です。\n\n  </li>\n\n  <li>\n\n  見つけたIPを使用してRaspberry PiにSSHで接続します。以前に作成したユーザー名とパスワードを使用してください。\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  その後の手順は、Raspberry Pi自体でSSH経由で実行されます。\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nHome Assistantのインストール\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\n以下に示すいくつかのソフトウェアバージョンは古くなっている場合があります。最新バージョンについては、[Robonomics Home Assistantイメージのインストールリポジトリ](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage)を参照してください。\n\n  </robo-academy-note>\n\n  開始する前、Raspberry Piシステムを更新し、必要なパッケージをインストールします。インストール中にサービス再起動の要求が表示されます。単に<span class=\"accent\">ok</span>を選択し、<code>tab</code>ボタンを押してEnterキーを押してください。\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  <code>homeassistant</code>ユーザーとHome Assistant Coreのディレクトリを作成します。\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Home Assistant Core用の仮想環境を作成し、それに切り替えます。これは<code>homeassistant</code>ユーザーとして行う必要があります。コマンドを実行した後、ユーザーは<code>(homeassistant) homeassistant@ubuntu</code>のように見えるはずです。\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  その結果、仮想環境の名前が括弧内に表示されます。\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  必要なPythonパッケージをインストールします。\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  ホームアシスタントコアを初めて起動します。これにより、<code class=\"nowb\">.homeassistant</code>構成ディレクトリが<code>/home/homeassistant</code>ディレクトリに自動的に作成され、基本的な依存関係がインストールされます。\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  最初のセットアップが進行中の間、<code>http://%RASPBERRY_IP_ADDRESS%:8123</code>のWebインターフェースを使用してインストールを確認してください。この例では：<code>http://192.168.43.56:8123</code>。ローカルネットワークに接続された任意のコンピュータからWeb UIを開くことができます。\n\n  ログイン/パスワードの作成が完了したら、ホームアシスタントを<code>Ctrl+C</code>で停止してください。\n  </li>\n</List>\n</li>\n\n<li>\n\nIPFSインストール\n\n<List>\n\n  <li>\n\n  IPFSのインストールには、IPFSをダウンロードし、それとともにsystemdサービスを作成するために当社のスクリプトを使用できます。まず、ホームアシスタントの仮想環境を終了します。\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  次に実行します：\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nSystemdサービス\n\n<List>\n\n<li>\n\nSystemdサービスは、ホームアシスタントの起動を自動化するのに便利です。ホームアシタント用の新しいサービスを作成します。\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\n以下を貼り付けます\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nサービスを有効にして開始します：\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nRobonomics統合\n\n<List>\n\n<li>\n\nRaspberry Piで<code>homeassistant</code>ユーザーでログインします。\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nソースの仮想環境を有効にし、必要なPythonパッケージをインストールします。\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\n次に、<code>.homeassistant</code>ディレクトリに移動し、<code class=\"nowb\">custom_components</code>フォルダを作成し、統合のリポジトリをそこにクローンします。\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nその後、homeassistantユーザーを終了してサービスを再起動します。\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"ja/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}