{"hash":"f0f5c02be608963a98931b1ff3d7b952f1efb26f","data":{"course":{"id":"73a118dae202ca2398ceaa78718a1035","title":"レッスン＃1、理論的なブリーフィング","description":"ホームアシスタントコース","content":"\n## 主権スマートホームの主要コンポーネント \n\n<List>\n\n1. **[Raspberry Pi](https://www.raspberrypi.org/)、シングルボードコンピュータ**。\n\nすべての必要なソフトウェアをインストールした後、デバイスをIoTハブに変換できます。ハブの主な目的は、スマートホームのプロトコル、ネットワーク、アプリケーション、およびさまざまなデバイスを統括することです。\n\n2. **[Home Assistant](https://www.home-assistant.io/)、オープンソースの制御システムソフトウェア**。\n\nこれはスマートデバイスの中心ハブとして設計されています。ネットワークを自動的にスキャンして既知のデバイスを検出し、ユーザーがすべての必要な自動化を簡単に設定できるようにします。 Raspberry PiにHome Assistantをインストールします。\n\nHome Assistantはデバイスと通信し、データをローカルに保存しますが、残念ながらデバイスをリモートで制御することはできません。この問題を解決するために、Robonomics Networkを使用します。\n\n3. **[Robonomics Network](https://robonomics.network/)、IoTアプリケーションの安全で信頼性の高い制御のための分散クラウド**。\n\nこれは、スマートデバイスとそのデータの保護のために分散化とブロックチェーン技術を組み込んだweb3技術を使用しています。\n\nRobonomicsの主な機能は、Polkadot/Kusamaエコシステムのブロックチェーン（パラチェーン）に基づいて実装されています。パラチェーンの主な機能の1つは、デバイスを起動するコマンドを送信し、ユーザーデータをブロックチェーンに保存できる能力です。\n\nRobonomicsパラチェーンには、1か月間の期間中、パラチェーンにトランザクションを送信するための手数料がかからないIoTサブスクリプション機能があります。このコースの実践的なセクションでは、サブスクリプション方法を使用します。\n\nIoTハブとRobonomicsパラチェーンとの相互作用は、[robonomics-interface](https://github.com/Multi-Agent-io/Robonomics-interface)を使用して行われます。これは、Robonomicsとの便利なプログラミング用に特化したPythonライブラリです。\n\n4. **[InterPlanetary File System](https://ipfs.tech/)（IPFS）、分散ファイルシステムでデータを保存および共有するためのピアツーピアソフトウェア**。\n\nIPFSは、大きなファイルをブロックチェーンに保存するのを避けるために必要です（高額になるため）、代わりにファイルのIPFSハッシュを保存し、これらのファイルへのリンクとして機能します。\n\n## スマートデバイスのプロトコル\nスマートデバイスには2つの主要なプロトコルを使用します:\n\n1. **[Zigbee](https://csa-iot.org/all-solutions/zigbee/)、無線通信プロトコル。**\n\nスマートデバイスを接続するために非常に一般的に使用されています。低消費電力、設定の容易さと柔軟性、自己組織化および自己回復メッシュネットワークトポロジーのサポートが設計されています。Zigbeeサポートのある数千のデバイスが市場で利用可能であり、スマートホームソリューションの構築に非常に魅力的です。Zigbeeデバイスを制御するには、Zigbeeネットワークと別のネットワーク（例：Wi-Fi）間でデータを転送するゲートウェイが必要です。\n\n2. **[Message Queuing Telemetry Transport](https://mqtt.org/) (MQTT)、IoTアプリケーションを制御するために設計されたパブリッシュ-サブスクライブプロトコル。**\n\nこのプロトコルは軽量で、最小限のリソースを必要とし、メッセージの配信の信頼性を確保します。このプロトコルは低域幅、高遅延、信頼性の低いネットワーク向けに設計されており、高いセンサーメッセージのボリュームを操作するための優れたオプションです。MQTTには、MQTTブローカーを実行するサーバーが必要です（この場合、Raspberry Piと連携します）。ブローカーは、MQTTクライアントからのすべてのメッセージを受信し、適切なサブスクライブクライアントにメッセージをルーティングします。\n\n## Zigbee接続のオプション\nRobonomicsとHome Assistantを接続するためのデバイスを接続する2つのシナリオを探ります。\n\n1. 最初のシナリオでは、デバイスを接続するために独立したZigbeeゲートウェイを使用しません。代わりに、[Zigbeeアダプタ](https://www.zigbee2mqtt.io/guide/adapters/)と[Zigbee2MQTT](https://www.zigbee2mqtt.io/guide/adapters/)ソフトウェアの組み合わせが使用されます。\n\n<LessonImages figure figureCaption=\"Architectural scheme of the scenario with Zigbee adapter\" src=\"smart-house-course/lesson-1-1.png\" alt=\"Architectural scheme of the scenario with Zigbee adapter\"/>\n\nアダプタ（例：JetHome USB JetStick Z2）はRaspberry Piに接続され、コンピューターとZigbee無線通信の間のインターフェースとして機能します。Zigbee2MQTTは、ZigbeeをMQTTネットワークに接続するためのソフトウェアです。Zigbeeネットワークからメッセージを取得し、それらを使いやすく、構造化されたMQTTメッセージに変換します。\n\n2. 2番目のシナリオでは、デバイスをESP32マイクロコントローラーをベースにした[SLSゲートウェイ](https://github.com/slsys/Gateway)を使用して接続します。利便性のために、Robonomicsはゲートウェイの[独自の改造版](https://oshwlab.com/ludovich88/robonomics_sls_gateway_v01)を開発しました。\n\n<LessonImages figure figureCaption=\"Architectural scheme of the scenario with SLS Gateway\" src=\"smart-house-course/lesson-1-2.png\" alt=\"Architectural scheme of the scenario with SLS Gateway\"/>\n\nSLSゲートウェイはZigbeeプロトコルメッセージのコーディネーターとして機能し、利用可能なほとんどのZigbee機器を使用できるようにします。Home Assistantとの統合には、MQTTプロトコルが使用されます。\n\n## リモートコントロール\n\nスマートホームのリモートコントロールは、[Robonomics分散アプリケーション](https://dapp.robonomics.network/)（dapp）を使用して行われ、ユーザーフレンドリーな方法でパラチェーン機能にアクセスを提供します。ユーザーデータのセキュリティと不変性は、暗号化されたデータをIPFSに送信することによって一方的に保証され、そのデータのIPFSハッシュをブロックチェーンに配置することによって他方的に保証されます。\n\n</List>\n\n\n\n","fileInfo":{"path":"ja/learn/smart-home-course/robonomics-hass-theory.md","name":"robonomics-hass-theory"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:41 GMT+0400 (Samara Standard Time)"}},"context":{}}