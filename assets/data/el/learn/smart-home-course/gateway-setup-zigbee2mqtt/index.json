{"hash":"875b98d13319980e3d246b684c60c311a25b65d1","data":{"course":{"id":"2fcea32902608a23a5707dd0b284414f","title":"Μάθημα #4α, Ρύθμιση Πύλης: Zigbee2MQTT","description":"μάθημα βοηθού σπιτιού","content":"\n## Εισαγωγή\n\nΑυτό είναι ένα σενάριο εγκατάστασης για τη σύνδεση συσκευών χρησιμοποιώντας τον προσαρμογέα Zigbee και τη γέφυρα Zigbee2MQTT. Αν έχετε το [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (το οποίο έχει όλο τον απαραίτητο firmware), μπορείτε απλά να προχωρήσετε με αυτές τις οδηγίες. Ωστόσο, αν έχετε έναν άλλο προσαρμογέα, το πρώτο πράγμα που πρέπει να κάνετε είναι να το φλασάρετε με το λογισμικό Zigbee2MQTT. Μπορείτε να βρείτε οδηγίες για τη συσκευή σας [εδώ](https://www.zigbee2mqtt.io/guide/adapters/).\n\nΘα χρειαστείτε επίσης μια έξυπνη συσκευή για να δοκιμάσετε τη σύνδεσή της με το Home Assistant.\n\n\n## Οδηγίες\n\n<List type=\"numbers\">\n\n<li>\n\nΕγκατάσταση Λογισμικού\n\n<List>\n\n  <li>\n    Δημιουργήστε ένα αποθετήριο περιβάλλοντος εκτέλεσης Node.js και εγκαταστήστε το με τις απαιτούμενες εξαρτήσεις:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - </LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install -y nodejs git make g++ gcc</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n    Βεβαιωθείτε ότι οι σωστές εκδόσεις του Node.js (v14.X, V16.x, V17.x ή V18.X) και του διαχειριστή πακέτων <code class=\"nowb\">npm</code> (6.X, 7.X ή 8.X) που εγκαταστάθηκαν αυτόματα με το Node.js, έχουν εγκατασταθεί:\n    <LessonCodeWrapper language=\"bash\" noLines>node --version</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm --version</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Δημιουργήστε έναν κατάλογο για το Zigbee2MQTT και ορίστε τον χρήστη σας ως ιδιοκτήτη του:\n    <LessonCodeWrapper language=\"bash\" noLines>sudo mkdir /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo chown -R ${USER}: /opt/zigbee2mqtt</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Κλωνοποιήστε το αποθετήριο Zigbee2MQTT:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\n    git clone --depth 1 --branch 1.28.4 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n    </LessonCodeWrapper>\n  </li>\n\n  <li>\n    Εγκαταστήστε τις εξαρτήσεις. Σημειώστε ότι το <code>npm ci</code> μπορεί να παράγει κάποιες προειδοποιήσεις που μπορούν να αγνοηθούν.\n    <LessonCodeWrapper language=\"bash\" noLines>cd /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm ci</LessonCodeWrapper>\n  </li>\n\n</List>\n</li>\n\n<li>\n\nΣύνδεση και Ρύθμιση του Προσαρμογέα\n\n<List>\n\n<li>\n\nΣυνδέστε τον προσαρμογέα Zigbee στο Raspberry Pi. Στη συνέχεια, πρέπει να βρείτε την τοποθεσία του stick. Για αυτό πληκτρολογήστε την επόμενη εντολή:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nls -l /dev/serial/by-id\n</LessonCodeWrapper>\n\nΤο αποτέλεσμα θα πρέπει να μοιάζει με:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon>\nubuntu@ubuntu:~$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n</LessonCodeWrapper>\n\nΣε αυτό το παράδειγμα το directory σύνδεσης stick είναι <code>ttyUSB0</code>.\n</li>\n\n<li>\n\nΕπεξεργαστείτε το αρχείο <code>configuration.yaml</code> πριν ξεκινήσετε το Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnano /opt/zigbee2mqtt/data/configuration.yaml\n</LessonCodeWrapper>\n\nΗ βασική διαμόρφωση χρειάζεται μερικές προσαρμογές. Αλλάξτε τις ακόλουθες δηλώσεις:\n\n\\- <code>homeassistant:</code> σε <code>true</code>, θα συνδέσει αυτόματα αισθητήρες στο Home Assistant;\n\n\\- ξεσχολιάστε <code>user</code> και <code>password</code> κάτω από <code>mqtt</code> και εισάγετε το όνομα χρήστη και τον κωδικό πρόσβασης σας (ως string, με εισαγωγικά) από τον MQTT Broker;\n\n\\- αλλάξτε τη θύρα στο <code>serial</code> -> <code>port</code> στο directory σύνδεσης stick. Σε αυτό το παράδειγμα: <code>/dev/ttyUSB0</code>.\n\nΤο προσαρμομένο αρχείο διαμόρφωσης πρέπει να φαίνεται ως εξής:\n\n<LessonCodeWrapper language=\"yaml\">\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n# allow new devices to join\npermit_join: true\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: 'YOUR_USERNAME'\n  password: 'YOUR_PASSWORD'\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/YOUR_PORT\n</LessonCodeWrapper>\n\n\n**Επιπλέον:**\n\nΑν έχετε ήδη ένα ενεργό προσαρμογέα Zigbee ή πύλη στο σπίτι σας και τώρα διαμορφώνετε ένα άλλο stick, τότε θα μπουν σε σύγκρουση μεταξύ τους. Για να λύσετε αυτό το πρόβλημα πρέπει να αλλάξετε το κανάλι στη νέα συσκευή. Για αυτό προσθέστε τις ακόλουθες συμβολοσειρές στο τέλος του αρχείου διαμόρφωσης:\n\n\n<LessonCodeWrapper language=\"yaml\" codeClass=\"big-code\">\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nΈναρξη Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd /opt/zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnpm start\n</LessonCodeWrapper>\n\nΕάν ξεκινήσει με επιτυχία, θα δείτε κάτι παρόμοιο:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-1.jpg\" alt=\"code\"/>\n</li>\n</List>\n</li>\n\n<li>\n\nΣύζευξη Συσκευής\n\n<List>\n\n<li>\n\nΉρθε η ώρα να συνδέσετε την έξυπνη σας συσκευή. Ο πιο συνηθισμένος τρόπος για να μεταβείτε μια συσκευή σε λειτουργία σύνδεσης είναι να κρατήσετε το κουμπί τροφοδοσίας ή να τις ενεργοποιήσετε/απενεργοποιήσετε 5 φορές. Βεβαιωθείτε ότι το Zigbee2MQTT λειτουργεί.\n\n<LessonImages src=\"smart-house-course/lesson-4-a-4.gif\" alt=\"code\" imageClasses=\"mb\"/>\n\nΌταν η συσκευή συνδεθεί, θα πρέπει να δείτε ένα μήνυμα όπως:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n</LessonCodeWrapper>\n\nΝα θυμάστε το ID του αισθητήρα: σε αυτό το παράδειγμα — <code>0x00158d0003eeeacf</code>.\n\nΤώρα θα πρέπει να δείτε αυτόν τον αισθητήρα με το ID στο Home Assistant WebUI σας. Πηγαίνετε σε <code>Ρύθμιση</code> -> <code>Συσκευές & Υπηρεσίες</code> -> <code>Συσκευές</code> για να το ελέγξετε:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-2.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n\nΑφού προσθέσετε όλους τους αισθητήρες, μπορείτε να σταματήσετε το πρόγραμμα με το <code>Ctrl+C</code>. Εάν δεν θέλετε να προσθέσετε άλλες συσκευές, μπορείτε να ανοίξετε ξανά το αρχείο ρυθμίσεων και να ορίσετε το <code>permit_join:</code> σε <code>false</code>.\n</li>\n\n</List>\n</li>\n\n<li>\n\nΔημιουργία Υπηρεσίας για Αυτόματη Έναρξη\n\n<List>\n\n<li>\n\nΤώρα πρέπει να δημιουργήσετε μια υπηρεσία. Δημιουργήστε το αρχείο:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n</LessonCodeWrapper>\n\nΠροσθέστε τα παρακάτω σε αυτό το αρχείο με αλλαγή του <code>ΤΟ_ΟΝΟΜΑ_ΧΡΗΣΤΗ_ΣΑΣ_ΕΔΩ</code>. Εάν δεν γνωρίζετε το όνομά σας χρήστη, χρησιμοποιήστε την εντολή <code>whoami</code>.\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target \n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=YOUR_RASPPI_USERNAME_HERE\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nΕπαληθεύστε ότι οι ρυθμίσεις λειτουργούν:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl start zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsystemctl status zigbee2mqtt.service\n</LessonCodeWrapper>\n\nΤο αποτέλεσμα θα πρέπει να μοιάζει με:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-3.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n</li>\n\n<li>\n\nΕνεργοποιήστε την υπηρεσία για να ξεκινήσει το Zigbee2MQTT αυτόματα κατά την εκκίνηση:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl enable zigbee2mqtt.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n</List>","fileInfo":{"path":"el/learn/smart-home-course/gateway-setup-zigbee2mqtt.md","name":"gateway-setup-zigbee2mqtt"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:33 GMT+0400 (Samara Standard Time)"}},"context":{}}