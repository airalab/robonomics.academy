{"hash":"38d00f5ce0b34e89f5f33ff65026c37e182f6828","data":{"course":{"id":"b9ede8086fba59d8a3f2e2af2e1dd32b","title":"Επίδειξη του Feecc","description":"Αυτό το μάθημα αφορά την εξοικείωση με το σύστημα Feecc και όλα τα στοιχεία του.","content":"\n<RoboAcademyText fWeight=\"500\">\nΣε αυτό το μάθημα, θα δοκιμάσετε τις βασικές λειτουργίες του Feecc χρησιμοποιώντας ένα εικονικό περιβάλλον δοκιμών ως παράδειγμα, το οποίο προσομοιώνει ένα πραγματικό παράδειγμα ενός συστήματος παρακολούθησης παραγωγής.\n</RoboAcademyText>\n\nΓια τους σκοπούς της επίδειξης λείπουν μερικά τυπικά χαρακτηριστικά όπως η εκτύπωση ετικέτας ή η εγγραφή βίντεο, αλλά διατηρεί τον βασικό έννοια ενός τέτοιου συστήματος.\n\n## Προαπαιτούμενα\n\nΓια να εκτελέσετε την επίδειξη, θα χρειαστείτε:\n\n- Σύστημα UNIX-παρόμοιο (δοκιμάστηκε σε [Ubuntu 22.04.2](https://releases.ubuntu.com/jammy/))\n- [Docker](https://docs.docker.com/engine/install/ubuntu/) και [Docker compose](https://docs.docker.com/compose/)\n- Περιηγητής ιστού (δοκιμάστηκε σε Google Chrome και Mozilla Firefox)\n\n## Εγκατάσταση\n\nΕκτελέστε τις παρακάτω εντολές:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-academy\ncd feecc-academy\nsudo docker compose up -d --build\n</LessonCodeWrapper>\n\nΓια να ελέγξετε τα ενεργά containers, εκτελέστε το ακόλουθο:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker ps -a\n</LessonCodeWrapper>\n\nΘα πρέπει να δείτε την ακόλουθη έξοδο:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\nCONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS                             PORTS     NAMES\n0db8382bb271   feecc-academy-workbench-daemon      \"uvicorn app:app --h…\"   19 seconds ago   Up 7 seconds (healthy)                       feecc_academy_workbench_daemon\n0dbc7bb977d1   feecc-academy-workbench-frontend    \"node nodeServer.js\"     20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_workbench_frontend\na74fa229eb90   robonomics/robonomics:sha-bd71a23   \"robonomics --dev --…\"   20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_robonomics_node\n0c9e8022658a   mongo:jammy                         \"docker-entrypoint.s…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_mongoDB\n6b0748904d0f   ipfs/go-ipfs:v0.17.0                \"/sbin/tini -- /usr/…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_ipfsnode\n814e6f489a77   nyurik/alpine-python3-requests      \"tail -f /dev/null\"      20 seconds ago   Up 19 seconds                                feecc_academy_hid_emulator\n</LessonCodeWrapper>\n\n## Εκκίνηση της επίδειξης\n\n1. Πηγαίνετε στη διεύθυνση http://localhost:3000/ στον περιηγητή σας, θα πρέπει να δείτε μια οθόνη καλωσορίσματος.\n\n2. Σε αυτό το στάδιο, το σύστημα θα πρέπει να ζητήσει από τον υπάλληλο να τοποθετήσει την κάρτα RFID του στο σαρωτή για εξουσιοδότηση. Στην επίδειξη, μπορείτε να χρησιμοποιήσετε το `hid-emulator.py` για εξουσιοδότηση. Για να το κάνετε αυτό, εκκινήστε έναν ξεχωριστό Docker container:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker exec -ti feecc_academy_hid_emulator sh\npython3 hid-emulator.py\n</LessonCodeWrapper>\n\nΕίναι ικανό να προσομοιώσει δύο λειτουργίες: παροχή μιας κάρτας RFID και σάρωση ενός barcode· χρειάζεστε την πρώτη λειτουργία, εισάγετε `1`.\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n> Select emulated action (1/2): \n>  1. Put ID card on the Αναγνώστης RFID.\n>  2. Scan a sample barcode with a barcode scanner.\n> 1\n> INFO:2023-03-21 21:42:05,370:Event relayed to endpoint http://127.0.0.1:5000/workbench/hid-event\n</LessonCodeWrapper>\n\n3. Θα δείτε την οθόνη για την επιλογή του τύπου σύνθεσης, επιλέξτε `ΜΟΝΟΣ ΣΥΣΚΕΥΗ`.\n\n<LessonImages src=\"feecc-course/menu.png\" alt=\"Feecc start menu\"/>\n\n4. Οι ειδοποιήσεις θα εμφανιστούν στην κάτω αριστερή γωνία υποδεικνύοντας την έναρξη της εργασίας στη συσκευή για την οποία δημιουργείται ένα μοναδικό ID. Η μπλε ειδοποίηση θα εμφανίσει επίσης τη δραστηριότητα του εικονικού εκτυπωτή. Στην πραγματική εγκατάσταση, ένας χάρτης με το ID της συσκευής εκτυπώνεται σε αυτή τη στιγμή.\n\n<LessonImages src=\"feecc-course/single_device.png\" alt=\"Single device composition\"/>\n\n5. Κάντε κλικ στο `ΕΝΑΡΞΗ ΣΥΝΘΕΣΗΣ` για να ξεκινήσετε την καταγραφή της διαδικασίας συναρμολόγησης της συσκευής. Θα σας ζητηθεί να περάσετε από όλα τα απαραίτητα βήματα συναρμολόγησης. Κάθε φορά που ένας υπάλληλος ολοκληρώνει ένα βήμα, πρέπει να κάνει κλικ στο κουμπί `ΕΠΟΜΕΝΟ`, μετά από το οποίο το βίντεο θα αποθηκευτεί στο IPFS. Είναι επίσης δυνατό να αναστείλετε τη συναρμολόγηση (`ΠΑΥΣΗ`) για να επιστρέψετε αργότερα ή να διακόψετε εντελώς τη διαδικασία (`ΔΙΑΚΟΠΗ`).\n\n6. Όταν ολοκληρωθούν όλα τα στάδια συναρμολόγησης, εμφανίζεται το κουμπί `ΤΕΛΟΣ`, μετά από το οποίο το Feecc προτείνει την αποθήκευση του πιστοποιητικού της συσκευής. Ωστόσο, πριν το κάνετε αυτό, ανοίξτε το [τοπικό κόμβο Robonomics](https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer) στον περιηγητή σας, θα το χρειαστείτε αργότερα. Μετά από αυτό, επιστρέψτε στο Feecc και κάντε κλικ στο `ΑΠΟΘΗΚΕΥΣΗ ΔΙΑΒΑΤΗΡΙΟΥ`.\n    \n    Θα δείτε νέες ειδοποιήσεις στη γωνία της οθόνης: ειδοποίηση ότι το πιστοποιητικό έχει μεταφορτωθεί στο Robonomics και στο IPFS, καθώς και δύο μπλε μηνύματα σχετικά με την εκτύπωση της σφραγίδας και του QR-κώδικα που οδηγεί στο πιστοποιητικό.\n\n<LessonImages src=\"feecc-course/single_certificate.png\" alt=\"Cetrificate of single composition\"/>\n\n7. Στην ενότητα `Πληροφορίες Αλυσίδας` στην οθόνη του τοπικού κόμβου Robonomics, θα πρέπει να δείτε ένα νέο γεγονός `datalog.NewRecord` στη στήλη `πρόσφατα γεγονότα`. Αν το ανοίξετε, το IPFS CID που αντιστοιχεί στο αρχείο πιστοποιητικού της συσκευής θα εμφανιστεί στο πεδίο `bytes`.\n\n<LessonImages src=\"feecc-course/single_datalog.png\" alt=\"Datalog of single composition\"/>\n\nΟ εκτυπωμένος QR κώδικας περιέχει ένα σύνδεσμο προς αυτό το CID, που επιτρέπει το άνοιγμα του αρχείου πιστοποιητικού στον περιηγητή. Καθώς ο τοπικός σας κόμβος IPFS ενδέχεται να μην έχει αυτή την εύρεση, μπορείτε να φτάσετε στο αρχείο τοπικά με το `localhost:8080/ipfs/CID.` Τα περιεχόμενα του πιστοποιητικού μοιάζουν κάπως έτσι:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: 423d3c1b42f6427e80cc881a16e07451\nUnit Model Name: Single Device\nTotal Assembly Time: 0:05:37\nProduction Stages:\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:38:47\n  Finish Time: 26-06-2023 17:40:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:40:30\n  Finish Time: 26-06-2023 17:42:06\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:42:16\n  Finish Time: 26-06-2023 17:43:00\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Saw Through the Single Device\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:00\n  Finish Time: 26-06-2023 17:43:51\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:51\n  Finish Time: 26-06-2023 17:44:36\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n</LessonCodeWrapper>\n\n8. Ας δοκιμάσουμε τώρα να δημιουργήσουμε ένα πιστοποιητικό για μια σύνθετη συναρμολόγηση που αποτελείται από πολλαπλές συσκευές. Στο μενού επιλογής τύπου, κάντε κλικ στο `ΣΥΝΘΕΤΗ ΣΥΣΚΕΥΗ`, και στη συνέχεια `ΔΕΙΓΜΑΤΙΚΗ ΣΥΣΚΕΥΗ`. Αντιγράψτε το ID μονάδας της (που βρίσκεται στο πεδίο αριθμού σύνθεσης), καθώς θα το χρειαστείτε αργότερα. Στη συνέχεια, συνεχίστε με τα κανονικά βήματα για τη συναρμολόγηση της συσκευής.\n\n9. Μετά τη συναρμολόγηση, επιστρέψτε στη `ΣΥΝΘΕΤΗ ΣΥΣΚΕΥΗ` και πατήστε `ΤΕΛΙΚΗ ΣΥΝΑΡΜΟΛΟΓΗΣΗ` για να ολοκληρώσετε τη σύνθετη συναρμολόγηση. Το σύστημα θα σας ζητήσει να παράσχετε το ID μονάδας των συναρμολογημένων συσκευών, για τις οποίες ο υπάλληλος πρέπει να σαρώσει τον κωδικό τους. Για να προσομοιώσετε αυτή τη διαδικασία, επιστρέψτε στο `hid-emulator.py` και επιλέξτε τη λειτουργία `2` για σάρωση κωδικού, και εισάγετε το αποθηκευμένο ID μονάδας εκεί.\n\n10. Στη συνέχεια, το σύστημα θα σας ζητήσει να περάσετε από τα απαραίτητα στάδια της σύνθετης συναρμολόγησης και να δημιουργήσετε ένα πιστοποιητικό γι' αυτήν:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: d08101feae7c4efbb5529885c9ad544b\nUnit Model Name: Composite Device\nTotal Assembly Time: 0:00:03\nProduction Stages:\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:25\n  Finish Time: 26-06-2023 18:18:26\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Tape the Sample Device to the base plate\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:26\n  Finish Time: 26-06-2023 18:18:27\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:27\n  Finish Time: 26-06-2023 18:18:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\nUnit Components:\n- Unit Unique Code: b165b382c3674127a6aaf5817c5a7040\n  Unit Model Name: Sample Device\n  Total Assembly Time: 0:00:03\n  Production Stages:\n  - Name: Prepare Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:45\n    Finish Time: 26-06-2023 18:17:46\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Assemble Sample Device\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:46\n    Finish Time: 26-06-2023 18:17:47\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Stack Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:47\n    Finish Time: 26-06-2023 18:17:48\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\nTotal Assembly Time (Including Components): 0:00:06\n</LessonCodeWrapper>\n\n11. Για να διαγράψετε το demo, εισάγετε την εντολή:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker compose down --rmi all && docker builder prune -f\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"500\">\nΣτο επόμενο μάθημα, θα προχωρήσουμε στην πραγματική ανάπτυξη όλων των απαραίτητων στοιχείων του συστήματος Feecc.\n</RoboAcademyText>","fileInfo":{"path":"el/learn/feecc-course/feecc-workbench-demo.md","name":"feecc-workbench-demo"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}