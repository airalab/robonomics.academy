{"hash":"e6c519792deb242508dbdc929978fb576e31f14b","data":{"course":{"id":"2b54eda460583d1265c470eee7ab12fd","title":"Lektion #2, Raspberry Pi Einrichtung","description":"Home Assistant Kurs","content":"\n## Einführung\n\nIn dieser Lektion bereiten Sie Ihren Raspberry Pi darauf vor, ein IoT-Hub zu werden. Sie werden nacheinander alle notwendigen Komponenten installieren und konfigurieren, nämlich:\n\n<List>\n\n- Ubuntu Linux-Distribution für Raspberry Pi als Server-Betriebssystem;\n- Home Assistant-Pakete;\n- IPFS-Pakete;\n- robonomics-interface Bibliothek.\n\n</List>\n\n## Anweisungen\n\n<List type=\"numbers\">\n\n<li>\n\nVorbereitung und Konfiguration des Raspberry Pi\n\n<List>\n\n  <li>\n\n  Laden Sie das Bild von [64-Bit Ubuntu Server 22.04 LTS](https://ubuntu.com/download/raspberry-pi) oder neuer für Raspberry Pi herunter.\n  </li>\n\n  <li>\n\n  Laden Sie ein Tool zum Schreiben von Abbilddateien namens [Raspberry Pi Imager](https://www.raspberrypi.com/software/) auf Ihren Computer herunter und installieren Sie es.\n  </li>\n\n  <li>\n\n  Legen Sie die SD-Karte ein und starten Sie den Raspberry Pi Imager. Wählen Sie das erforderliche Bild (das Sie gerade heruntergeladen haben) als Betriebssystem aus und stellen Sie sicher, dass Sie Ihre SD-Karte aus dem Speicher-Dropdown-Menü auswählen.\n\n  </li>\n\n  <li>\n\n  Öffnen Sie die Einstellungen und aktivieren Sie die Option <code>SSH aktivieren</code> mit dem Parameter <code>Passwortauthentifizierung verwenden</code>.\n\n  \\- Fügen Sie im Abschnitt <code>Benutzername und Passwort festlegen</code> Benutzername und Passwort für Ihren Raspberry Pi-Benutzer hinzu.\n\n  \\- Geben Sie im Abschnitt <code>Wireless LAN konfigurieren</code> Ihr WLAN mit seinem Passwort ein und wählen Sie Ihr Land aus der Dropdown-Liste aus. Klicken Sie dann auf <code>Schreiben</code>.\n\n  <robo-academy-note type=\"okay\">\n  Stellen Sie sicher, dass Sie Ihren tatsächlichen WLAN-Namen und Ihr WLAN-Passwort eingeben.\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  Warten Sie, bis der Schreibvorgang abgeschlossen ist, legen Sie dann die SD-Karte in den Raspberry Pi ein und schalten Sie ihn ein. Er sollte sich mit Ihrem WLAN-Netzwerk verbinden, was einige Zeit in Anspruch nehmen wird.\n\n  </li>\n  \n  <li>\n\n  Jetzt müssen Sie die Adresse des Geräts finden. Dazu können Sie verschiedene Methoden für die Netzwerkscannung verwenden, wie z.B. [Fing App](https://www.fing.com/products), den Befehl <code>arp -a</code> oder [nmap](https://nmap.org/download.html). Letzteres wird als nächstes verwendet.\n\n  Installieren Sie nmap mit einem Befehl\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  Dann finden Sie Ihre Adresse in Ihrem lokalen Netzwerk. Es sollte so aussehen: <code>192.168.xxx.xxx</code> oder <code>172.xxx.xxx.xxx.</code> Achten Sie darauf, da nmap viele Adressen in Ihrem lokalen Netzwerk finden kann.\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  Scannen Sie dann Ihr Netzwerk wie unten gezeigt und ersetzen Sie den letzten Oktett der Adresse durch <code>0</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  Die Ausgabe des Befehls wird ungefähr so aussehen:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  In diesem Beispiel lautet die Adresse <code>192.168.43.56.</code>\n\n  </li>\n\n  <li>\n\n  Verbinden Sie sich über SSH mit der gefundenen IP mit dem Raspberry Pi. Verwenden Sie den Benutzernamen und das Passwort, die Sie zuvor erstellt haben.\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  Weitere Anweisungen werden über SSH auf dem Raspberry Pi selbst ausgeführt.\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nInstallation des Home Assistant\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\nEinige unten gezeigte Softwareversionen können veraltet sein. Für die neuesten Versionen können Sie sich auf das [Installations-Repository für das Robonomics Home Assistant-Image](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage) beziehen.\n\n  </robo-academy-note>\n\n  Bevor Sie beginnen, aktualisieren Sie das Raspberry Pi-System und installieren Sie die erforderlichen Pakete. Während der Installation wird ein Fenster mit der Aufforderung zur Dienstneustart angezeigt. Wählen Sie einfach <span class=\"accent\">ok</span> mit der <code>tab</code>-Taste und drücken Sie die Eingabetaste.\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  Erstellen Sie den Benutzer <code>homeassistant</code> und das Verzeichnis für Home Assistant Core:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Erstellen Sie eine virtuelle Umgebung für Home Assistant Core und wechseln Sie zu dieser. Dies sollte als Benutzer <code>homeassistant</code> erfolgen, sodass Ihr Benutzer nach Ausführung der Befehle wie folgt aussieht: <code>(homeassistant) homeassistant@ubuntu</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  Als Ergebnis finden Sie einen Namen der virtuellen Umgebung in den Klammern:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  Installieren Sie die erforderlichen Python-Pakete:\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  Starten Sie Home Assistant Core zum ersten Mal. Dadurch wird die Installation abgeschlossen, indem automatisch das Konfigurationsverzeichnis <code class=\"nowb\">.homeassistant</code> im Verzeichnis <code>/home/homeassistant</code> erstellt und alle grundlegenden Abhängigkeiten installiert werden:\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Während das erste Setup läuft, überprüfen Sie Ihre Installation über die Weboberfläche unter <code>http://%RASPBERRY_IP_ADDRESS%:8123</code>. In diesem Beispiel: <code>http://192.168.43.56:8123</code>. Sie können eine Weboberfläche von jedem Computer aus öffnen, der mit Ihrem lokalen Netzwerk verbunden ist.\n\n  Warten Sie, bis Sie das Begrüßungsfenster mit der Login-/Passworterstellung erhalten, und beenden Sie dann Home Assistant mit <code>Ctrl+C</code>.\n  </li>\n</List>\n</li>\n\n<li>\n\nIPFS-Installation\n\n<List>\n\n  <li>\n\n  Für die IPFS-Installation können Sie unser Skript verwenden, um IPFS herunterzuladen und einen systemd-Dienst damit zu erstellen. Verlassen Sie zunächst die virtuelle Umgebung für Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  Führen Sie dann aus:\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nSystemd-Dienste\n\n<List>\n\n<li>\n\nSystemd-Dienst ist nützlich zur Automatisierung des Starts von Home Assistant. Erstellen Sie einen neuen Dienst für Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nFügen Sie folgendes ein\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAktivieren und starten Sie den Dienst:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nRobonomics-Integration\n\n<List>\n\n<li>\n\nMelden Sie sich als <code>homeassistant</code>-Benutzer auf Ihrem Raspberry Pi an:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAktivieren Sie die virtuelle Umgebung und installieren Sie die erforderlichen Python-Pakete:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nGehen Sie dann zum Verzeichnis <code>.homeassistant</code>, erstellen Sie den Ordner <code class=\"nowb\">custom_components</code> und klonen Sie dort das Repository mit der Integration:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nDanach den Benutzer homeassistant verlassen und den Dienst neu starten:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"de/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}