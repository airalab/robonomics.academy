{"hash":"fb855303e98f8d6a9c2935c7d4b2b49dce4270d3","data":{"course":{"id":"a027ae4aaf712a92ab29a31622000f22","courseID":3,"title":"Lesson #4a, Gateway Setup: Zigbee2MQTT","description":"home assistant course","content":"\n\n<section class=\"container__reg\">\n\n## Intro\n\nThis is a scenario setup for connecting devices using the Zigbee adapter and the Zigbee2MQTT bridge. If you have the [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (which has all of the necessary firmware), you can simply proceed with these instructions. However, if you have another adapter, the first thing you need to do is to flash it with Zigbee2MQTT software. You can find instructions for your device [here](https://www.zigbee2mqtt.io/guide/adapters/).\n\nYou will also need a smart device to test its connection to Home Assistant.\n\n</section>\n\n<section class=\"container__reg\">\n\n## Instructions\n\n<List type=\"numbers\">\n\n<li>\n\nConnecting and Configuring the Adapter\n\n<List>\n\n<li>\n\nConnect the Zigbee adapter to Raspberry Pi. Then you need to find the location of the stick. For this type in the next command:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nls -l /dev/serial/by-id\n</LessonCodeWrapper>\n\nOutput should look like:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon>\nubuntu@ubuntu:~$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n</LessonCodeWrapper>\n\nIn this example stick connection directory is — <code>ttyUSB0</code>.\n</li>\n\n<li>\n\nEdit the <code>configuration.yaml</code> file before starting Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnano /opt/zigbee2mqtt/data/configuration.yaml\n</LessonCodeWrapper>\n\nThe basic configuration needs a few adjustments. Change the following statements:\n\n< <code>homeassistant:</code> to <code>true</code> it will automatically connect sensors to Home Assistant;\n\n< uncomment <code>user</code> and <code>password</code> under <code>mqtt</code> and enter your username and password (as a string, with quotes) from MQTT Broker;\n\n< change port in <code>serial -> port</code> to stick connection directory. In this example — <code>/dev/ttyUSB0</code>.\n\nAdjusted configuration file should look like:\n\n<LessonCodeWrapper language=\"yaml\">\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n# allow new devices to join\npermit_join: true\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: {YOUR_USERNAME}\n  password: {YOUR_PASSWORD}\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/{YOUR_PORT}\n</LessonCodeWrapper>\n\n\n**Extra:**\n\nIf you already have an active Zigbee adapter or gateway in your home, and you are now configuring another stick, then they will conflict with each other. To solve this problem you need to change the channel on the new device. For this add the following strings to the end of configuration file:\n\n\n<LessonCodeWrapper language=\"yaml\" codeClass=\"big-code\">\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nStart Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd /opt/zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnpm start\n</LessonCodeWrapper>\n\nIf started successfully, you will see something like:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-1.jpg\" alt=\"code\"/>\n</li>\n</List>\n</li>\n\n<li>\n\nPairing Device\n\n<List>\n\n<li>\n\nIt's time to connect your smart device. The most common way to switch a device to connect mode is to hold its power button or switch them on/off 5 times. Make sure Zigbee2MQTT is running.\n\nWhen the device connects, you should see a message like:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n</LessonCodeWrapper>\n\nRemember the ID of the sensor: in this example — <code>0x00158d0003eeeacf</code>.\n\nNow you should see this sensor with ID in your Home Assistant WebUI. Go to <code>Setting</code> -> <code>Devices & Services</code> -> <code>Devices</code> to check it:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-2.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n\nAfter adding all the sensors, you can stop the program with <code>Ctrl+C</code>. If you don’t want to add any more devices, you can open the configuration file again and set <code>permit_join:</code> to <code>false</code>.\n</li>\n\n<li>\n\nNow you need to create a service. Create the file:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n</LessonCodeWrapper>\n\nAdd the following to this file:\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target \n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=ubuntu\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nVerify that the configuration works:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl start zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsystemctl status zigbee2mqtt.service\n</LessonCodeWrapper>\n\nOutput should look like:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-3.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n</li>\n\n<li>\n\nEnable the service to start Zigbee2MQTT automatically on boot:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl enable zigbee2mqtt.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n</List>\n</section>","fileInfo":{"path":"en/online-courses/smart-home-course/4-a-gateway-setup-zigbee2mqtt.md","name":"4-a-gateway-setup-zigbee2mqtt"},"lessonNumber":4}},"context":{}}