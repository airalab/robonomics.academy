{"hash":"38d00f5ce0b34e89f5f33ff65026c37e182f6828","data":{"course":{"id":"636c2bdf50cdd8b3c204c0daace6c022","title":"Connect Kuka manipulator","description":"Connect Manipulator","content":"\nVideo with an example of work can be found here:\n\nhttps://youtu.be/z55HepXbHr8\n\n<br/>\n\n***\n\n<br/>\n\n## Requirements\n\n<List>\n\n<li class=\"flex\">\n\nROS melodic, Gazebo (installation instraction [here](http://wiki.ros.org/melodic/Installation/Ubuntu))\n</li>\n\n<li>Some extra packages\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li> IPFS 0.4.22 \n\n(download from [here](https://www.npackd.org/p/ipfs/0.4.22) and install)\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ntar -xvzf go-ipfs_v0.4.22_linux-386.tar.gz\ncd go-ipfs/\nsudo bash install.sh\nipfs init\n</LessonCodeWrapper>\n\n</li>\n\n<li>pip3\n\n<LessonCodeWrapper language=\"bash\">\nsudo apt-get install python3-pip\n</LessonCodeWrapper>\n\n</li>\n\n<li>ipfshttpclient\n\n<LessonCodeWrapper language=\"bash\">\npip3 install ipfshttpclient\n</LessonCodeWrapper>\n\n</li>\n\n<li>substrate-interface\n\n<LessonCodeWrapper language=\"bash\">\npip3 install substrate-interface\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nRobonomics node (binary file) (download latest release [here](https://github.com/airalab/robonomics/releases))\n\n</li>\n\n<li>IPFS browser extension (not necessary)</li>\n\n</List>\n\n<br/>\n\n***\n\n<br/>\n\n## Installation\nInstall Kuka manipulator and control packages\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">cd catkin_wc/src/\ngit clone https://github.com/orsalmon/kuka_manipulator_gazebo\ngit clone https://github.com/LoSk-p/kuka_controller\ncd ..\ncatkin_make</LessonCodeWrapper>\n\n***\n\n<br/>\n\n## Running gazebo model\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsource ~/catkin_ws/devel/setup.bash\nroslaunch manipulator_gazebo manipulator_empty_world.launch\n</LessonCodeWrapper>\n\nIn a new window\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun manipulator_gazebo move_arm_server\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/1.png\" alt=\"model\"/>\n\n***\n\n<br/>\n\n## Running robonomics\nGo to the folder with robonomics file ad create a local robonomics network:\n\n<LessonCodeWrapper language=\"bash\">\n./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/robonomics.png\" alt=\"robonomics\"/>\n\nGo to [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) and switch to local node\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/local.png\" alt=\"local\"/>\n\nThen go to Accounts and create `KUKA` account. Save account's mnemonic key, you will need it later. \n\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/create_acc.png\" alt=\"acc\"/>\n\nSend some units to the new account from one of default accounts.\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/send_money.png\" alt=\"accs\"/>\n\n***\n<br/>\n\n## Running ipfs\nRun ipfs daemon:\n\n<LessonCodeWrapper language=\"bash\">\nipfs daemon\n</LessonCodeWrapper>\n\n***\n\n</br>\n\n## Running control package\nIn config directory in kuka_control package you need to create config file with this lines, where `<your_mnemonic>` is saved mnemonic seed:\n\n<LessonCodeWrapper language=\"bash\">\n{\n    \"kuka_mnemonic\": \"[your_mnemonic]\",\n    \"node\": \"ws://127.0.0.1:9944\"\n}\n</LessonCodeWrapper>\n\n\nNow you can run control script:\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun kuka_controller move_arm_client.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/run.png\" alt=\"control\"/>\n\n## Sending transaction\nIn [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) go to `Developer/Extrinsics`, change `extrinsic` to `launch`. Chose your `KUKA` account in `robot` and change `param` to `Yes`. The press `Submit Transaction`\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/launch.png\" alt=\"transaction\"/>\n\nIn the window with kuka_control package you will see:\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/res.png\" alt=\"done\"/>\n\nThen go `Developer/Chain State` on the Robonomics portal, select `datalog` and `datalogItem((AccountId,u64)): RingBufferItem` in query and add `KUKA` datalog with button '+':\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/datalog.png\" alt=\"datalog\"/>\n\nNow you can find robot's telemetry in IPFS via this link with your hash `https://gateway.ipfs.io/ipfs/<hash>`.\n\n## Troubleshooting\n\nIf `catkin_make` doesn't work with the message that it can't find MoveArm.h, try to remove last four lines in CMakeLists.txt in kuka_manipulator_gazebo package:\n\n<LessonCodeWrapper language=\"yaml\">\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(move_arm_server src/move_arm_server.cpp)\ntarget_link_libraries(move_arm_server ${catkin_LIBRARIES})\nadd_dependencies(move_arm_server beginner_tutorials_gencpp)\n</LessonCodeWrapper>\n\nDo `catkin_make` without these lines, then returm them and do `catkin_make` again.","fileInfo":{"path":"en/learn/kuka/overview.md","name":"overview"},"defaultName":"Connect Kuka manipulator","lastUpdate":null}},"context":{}}