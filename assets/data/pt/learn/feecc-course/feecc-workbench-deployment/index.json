{"hash":"e32ec6aa0237b51fe496ef5a5df720ef84304a93","data":{"course":{"id":"968e6531b94eae09c3e7c3538c965fc5","title":"Implantação do Engineer Workbench","description":"Este curso é tudo sobre conhecer o sistema Feecc e todos os seus componentes.","content":"\n<RoboAcademyText fWeight=\"500\">\nNesta lição, você aprenderá como implantar os componentes necessários do Feecc Engineer Workbench sozinho.\n</RoboAcademyText>\n\nEntre os componentes:\n\n- Daemon do Workbench\n- Frontend do Workbench\n- Gateway IPFS\n- Daemon do Leitor HID\n\nTodos os componentes são iniciados usando [Docker](https://docs.docker.com/engine/install/ubuntu/) e [Docker compose](https://docs.docker.com/compose/), certifique-se de ter eles instalados.\n\n## Preparação do Software\n\n1. Os componentes da Feecc usam o banco de dados [MongoDB](https://www.mongodb.com/) para armazenar e acessar dados. Antes de usar a Feecc, você precisa implantar o MongoDB da maneira que for conveniente para você. Aqui estão algumas opções de implantação: [usando seu próprio servidor](https://www.mongodb.com/try/download/community), [banco de dados na nuvem no Atlas](https://www.mongodb.com/atlas) (gratuito), [banco de dados na nuvem no DigitalOcean](https://www.digitalocean.com/products/managed-databases-mongodb) (pago). \n    \n    De qualquer forma, você precisa obter sua URI de conexão com o MongoDB, que precisará ser inserida como o valor da variável `MONGODB_URI` para todos os componentes do sistema.\n    \n2. Se você deseja aproveitar o armazenamento confiável e transparente de dados do seu sistema de produção, você precisa criar uma conta na Robonomics. Para fazer isso, use as instruções disponíveis no seguinte link: https://wiki.robonomics.network/docs/create-account-in-dapp/\n    \n    Você precisa salvar a frase-semente da conta, pois ela será usada posteriormente na variável `ROBONOMICS_ACCOUNT_SEED`.\n\n## Preparação do Workbench\n\nAntes de começar, conecte todo o equipamento necessário ao computador ou servidor:\n\n- impressora de etiquetas usando USB\n- leitores de RFID/código de barras usando USB\n- câmera IP através de roteador PoE/switch de rede\n- monitor com teclado e mouse ou tela sensível ao toque usando USB e HDMI/VGA (opcional)\n\n## Iniciando o Daemon do Leitor HID\n\n1. Clonar o repositório:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon.git\ncd feecc-hid-reader-daemon\n</LessonCodeWrapper>\n\n2. Inicie o daemon:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Iniciando o Daemon do Workbench\n\n1. Clone o repositório:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-daemon.git\ncd feecc-workbench-daemon\n</LessonCodeWrapper>\n\n2. Configure o daemon de acordo com suas necessidades usando o arquivo `docker-compose.yml`. O arquivo contém várias variáveis de ambiente:\n\n    - Configuração do MongoDB;\n    - Configuração do Robonomics;\n    - Configuração do IPFS;\n    - parâmetros da impressora;\n    - parâmetros da câmera;\n    - parâmetros dos leitores de RFID / código de barras.\n    \n    A lista completa de variáveis está disponível no repositório do daemon [aqui](https://github.com/Multi-Agent-io/feecc-workbench-daemon). Os seguintes parâmetros são obrigatórios:\n    \n    - `MONGODB_URI`: sua URI de conexão com o MongoDB;\n    - `MONGODB_DB_NAME`: um nome de banco de dados do MongoDB;\n    - `WORKBENCH_NUMBER`: número do workbench do funcionário.\n\n3. Inicie o daemon:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Verifique sua funcionalidade. Vá para o navegador e abra a página `http://127.0.0.1:5000/docs`, que deve conter a documentação da interface de API REST do sistema. Se a página não estiver disponível, então o servidor não foi iniciado corretamente. Verifique os logs dentro do contêiner para erros, corrija-os e repita as etapas de construção e execução.\n\n## Lançando o Gateway IPFS\n\n1. Clone o repositório:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git\n</LessonCodeWrapper>\n\n\n2. Configure o microsserviço de acordo com suas necessidades usando o arquivo `docker-compose.yml`. O arquivo contém variáveis de ambiente para conexão com MongoDB, Robonomics e Pinata. A lista completa de variáveis está disponível no [repositório](https://github.com/Multi-Agent-io/feecc-ipfs-gateway) do gateway.\n\n3. Inicie o microsserviço:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Lançando o Frontend do Workbench\n\n1. Clone o repositório:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git\n</LessonCodeWrapper>\n\n2. Vá para o diretório `configs` e configure o serviço frontend de acordo com suas necessidades usando o arquivo `config.json`. Os seguintes parâmetros são particularmente importantes:\n    - `socket` — insira o endereço do Workbench Daemon aqui;\n    - `interface_language` — idioma da interface, opções disponíveis `en` e `ru`;\n    - `dev_show_reducers` — habilitando/desabilitando o modo desenvolvedor;\n    - `pulling_period` — período de recebimento de dados do backend em milissegundos;\n\n3. Iniciar o contêiner frontend:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Verifique sua funcionalidade. Vá para o navegador e abra a página `http://localhost:3000`, você deverá ver uma página de autorização.\n\n<RoboAcademyText fWeight=\"500\">\nNa próxima lição, passaremos pelo serviço de Análise Feecc.\n</RoboAcademyText>","fileInfo":{"path":"pt/learn/feecc-course/feecc-workbench-deployment.md","name":"feecc-workbench-deployment"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}