{"hash":"e32ec6aa0237b51fe496ef5a5df720ef84304a93","data":{"course":{"id":"ac99565fa70d3748d51ae8eaa0d0e729","title":"Demonstração do Feecc","description":"Este curso é tudo sobre conhecer o sistema Feecc e todos os seus componentes.","content":"\n<RoboAcademyText fWeight=\"500\">\nNesta lição, você testará as funções básicas do Feecc usando um ambiente de teste virtual como exemplo, que emula uma instância da vida real de um sistema de rastreamento de produção.\n</RoboAcademyText>\n\nPara fins de demonstração, ele não possui algumas características típicas como impressão de etiquetas ou gravação de vídeo, mas mantém o conceito principal de tal sistema.\n\n## Pré-requisitos\n\nPara executar a demonstração, você precisará:\n\n- Sistema semelhante ao UNIX (testado no [Ubuntu 22.04.2](https://releases.ubuntu.com/jammy/)\n- [Docker](https://docs.docker.com/engine/install/ubuntu/) e [Docker compose](https://docs.docker.com/compose/)\n- Navegador da web (testado no Google Chrome e Mozilla Firefox)\n\n## Instalação\n\nExecute os seguintes comandos:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-academy\ncd feecc-academy\nsudo docker compose up -d --build\n</LessonCodeWrapper>\n\nPara verificar os contêineres em funcionamento, execute o seguinte:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker ps -a\n</LessonCodeWrapper>\n\nVocê deve ver a seguinte saída:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\nCONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS                             PORTS     NAMES\n0db8382bb271   feecc-academy-workbench-daemon      \"uvicorn app:app --h…\"   19 seconds ago   Up 7 seconds (healthy)                       feecc_academy_workbench_daemon\n0dbc7bb977d1   feecc-academy-workbench-frontend    \"node nodeServer.js\"     20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_workbench_frontend\na74fa229eb90   robonomics/robonomics:sha-bd71a23   \"robonomics --dev --…\"   20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_robonomics_node\n0c9e8022658a   mongo:jammy                         \"docker-entrypoint.s…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_mongoDB\n6b0748904d0f   ipfs/go-ipfs:v0.17.0                \"/sbin/tini -- /usr/…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_ipfsnode\n814e6f489a77   nyurik/alpine-python3-requests      \"tail -f /dev/null\"      20 seconds ago   Up 19 seconds                                feecc_academy_hid_emulator\n</LessonCodeWrapper>\n\n## Iniciando a demonstração\n\n1. Acesse http://localhost:3000/ em seu navegador, você deve ver uma tela de boas-vindas.\n\n2. Nesta etapa, o sistema deve solicitar ao funcionário que coloque seu cartão RFID no scanner para autorização. Na demonstração, você pode usar `hid-emulator.py` para autorização. Para fazer isso, execute um contêiner Docker separado:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker exec -ti feecc_academy_hid_emulator sh\npython3 hid-emulator.py\n</LessonCodeWrapper>\n\nEle é capaz de emular duas funções: fornecer um cartão RFID e escanear um código de barras; você precisa da primeira função, digite `1`.\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n> Select emulated action (1/2): \n>  1. Put ID card on the Scanner RFID.\n>  2. Scan a sample barcode with a barcode scanner.\n> 1\n> INFO:2023-03-21 21:42:05,370:Event relayed to endpoint http://127.0.0.1:5000/workbench/hid-event\n</LessonCodeWrapper>\n\n3. Você verá a tela para selecionar o tipo de composição, escolha `DISPOSITIVO ÚNICO`.\n\n<LessonImages src=\"feecc-course/menu.png\" alt=\"Feecc start menu\"/>\n\n4. Notificações aparecerão no canto inferior esquerdo indicando o início do trabalho no dispositivo para o qual um ID único é criado. A notificação azul também exibirá a atividade da impressora virtual; na configuração real, um código de barras com o ID do dispositivo é impresso neste momento.\n\n<LessonImages src=\"feecc-course/single_device.png\" alt=\"Single device composition\"/>\n\n5. Clique em `INICIAR COMPOSIÇÃO` para começar a gravar o processo de montagem do dispositivo. Você será solicitado a passar por todas as etapas de montagem necessárias; cada vez que um funcionário completar uma etapa, ele deve clicar no botão `PRÓXIMO`, após o qual o vídeo será salvo no IPFS. Também é possível suspender a montagem (`PAUSAR`) para retornar a ela mais tarde ou interromper o processo completamente (`PARAR`).\n\n6. Quando todas as etapas de montagem estiverem concluídas, o botão `FINALIZAR` aparece, após o qual o Feecc sugere salvar o certificado do dispositivo. No entanto, antes de fazer isso, abra o [nó Robonomics local](https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer) em seu navegador, você precisará dele mais tarde. Depois disso, retorne ao Feecc e clique em `SALVAR PASSAPORTE`.\n    \n    Você verá novas notificações no canto da tela: notificação de que o certificado foi enviado para Robonomics e IPFS, bem como duas mensagens azuis sobre a impressão da etiqueta de selo e o QR-code que leva ao certificado.\n\n<LessonImages src=\"feecc-course/single_certificate.png\" alt=\"Cetrificate of single composition\"/>\n\n7. Na seção `Informações da cadeia` na tela do nó local do Robonomics, você deverá ver um novo evento `datalog.NewRecord` na coluna `eventos recentes`. Se você expandir, o CID do IPFS correspondente ao arquivo de certificado do dispositivo será mostrado no campo `bytes`.\n\n<LessonImages src=\"feecc-course/single_datalog.png\" alt=\"Datalog of single composition\"/>\n\nO código QR impresso contém um link para este CID, que permite abrir o arquivo de certificado no navegador. Como o seu nó IPFS local pode não ter essa descoberta, você pode acessar o arquivo localmente com `localhost:8080/ipfs/CID.` O conteúdo do certificado se parece com algo assim:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: 423d3c1b42f6427e80cc881a16e07451\nUnit Model Name: Single Device\nTotal Assembly Time: 0:05:37\nProduction Stages:\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:38:47\n  Finish Time: 26-06-2023 17:40:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:40:30\n  Finish Time: 26-06-2023 17:42:06\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:42:16\n  Finish Time: 26-06-2023 17:43:00\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Saw Through the Single Device\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:00\n  Finish Time: 26-06-2023 17:43:51\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:51\n  Finish Time: 26-06-2023 17:44:36\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n</LessonCodeWrapper>\n\n8. Vamos agora tentar criar um certificado para uma montagem composta consistindo de vários dispositivos. No menu de seleção de tipo, clique em `DISPOSITIVO COMPOSTO`, e depois em `DISPOSITIVO DE AMOSTRA`. Copie seu ID de unidade (localizado no campo Número de composição), pois você precisará dele mais tarde. Em seguida, prossiga com as etapas padrão para montar o dispositivo.\n\n9. Após a montagem, volte para `DISPOSITIVO COMPOSTO` e pressione `MONTAGEM FINAL` para finalizar a montagem composta. O sistema pedirá que você forneça o ID de unidade dos dispositivos montados, para o qual o funcionário deve escanear seu código de barras. Para simular esse processo, volte para `hid-emulator.py` e selecione a função `2` para escaneamento de código de barras, e insira o ID de unidade salvo lá.\n\n10. Em seguida, o sistema solicitará passar pelas etapas necessárias da montagem composta e gerar um certificado para isso:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: d08101feae7c4efbb5529885c9ad544b\nUnit Model Name: Composite Device\nTotal Assembly Time: 0:00:03\nProduction Stages:\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:25\n  Finish Time: 26-06-2023 18:18:26\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Tape the Sample Device to the base plate\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:26\n  Finish Time: 26-06-2023 18:18:27\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:27\n  Finish Time: 26-06-2023 18:18:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\nUnit Components:\n- Unit Unique Code: b165b382c3674127a6aaf5817c5a7040\n  Unit Model Name: Sample Device\n  Total Assembly Time: 0:00:03\n  Production Stages:\n  - Name: Prepare Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:45\n    Finish Time: 26-06-2023 18:17:46\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Assemble Sample Device\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:46\n    Finish Time: 26-06-2023 18:17:47\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Stack Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:47\n    Finish Time: 26-06-2023 18:17:48\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\nTotal Assembly Time (Including Components): 0:00:06\n</LessonCodeWrapper>\n\n11. Para excluir a demonstração, insira o comando:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker compose down --rmi all && docker builder prune -f\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"500\">\nNo próximo lição, procederemos à implantação real de todos os componentes necessários do sistema Feecc.\n</RoboAcademyText>","fileInfo":{"path":"pt/learn/feecc-course/feecc-workbench-demo.md","name":"feecc-workbench-demo"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}