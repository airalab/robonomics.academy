{"hash":"b245a40217fbced1639aa527710a032ddca236bc","data":{"course":{"id":"4ac9d37d831dae8d744973cb8badd92c","title":"Lição #4a, Configuração do Gateway: Zigbee2MQTT","description":"curso de assistente doméstico","content":"\n## Introdução\n\nEste é um cenário de configuração para conectar dispositivos usando o adaptador Zigbee e a ponte Zigbee2MQTT. Se você tiver o [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (que possui todo o firmware necessário), você pode simplesmente seguir estas instruções. No entanto, se você tiver outro adaptador, a primeira coisa que você precisa fazer é flashá-lo com o software Zigbee2MQTT. Você pode encontrar instruções para o seu dispositivo [aqui](https://www.zigbee2mqtt.io/guide/adapters/).\n\nVocê também precisará de um dispositivo inteligente para testar sua conexão com o Home Assistant.\n\n\n## Instruções\n\n<List type=\"numbers\">\n\n<li>\n\nInstalação de Software\n\n<List>\n\n  <li>\n    Configure o repositório do ambiente de execução Node.js e instale-o com as dependências necessárias:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - </LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install -y nodejs git make g++ gcc</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n    Verifique se as versões corretas do Node.js (v14.X, V16.x, V17.x ou V18.X) e do gerenciador de pacotes <code class=\"nowb\">npm</code> (6.X, 7.X ou 8.X) instalados automaticamente com o Node.js, foram instalados:\n    <LessonCodeWrapper language=\"bash\" noLines>node --version</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm --version</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Crie um diretório para o Zigbee2MQTT e defina seu usuário como proprietário dele:\n    <LessonCodeWrapper language=\"bash\" noLines>sudo mkdir /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo chown -R ${USER}: /opt/zigbee2mqtt</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Clone o repositório Zigbee2MQTT:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\n    git clone --depth 1 --branch 1.28.4 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n    </LessonCodeWrapper>\n  </li>\n\n  <li>\n    Instale as dependências. Note que o <code>npm ci</code> pode produzir alguns avisos que podem ser ignorados.\n    <LessonCodeWrapper language=\"bash\" noLines>cd /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm ci</LessonCodeWrapper>\n  </li>\n\n</List>\n</li>\n\n<li>\n\nConectando e Configurando o Adaptador\n\n<List>\n\n<li>\n\nConecte o adaptador Zigbee ao Raspberry Pi. Em seguida, você precisa encontrar a localização do stick. Para isso, digite o próximo comando:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nls -l /dev/serial/by-id\n</LessonCodeWrapper>\n\nA saída deve se parecer com:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon>\nubuntu@ubuntu:~$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n</LessonCodeWrapper>\n\nNeste exemplo, o diretório de conexão do stick é <code>ttyUSB0</code>.\n</li>\n\n<li>\n\nEdite o arquivo <code>configuration.yaml</code> antes de iniciar o Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnano /opt/zigbee2mqtt/data/configuration.yaml\n</LessonCodeWrapper>\n\nA configuração básica precisa de alguns ajustes. Altere as seguintes declarações:\n\n\\- <code>homeassistant:</code> para <code>true</code>, ele conectará automaticamente os sensores ao Home Assistant;\n\n\\- descomente <code>user</code> e <code>password</code> sob <code>mqtt</code> e insira seu nome de usuário e senha (como uma string, com aspas) do Broker MQTT;\n\n\\- altere a porta em <code>serial</code> -> <code>port</code> para o diretório de conexão do stick. Neste exemplo: <code>/dev/ttyUSB0</code>.\n\nO arquivo de configuração ajustado deve parecer com:\n\n<LessonCodeWrapper language=\"yaml\">\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n# allow new devices to join\npermit_join: true\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: 'YOUR_USERNAME'\n  password: 'YOUR_PASSWORD'\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/YOUR_PORT\n</LessonCodeWrapper>\n\n\n**Extra:**\n\nSe você já tem um adaptador Zigbee ou gateway ativo em sua casa, e agora está configurando outro stick, então eles entrarão em conflito um com o outro. Para resolver esse problema, você precisa alterar o canal no novo dispositivo. Para isso, adicione as seguintes strings ao final do arquivo de configuração:\n\n\n<LessonCodeWrapper language=\"yaml\" codeClass=\"big-code\">\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nIniciar Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd /opt/zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnpm start\n</LessonCodeWrapper>\n\nSe iniciado com sucesso, você verá algo como:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-1.jpg\" alt=\"code\"/>\n</li>\n</List>\n</li>\n\n<li>\n\nParear Dispositivo\n\n<List>\n\n<li>\n\nÉ hora de conectar seu dispositivo inteligente. A maneira mais comum de colocar um dispositivo no modo de conexão é segurar seu botão de energia ou ligar/desligar 5 vezes. Certifique-se de que o Zigbee2MQTT está em execução.\n\n<LessonImages src=\"smart-house-course/lesson-4-a-4.gif\" alt=\"code\" imageClasses=\"mb\"/>\n\nQuando o dispositivo se conectar, você deverá ver uma mensagem como:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n</LessonCodeWrapper>\n\nLembre-se do ID do sensor: neste exemplo - <code>0x00158d0003eeeacf</code>.\n\nAgora você deverá ver este sensor com ID em seu Home Assistant WebUI. Vá para <code>Configuração</code> -> <code>Dispositivos e Serviços</code> -> <code>Dispositivos</code> para verificar:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-2.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n\nApós adicionar todos os sensores, você pode parar o programa com <code>Ctrl+C</code>. Se você não quiser adicionar mais dispositivos, você pode abrir o arquivo de configuração novamente e definir <code>permit_join:</code> para <code>false</code>.\n</li>\n\n</List>\n</li>\n\n<li>\n\nCriando Serviço para Iniciar Automaticamente\n\n<List>\n\n<li>\n\nAgora você precisa criar um serviço. Crie o arquivo:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n</LessonCodeWrapper>\n\nAdicione o seguinte a este arquivo alterando <code>SEU_NOME_DE_USUÁRIO_DO_RASPPI_AQUI</code>. Se você não sabe seu nome de usuário, use o comando <code>whoami</code>.\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target \n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=YOUR_RASPPI_USERNAME_HERE\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nVerifique se a configuração funciona:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl start zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsystemctl status zigbee2mqtt.service\n</LessonCodeWrapper>\n\nA saída deve se parecer com:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-3.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n</li>\n\n<li>\n\nAtive o serviço para iniciar o Zigbee2MQTT automaticamente na inicialização:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl enable zigbee2mqtt.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n</List>","fileInfo":{"path":"pt/learn/smart-home-course/gateway-setup-zigbee2mqtt.md","name":"gateway-setup-zigbee2mqtt"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:33 GMT+0400 (Samara Standard Time)"}},"context":{}}