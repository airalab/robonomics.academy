{"hash":"b245a40217fbced1639aa527710a032ddca236bc","data":{"course":{"id":"4412c34ad31a3c483e986d2bb669ff08","title":"Lição #2, Configuração do Raspberry Pi","description":"curso de assistente doméstico","content":"\n## Introdução\n\nNesta li��o, voc� ir� preparar o seu Raspberry Pi para se tornar um hub IoT. Voc� ir� instalar e configurar sequencialmente todos os componentes necess�rios, a saber:\n\n<List>\n\n- Distribui��o Ubuntu Linux para Raspberry Pi como sistema operacional de servidor;\n- Pacotes Home Assistant;\n- Pacotes IPFS;\n- biblioteca robonomics-interface.\n\n</List>\n\n## Instruções\n\n<List type=\"numbers\">\n\n<li>\n\nPreparando e Configurando o Raspberry Pi\n\n<List>\n\n  <li>\n\n  Baixe a imagem do [Ubuntu Server 22.04 LTS de 64 bits](https://ubuntu.com/download/raspberry-pi) ou mais recente para Raspberry Pi.\n  </li>\n\n  <li>\n\n  Baixe e instale uma ferramenta para escrever arquivos de imagem chamada [Raspberry Pi Imager](https://www.raspberrypi.com/software/) no seu computador.\n  </li>\n\n  <li>\n\n  Insira o cart�o SD e execute o Raspberry Pi Imager. Selecione a imagem necess�ria (que voc� acabou de baixar) como sistema operacional e certifique-se de selecionar seu cart�o SD no menu suspenso de armazenamento.\n\n  </li>\n\n  <li>\n\n  Abra as configura��es e marque a op��o <code>Ativar SSH</code> com o par�metro <code>Usar autentica��o de senha</code>.\n\n  \\- Em <code>Definir nome de usu�rio e senha</code> adicione nome de usu�rio e senha para o usu�rio do seu Raspberry Pi.\n\n  \\- Em <code>Configurar LAN sem fio</code> forne�a sua rede Wi-Fi com sua senha e escolha seu pa�s na lista suspensa. Em seguida, <code>Escreva</code> a imagem.\n\n  <robo-academy-note type=\"okay\">\n  Certifique-se de inserir o nome real da sua rede Wi-Fi e a senha da sua rede Wi-Fi.\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  Aguarde at� que termine a grava��o, em seguida insira o cart�o SD no Raspberry Pi e ligue-o. Deve se conectar � sua rede Wi-Fi, o que levar� algum tempo.\n\n  </li>\n  \n  <li>\n\n  Agora voc� precisa encontrar o endere�o do dispositivo. Para fazer isso, voc� pode usar v�rios m�todos de varredura de rede, como [Fing App](https://www.fing.com/products), o comando <code>arp -a</code> ou [nmap](https://nmap.org/download.html). Este �ltimo ser� usado em seguida.\n\n  Instale o nmap com um comando\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  Em seguida, encontre o endereço na sua rede local. Deve parecer com <code>192.168.xxx.xxx</code> ou <code>172.xxx.xxx.xxx.</code> Preste atenção, pois o nmap pode encontrar muitos endereços na sua rede local.\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  Em seguida, escaneie sua rede conforme mostrado abaixo, substituindo o último octeto do endereço por <code>0</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  A saída do comando será algo assim:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  Neste exemplo, o endereço é <code>192.168.43.56.</code>\n\n  </li>\n\n  <li>\n\n  Conecte-se ao Raspberry Pi via SSH com o IP encontrado. Use o nome de usuário e senha que você criou anteriormente.\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  Instruções adicionais são executadas via SSH no próprio Raspberry Pi.\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nInstalação do Home Assistant\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\nAlgumas versões de software mostradas abaixo podem estar desatualizadas. Para as versões mais recentes, você pode consultar o [repositório de instalação da imagem Robonomics Home Assistant](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage).\n\n  </robo-academy-note>\n\n  Antes de começar, atualize o sistema do Raspberry Pi e instale os pacotes necessários. Durante a instalação, você verá uma janela com solicitação de reinicialização do serviço. Basta escolher <span class=\"accent\">ok</span> com o botão <code>tab</code> e pressionar enter.\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  Crie o usuário <code>homeassistant</code> e o diretório para o Home Assistant Core:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Crie um ambiente virtual para o Home Assistant Core e mude para ele. Isso deve ser feito como o usuário <code>homeassistant</code>, então após executar os comandos seu usuário parecerá com <code>(homeassistant) homeassistant@ubuntu</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  Como resultado, você encontrará um nome do ambiente virtual entre colchetes:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  Instale os pacotes Python necessários:\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  Iniciar o Home Assistant Core pela primeira vez. Isso completará a instalação criando automaticamente o diretório de configuração <code class=\"nowb\">.homeassistant</code> no diretório <code>/home/homeassistant</code> e instalando quaisquer dependências básicas:\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Enquanto a configuração inicial estiver em andamento, verifique sua instalação através da interface web em <code>http://%RASPBERRY_IP_ADDRESS%:8123</code>. Neste exemplo: <code>http://192.168.43.56:8123</code>. Você pode abrir uma interface web de qualquer computador conectado à sua rede local.\n\n  Aguarde até receber a janela de boas-vindas com a criação de login/senha e então pare o Home Assistant com <code>Ctrl+C</code>.\n  </li>\n</List>\n</li>\n\n<li>\n\nInstalação do IPFS\n\n<List>\n\n  <li>\n\n  Para a instalação do IPFS, você pode usar nosso script para baixar o IPFS e criar um serviço systemd com ele. Primeiro, saia do ambiente virtual do Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  Em seguida, execute:\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nServiços Systemd\n\n<List>\n\n<li>\n\nO serviço systemd é útil para automatizar o lançamento do Home Assistant. Crie um novo serviço para o Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nCole o seguinte\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAtive e inicie o serviço:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nIntegração Robonomics\n\n<List>\n\n<li>\n\nFaça login com o usuário <code>homeassistant</code> no seu Raspberry Pi:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAtive o ambiente virtual de origem e instale os pacotes Python necessários:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nEm seguida, vá para o diretório <code>.homeassistant</code>, crie a pasta <code class=\"nowb\">custom_components</code> e clone lá o repositório com a integração:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nDepois disso, saia do usuário homeassistant e reinicie o serviço:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"pt/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}