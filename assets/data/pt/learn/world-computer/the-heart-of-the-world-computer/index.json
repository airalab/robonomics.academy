{"hash":"b245a40217fbced1639aa527710a032ddca236bc","data":{"course":{"id":"5c3dd2f6f213ada2a0a959b579c0b391","title":"Parte 2: O Coração do Computador Mundial","description":"O que está no cerne de projetos como Ethereum ou Polkadot, ou qualquer outro projeto web3 que reivindique o título de computador mundial, e por que a comparação com o coração no corpo humano se encaixa tão bem na arquitetura abstrata do computador mundial?","content":"\nO que está no cerne de projetos como Ethereum ou Polkadot, ou qualquer outro projeto web3 que reivindique o título de computador mundial, e por que a comparação com o coração no corpo humano se encaixa tão bem na arquitetura abstrata do computador mundial?\n\nVamos tentar entender essas perguntas nesta parte da palestra e, para começar, teremos que quebrar um pouco as correntes dos maximalistas do Bitcoin. Provavelmente, você já leu um ou vários artigos populares de ciência dedicados ao Bitcoin em sua vida, e a principal coisa que é praticamente observada em todos os lugares são as três principais vantagens do Bitcoin como dinheiro eletrônico:\n\n- Resistência à censura\n- Imutabilidade dos dados armazenados no blockchain do Bitcoin\n- Transparência das transações\n\nVamos passar rapidamente por cada uma dessas propriedades e, o mais importante, no final, precisaremos dar um passo para trás um pouco delas, já que o computador mundial as herda como uma espécie de sucessor do Bitcoin.\n\n**Em primeiro lugar**, imutabilidade dos dados. Claro, essa propriedade, do ponto de vista do dinheiro eletrônico, tem vantagens e importância significativas. Depois de enviar uma transação ou receber bitcoins, após um ou dois blocos, você começa a sentir gradualmente a imutabilidade dos dados no blockchain. Nos primeiros 15 minutos, você pode observar, usando um explorador de blockchain, como a transação deve se resolver. Você já a vê na rede, mas não está finalizada, o que significa que esses bitcoins ainda não estão em sua conta. No entanto, após vários blocos, há confiança de que esses fundos não desaparecerão de sua conta. Com o tempo, a probabilidade de os valores serem de alguma forma sobrescritos de sua conta se torna praticamente negligível, reduzindo praticamente a zero. Esta é nossa propriedade de imutabilidade de dados. Como é legal quando você pode compartilhar informações com o destinatário, enviar a eles um link para o explorador de blockchain, e não precisa obter nenhum papel ou documento do banco afirmando que você enviou um pagamento em uma determinada data e hora - esta é a segunda vantagem do Bitcoin que é muito útil na prática e provavelmente o benefício mais agradável ao comparar uma transferência bancária e uma transferência de Bitcoin.\n\n**Em segundo lugar**, transparência das transações. Praticamente não há medo ao usar o Bitcoin de que você se encontre em uma região do mundo ou conectado a um provedor de internet através do qual não possa realizar operações com a rede Bitcoin. Praticamente não há opções além de trancá-lo em um quarto escuro sem acesso à internet para que você não possa usar a rede Bitcoin.\n\nEstas três propriedades são, obviamente, muito importantes. Agora, para entender a pergunta \"O que está no coração do computador mundial,\" precisaremos dar um passo para trás, nos abstrairmos e fazer um pequeno salto de fé, um salto, aproximadamente, 100 anos de volta para os anos 1930.\nEm 1936, Alan Turing fez uma proposta à comunidade científica para resolver o problema de formalização e, na verdade, uma descrição mais qualitativa de um conceito como um algoritmo. Curiosamente, a partir da proposta de Alan Turing, surgiu a arquitetura e o desenvolvimento de toda a ciência da computação no futuro, mas ele de forma alguma buscou a ideia de criar um computador pessoal, e ele não sabia nada sobre data centers ou nuvens. Sua tarefa era fornecer uma maneira de definir um algoritmo no contexto das tarefas enfrentadas pelos matemáticos. É uma imagem fascinante ao longo de um século que a conquista da ciência da computação acaba sendo um subproduto de um problema bastante mundano entre os matemáticos.\n\nVamos nos aprofundar no que Alan Turing propôs, sem mergulhar muito profundamente na teoria do algoritmo e no propósito para o qual ele sugeriu. Alan Turing propôs a máquina de Turing, que representa uma fita infinita (podemos chamá-la de células de memória para facilitar), percorrida por uma cabeça de leitura e escrita. Esta cabeça, posicionada sobre uma determinada célula, pode ler dados, aplicar algumas operações simples a eles e escrever novos valores.\n\nHoje, quando você ouve frases como esta, pode parecer para você: \"Bem, sim, é um disco rígido, um computador, ou algo assim.\" Isso está absolutamente correto. Esta descrição deu origem à primeira arquitetura de computador. No entanto, a principal tarefa da máquina de Turing era fornecer um meio de representar um sistema ou entidade capaz de realizar quaisquer cálculos formalizados. Pode-se imaginar uma caixa ou sala, até mesmo cheia de lâmpadas, na qual você insere seu cartão perfurado, cartão, ou transmite um sinal Bluetooth, e a máquina começa a funcionar, realizando operações simples que acabam resolvendo seu problema. Assim, a máquina de Turing é um mecanismo computacional universal que resolve principalmente a tarefa universal e essencial de fornecer um mecanismo através do qual qualquer cálculo simples ou, mais precisamente, qualquer cálculo formalizado pode ser realizado—cálculos que podem ser decompostos na linguagem da matemática.\n\nDessa abordagem à resolução de problemas e à teoria dos algoritmos, surgiu o computador pessoal. A partir desta definição, em 2014, surgiu essencialmente o conceito de Ethereum como o primeiro computador mundial. Vamos descrever brevemente o que isso representa. Temos um conjunto de transações ou solicitações de computação como entrada. Essas solicitações vão para uma máquina computacional ou, se falarmos de sua essência teórica, uma “transição de estado”, a mudança real de estado. Lembra-se, há apenas alguns minutos, falei sobre a fita infinita e a cabeça de leitura movendo-se ao longo dela? Assim, a cabeça que atravessa esta fita altera efetivamente o estado de cada célula com a qual trabalha. Na saída, obtemos resultados. Não estamos falando sobre o efeito específico de escrever em uma célula, nem sobre quaisquer operações adicionais de armazenamento, apenas que, ao inserir um conjunto de dados ou lê-los da fita infinita, podemos aplicar um conjunto de regras formalizadas escritas em nosso dispositivo móvel. cabeça ao longo da fita. Depois de aplicar um conjunto de operações aos dados, obtemos valores de saída que podem ser registrados em uma célula ou transmitidos posteriormente por fios, e não apenas por via aérea, por fios, mas também possivelmente por outros meios no futuro.\nÉ precisamente a função de transição de estado que está no cerne do computador mundial. É dessa definição de Alan Turing da máquina computacional para refinar a teoria do algoritmo que surge o conceito de algoritmo e, em princípio, não importa se é um computador pessoal ou um data center. Uma pequena adição, é claro, depois que a solução teórica para criar um computador foi encontrada, a tarefa finalmente se concentrou em encontrar sua forma de hardware. Portanto, não é surpreendente que quando falamos hoje sobre o computador mundial, nos refiramos a uma teoria que tem quase um século de idade. Pode-se dizer que foram necessários 100 anos para fazer a transição de uma descrição abstrata de um computador para sua implementação real na forma de servidores, seu smartphone de bolso ou o laptop em sua mesa.\n\nEm essência, a tarefa dos últimos 100 anos, após encontrar alguma solução no campo da matemática, foi precisamente dar-lhe uma forma física, encontrar o conjunto de transistores que poderiam ser colocados em uma placa, aprender como soldá-los todos, reduzir os processos do processador de computação, e assim por diante. Não é de admirar que a teoria de 1936 encontre aplicação em 2014 para as ideias do computador mundial. Estes 100 anos foram ocupados, em geral, em outra área—o campo de implementação física deste computador.\n\nQuando o planeta se tornou saturado, e tínhamos computadores pessoais, máquinas computacionais até mesmo dentro de dispositivos inteligentes, e quando os centros de dados começaram a crescer no planeta, a questão mudou da solução de hardware para como a máquina computacional poderia parecer não no nível físico ou matematicamente abstrato, mas em algum nível não físico, talvez metafísico, em relação ao planeta inteiro. No entanto, a base permanece a mesma: a função de transição de estado e nada mais.\n\nComo uma adição ao que foi dito, para que não fiquemos apenas na teoria de 1936 e não apenas quebremos as correntes dos maximalistas do Bitcoin, abra o white paper do Ethereum. Lá você encontrará a frase crucial \"máquina Turing completa\"—esta é a principal definição do Ethereum. Uma máquina Turing completa significa que o Ethereum pode lidar com quaisquer operações simples descritas em uma linguagem formal, operações que são possíveis. Este não é um conjunto de operações que o Ethereum pode fornecer como uma calculadora ou uma calculadora sofisticada para cientistas. Em vez disso, é uma abstração dentro da qual é possível carregar quaisquer variações possíveis, manipulações com variáveis, constantes, adições, cálculos com quaisquer estados, e assim por diante. Você não encontrará nada diferente do que Turing propôs na década de 1930 no conceito do Ethereum. Você encontrará uma implementação de engenharia de como fazê-lo. Se avançarmos e abrirmos o wiki do Polkadot, é um pouco mais desafiador encontrar. Para isso, você deve usar a pesquisa, digitar \"Transição de estado,\" e nos resultados da pesquisa, encontrar várias menções de que o Polkadot garante nada além da transição de estado. Nem o armazenamento de dados na blockchain do Polkadot nem quaisquer serviços adicionais—apenas a mais pura mudança de estado causada por transações recebidas e processadas pelos validadores do Polkadot. Agora, vamos tentar aprofundar mais nisso.\n\nAgora, vamos adicionar um pouco a este diagrama linear para passar da teoria dos anos 1930 para as realidades de hoje, onde descrevemos a imagem abstrata do computador mundial. Para fazer isso, vamos considerar um exemplo com Alice e Bob. Alice, estando no escritório, quer iniciar o robô aspirador de pó de Bob em casa para limpeza. Se olharmos para os conceitos de hoje de como a ligação entre a aplicação móvel de Alice e o robô aspirador em casa de Bob é implementada, você verá aproximadamente a seguinte imagem: a aplicação móvel de Alice gera uma transação em algum lugar na nuvem onde os cálculos ocorrem, e a saída desses cálculos são os valores de saída que efetivamente se transformam em um comando para iniciar o robô aspirador. Seria útil para nós, do campo da robótica e da Robonomics como conceitos no mundo do web3, entender que na nuvem, há um gêmeo digital deste robô, e seu estado é alterado. Podemos, em geral, não ir tão longe e parar no fato de que Alice envia uma transação para a nuvem, e a nuvem, tendo realizado todos os cálculos e manipulações necessárias, gera um comando para iniciar o robô aspirador de pó de Bob.\n\nNeste esquema de hoje, existem várias questões principais: se você estivesse interagindo com um computador físico na sua frente ou estivesse em uma sala com o robô aspirador de pó, você se aproximaria, pressionaria um botão físico e o colocaria em movimento. O que muda quando em vez de setas, não há um acionamento manual, mas uma camada de comunicação, a internet? Uma infinidade de perguntas surge sobre como podemos conectar com segurança Alice e esta nuvem, como podemos ter certeza de que Alice tem acesso a esta nuvem. A questão da rede de comunicação surge - como podemos proteger Alice de alguém mais abordando seu robô aspirador de pó, solicitando, por exemplo, para fazer um vídeo de todo o seu apartamento em vez de limpar, e um aspecto semelhante surge: por que o robô aspirador de pó ouviria esta nuvem com tanto respeito e integridade? Por que o robô confiaria plenamente nesta nuvem?\n\nA abordagem de hoje com a arquitetura de soluções em nuvem que conectam seu telefone celular, ou melhor, a aplicação em seu telefone celular, e alguma tecnologia do outro lado, dispositivos inteligentes, é baseada nos significativos avanços na construção de computadores físicos. Os computadores nos data centers de hoje são algo extraordinário - o nível dos processos técnicos é simplesmente incrível. No entanto, do ponto de vista das tecnologias de comunicação, quando você já tem alguma experiência trabalhando com aplicações de internet, parece que em algum lugar lá, no nível de uma escola técnica ou faculdade, ou talvez não bem ao lado de como os desenvolvedores, arquitetos dos processadores Intel estão resolvendo suas tarefas agora. Quase todas as perguntas sobre conectar Alice a Bob se resumem exclusivamente a emitir um certificado de acesso específico em um endereço IP específico de ambos os lados, ligando-os juntos, e a nuvem possuirá e fará qualquer coisa. O mais importante neste esquema é fazer qualquer coisa, ou seja, realizar transições de estado ou operações que ocorrem sem garantias de que para Alice, para Bob, essas serão executadas de acordo com a mesma lógica. Ninguém pode dizer nada sobre como a nuvem é organizada. É uma caixa preta onde os cálculos não são formalizados, e nem Alice nem Bob sabem como o cálculo é realizado.\n\nO lugar onde você deve confiar plenamente - confiando na reputação da empresa que possui esses data centers, e você deve confiar completamente nos provedores de acesso à rede que emitem um certificado e verificam a segurança da sua conexão. Na verdade, se falarmos sobre o boom das aplicações de internet, este é um grande problema. O problema é que na verdade existem algumas cidadelas localizadas em jurisdições específicas que operam em uma pilha de tecnologia relativamente simples para conectá-lo o mais facilmente possível à nuvem, que representa uma caixa preta. A insatisfação com esta abordagem realmente desperta interesse no computador mundial porque ele organizará as coisas de forma um pouco diferente. E como? Vamos tentar complementar o esquema que desenhamos com a cor azul agora.\n\nEntão, para complementar nosso gráfico linear, nosso diagrama linear de ambos os lados, vamos dar uma olhada nas descobertas que têm significado na ciência da computação e que estão diretamente ou indiretamente relacionadas às conquistas do mundo do web3.\n\nVamos começar com Leslie Lamport em 1976. Aqueles que participaram das minhas apresentações, palestras de 2015-2020, provavelmente se lembram de quantas vezes eu gostava de mencionar que antes da invenção do Bitcoin, os problemas relacionados à criação de uma rede descentralizada foram bem descritos por Leslie Lamport em 1976 no problema dos Generais Bizantinos. A solução para o problema dos Generais Bizantinos está no cerne dos algoritmos Tendermint PBFT e de todos os algoritmos síncronos usados desde a Rede Aberta do Telegram até o Tendermint, o Cosmos e outros projetos de blockchain que, consequentemente, seguiram o caminho dos Generais Bizantinos.\n\nA segunda conquista interessante em tecnologias da internet são os rastreadores de torrent. Não temos nenhum nuvem específica, já apagada, ou uma caixa preta que armazena arquivos. Ainda assim, usuários do mundo todo, trocando arquivos torrent, podem baixar exatamente o arquivo que estavam procurando, e isso funciona sem substituição de dados. Ninguém envia vírus para você substituindo o arquivo. Às vezes pode haver um vírus embutido no arquivo, mas a ideia de receber um link para baixar e realmente baixar algo diferente do que foi oferecido para baixar usando a tecnologia torrent é impossível. Processos semelhantes existem na rede IPFS, um armazenamento orientado a hash - uma forma de conectar vários participantes com confiança na informação que você transmite sem usar uma caixa preta, precisamente.\n\nE é claro, o Bitcoin. O Bitcoin, como um exemplo mais coletivo, tenho certeza de que Satoshi Nakamoto estava bem ciente da solução de Leslie Lamport para o problema dos Generais Bizantinos e, é claro, observou como a ideia dos rastreadores de torrent estava se desenvolvendo. Se não enfatizarmos as propriedades que o blockchain do Bitcoin obteve, como imutabilidade, transparência de transações e, até certo ponto, resistência à censura, então o Bitcoin é um serviço de internet que realiza transição de estado, algumas mudanças de estado com base em transações sem um nó central. É um exemplo de uma construção coletiva de uma rede global na qual há uma função de transição de estado constantemente funcionando na qual podemos confiar, e para garantir confiança, nem jurisdições nem endereços IP específicos nem as tecnologias mais primitivas usadas e ainda usadas hoje na construção de serviços em nuvem são usadas. A imagem coletiva do Bitcoin permitiu sobrepor o conceito geral dos anos 1930 de uma máquina completa de Turing na existência de uma função abstrata universal para tudo.\n\nEntão, o que precisamos adicionar a esse esquema para visualizar um computador global? Na base, fornecemos validadores de consenso ou, em geral, validadores. Pode-se dizer que a \"camada de disponibilidade de dados\" é provavelmente uma frase que muitos ouviram em torno do Ethereum este ano, e também se tornou uma vantagem do Bitcoin. No entanto, no esquema de organização do computador global, esta é uma peça do quebra-cabeça e, como mencionei, complementa a função principal que está no cerne do computador global - a função de transição de estado universal. Voltando ao início, a analogia do coração no corpo humano é interessante aqui. Não é uma coisa pensante, de fato. Sim, não gera, você poderia dizer, o cérebro é muito mais importante. Ainda assim, a vida é impossível sem o coração. Ele simplesmente bombeia sangue. Da mesma forma, no cerne do computador global, todas as transações são bombeadas através da função de transição de estado, resultando em saídas. Mas para organizar isso em uma rede de internet distribuída sem a necessidade de confiar em alguma cidadela, precisamos complementar a imagem com dois componentes.\n\nO primeiro componente é um conjunto de computadores ou nós que estão prontos para executar a transição de estado. Quando você envia transações, elas não vão apenas para cá; elas vão para os validadores. Os validadores realizam cálculos, lembrando o que eu já mencionei nesta conversa em curso. Eles pegam sua transação, recuperam informações do blockchain sobre como processar essa transação, aplicam esse processamento e depois coordenam com outros validadores o fato de terem executado corretamente a transição de estado. O núcleo do computador global, em termos de proteção contra situações em que Bob, o robô aspirador, recebe um comando correto de Alice no escritório, não se baseia em confiança, mas em verificação cruzada por uma multidão de participantes da rede com base em informações disponíveis do blockchain. Não apenas do blockchain, aliás. É complexo, e não vamos nos aprofundar nisso agora, mas essencialmente, uma multidão de validadores se revezam observando e têm incentivos, alguns incentivos internos dentro do protocolo, para evitar que a máquina universal e capaz de calcular qualquer coisa execute essa operação incorretamente. Um validador processa efetivamente transações que entram no computador global, e outros validadores ajudam a evitar situações em que um dos validadores realizou um cálculo incorreto. Quanto melhores forem os algoritmos de consenso dos validadores, melhor proteção teremos para a função de transição de estado ou, em outras palavras, o coração do nosso computador global.\n\nA segunda parte deste esquema é o serviço de disponibilidade de dados - o que sempre chamamos de banco de dados no Bitcoin ou Ethereum. Na verdade, teremos que abandonar esse conceito porque há uma mudança fundamental na arquitetura de todos os projetos, e para aqueles que visam especificamente o computador global, essa mudança é mais crucial. Para um exemplo simples do presente: existem várias implementações de redes de Camada 2 em cima do Ethereum - como Arbitrum, Optimism e outros. Se você começar a analisar suas principais diferenças e como elas operam, verá que, em alguns casos, uma rede L2 no Ethereum envia uma quantidade maior de dados, exclusivamente do blockchain de primeira camada, ou seja, do blockchain do Ethereum. Todas as peças de quebra-cabeça necessárias para confirmar que a computação na camada L2 estava correta podem ser encontradas no blockchain Ethereum de primeira camada. Por outro lado, outras abordagens sugerem que além da primeira camada do Ethereum, algo mais é armazenado que precisa ser encontrado para provar a correção das transações. Portanto, agora, diante de nossos olhos, há novamente uma questão de melhoria, mas especificamente de uma arquitetura onde as transações ocorrem à esquerda, no meio, temos o coração na forma da função de transição de estado, validadores e seu consenso permite a execução correta dessa transição de estado. Mas também há uma questão de disponibilidade de dados, que é necessária para garantir tanto a verificação cruzada quanto, essencialmente, a existência do próprio serviço. Algumas abordagens e padrões para criar L2 em cima do Ethereum hoje fazem a pergunta: \"E se uma determinada camada L2 perder os dados que não armazena dentro do blockchain principal do Ethereum?\"\n\nVamos complementar essa imagem com a estrutura do Polkadot. O Polkadot tem dois mecanismos de consenso: o consenso \"babe\", responsável pelo consenso no nível de parachain e é rápido, e o consenso \"grandpa\", que é mais lento e verifica tudo posteriormente. Portanto, se você se aprofundar no artigo da wiki intitulado \"O Caminho de um Bloco na Rede Polkadot\", encontrará abreviações interessantes. Após alcançar o consenso \"babe\" no nível de parachain, o consenso \"grandpa\" introduz o conceito de \"prova de validade e disponibilidade de dados.\" Aprofundando-se, você encontrará o termo \"chunk\" de pedaços redundantes de informação, inspirado nas tecnologias CD RW dos anos 90 e 2000. Isso aborda a questão de como preservar informações quando a confiança absoluta em uma entidade específica na rede não é viável. O conceito de \"chunk\" de informações redundantes é um desses padrões.\n\nResumindo, no cerne está uma função abstrata que permite qualquer computação e foi descrita por Alan Turing na década de 1930. O computador pessoal, essencialmente um efeito colateral de um problema matemático, surgiu do trabalho de Turing. As tecnologias primeiro aplicadas no Bitcoin, como o consenso que permite que a rede exista sem um centro de dados específico ou entidade responsável pela correção dos dados, formam um mecanismo funcional. Vai além de fornecer um serviço específico para transferências de dinheiro eletrônico; nos permite auditar e controlar qualquer computação na rede. Além disso, enfrentamos o desafio de garantir a disponibilidade de dados, pois não é a preocupação principal do computador global. A tarefa do computador global está em seu cerne, executando computações, gerenciando transições de estado e realizando cálculos, enquanto os dados neste esquema servem como uma peça de quebra-cabeça que é mais necessária para apoiar a parte inferior. Assim, este esquema geral pode ser visto como uma ilustração abstrata e generalizada da estrutura do computador global, onde a função de transição de estado está em seu cerne.\n","fileInfo":{"path":"pt/learn/world-computer/the-heart-of-the-world-computer.md","name":"the-heart-of-the-world-computer"},"defaultName":"World computer in your home","lastUpdate":null}},"context":{}}