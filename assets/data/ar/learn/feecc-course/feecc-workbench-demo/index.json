{"hash":"e32ec6aa0237b51fe496ef5a5df720ef84304a93","data":{"course":{"id":"4c8b81ad03ae99e494d483caffbac327","title":"عرض توضيحي لـ Feecc","description":"هذه الدورة تتعلق بالتعرف على نظام Feecc وجميع مكوناته.","content":"\n<RoboAcademyText fWeight=\"500\">\nفي هذا الدرس، ستقوم باختبار الوظائف الأساسية لـ Feecc باستخدام بيئة اختبار افتراضية كمثال، التي تقم بتقليد حالة حقيقية من نظام تتبع الإنتاج.\n</RoboAcademyText>\n\nلأغراض العرض التوضيحي، فإنه يفتقر إلى بعض الميزات النموذجية مثل طباعة العلامات أو تسجيل الفيديو، ولكنه يحتوي على المفهوم الرئيسي لمثل هذا النظام.\n\n## المتطلبات الأساسية\n\nلتشغيل العرض التوضيحي، ستحتاج إلى:\n\n- نظام شبيه بـ UNIX (تم اختباره على [Ubuntu 22.04.2](https://releases.ubuntu.com/jammy/))\n- [Docker](https://docs.docker.com/engine/install/ubuntu/) و [Docker compose](https://docs.docker.com/compose/)\n- متصفح ويب (تم اختباره على Google Chrome و Mozilla Firefox)\n\n## التثبيت\n\nقم بتنفيذ الأوامر التالية:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-academy\ncd feecc-academy\nsudo docker compose up -d --build\n</LessonCodeWrapper>\n\nللتحقق من عمل الحاويات، قم بتشغيل الأمر التالي:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker ps -a\n</LessonCodeWrapper>\n\nيجب أن ترى الناتج التالي:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\nCONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS                             PORTS     NAMES\n0db8382bb271   feecc-academy-workbench-daemon      \"uvicorn app:app --h…\"   19 seconds ago   Up 7 seconds (healthy)                       feecc_academy_workbench_daemon\n0dbc7bb977d1   feecc-academy-workbench-frontend    \"node nodeServer.js\"     20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_workbench_frontend\na74fa229eb90   robonomics/robonomics:sha-bd71a23   \"robonomics --dev --…\"   20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_robonomics_node\n0c9e8022658a   mongo:jammy                         \"docker-entrypoint.s…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_mongoDB\n6b0748904d0f   ipfs/go-ipfs:v0.17.0                \"/sbin/tini -- /usr/…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_ipfsnode\n814e6f489a77   nyurik/alpine-python3-requests      \"tail -f /dev/null\"      20 seconds ago   Up 19 seconds                                feecc_academy_hid_emulator\n</LessonCodeWrapper>\n\n## بدء العرض التوضيحي\n\n1. اذهب إلى http://localhost:3000/ في متصفحك، يجب أن ترى شاشة ترحيب.\n\n2. في هذه المرحلة، يجب على النظام أن يطلب من الموظف وضع بطاقته RFID على الماسح الضوئي للتفويض. في العرض التوضيحي، يمكنك استخدام `hid-emulator.py` للتفويض. للقيام بذلك، قم بتشغيل حاوية Docker منفصلة:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker exec -ti feecc_academy_hid_emulator sh\npython3 hid-emulator.py\n</LessonCodeWrapper>\n\nإنه قادر على تقليد وظيفتين: توفير بطاقة RFID ومسح رمز الباركود؛ تحتاج إلى الوظيفة الأولى، أدخل `1`.\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n> Select emulated action (1/2): \n>  1. Put ID card on the ماسح RFID.\n>  2. Scan a sample barcode with a barcode scanner.\n> 1\n> INFO:2023-03-21 21:42:05,370:Event relayed to endpoint http://127.0.0.1:5000/workbench/hid-event\n</LessonCodeWrapper>\n\n3. سترى الشاشة لاختيار نوع التكوين، اختر `جهاز واحد`.\n\n<LessonImages src=\"feecc-course/menu.png\" alt=\"Feecc start menu\"/>\n\n4. ستظهر الإشعارات في الزاوية السفلية اليسرى تشير إلى بدء العمل على الجهاز الذي تم إنشاء معرف فريد له. سيعرض الإشعار الأزرق أيضًا نشاط الطابعة الافتراضية؛ في الإعداد الفعلي، يتم طباعة رمز الباركود مع معرف الجهاز في هذه اللحظة.\n\n<LessonImages src=\"feecc-course/single_device.png\" alt=\"Single device composition\"/>\n\n5. انقر على `بدء التكوين` لبدء تسجيل عملية تجميع الجهاز. سيتم طلب منك المرور بجميع خطوات التجميع الضرورية؛ في كل مرة يكمل فيها موظف خطوة، يجب عليهم النقر على زر `التالي`، بعد ذلك سيتم حفظ الفيديو في IPFS. من الممكن أيضًا تعليق التجميع (`إيقاف مؤقت`) للعودة إليه لاحقًا أو لإيقاف العملية تمامًا (`إيقاف`).\n\n6. عند اكتمال جميع مراحل التجميع، يظهر زر `إنهاء`، بعد ذلك يقترح Feecc حفظ شهادة الجهاز. ومع ذلك، قبل القيام بذلك، افتح [عقد Robonomics المحلي](https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer) في متصفحك، ستحتاج إليه لاحقًا. بعد ذلك، عد إلى Feecc وانقر على `حفظ جواز السفر`.\n    \n    سترى إشعارات جديدة في زاوية الشاشة: إشعار بأن الشهادة تم تحميلها إلى Robonomics وIPFS، بالإضافة إلى رسالتين زرقاويتين حول طباعة العلامة المائية ورمز الاستجابة السريعة الذي يؤدي إلى الشهادة.\n\n<LessonImages src=\"feecc-course/single_certificate.png\" alt=\"Cetrificate of single composition\"/>\n\n7. تحت قسم `معلومات السلسلة` على شاشة عقد Robonomics المحلي، يجب أن ترى حدثًا جديدًا `datalog.NewRecord` تحت عمود `الأحداث الأخيرة`. إذا قمت بتوسيعه، سيتم عرض معرف IPFS المتوافق مع ملف الشهادة للجهاز في حقل `البايت`.\n\n<LessonImages src=\"feecc-course/single_datalog.png\" alt=\"Datalog of single composition\"/>\n\nيحتوي رمز الاستجابة السريعة المطبوع على رابط إلى هذا المعرف، مما يسمح بفتح ملف الشهادة في المتصفح. نظرًا لأن عقد IPFS المحلي قد لا يكون لديه تلك القابلية للكشف، يمكنك الوصول إلى الملف محليًا باستخدام `localhost:8080/ipfs/CID.` محتويات الشهادة تبدو مثل:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: 423d3c1b42f6427e80cc881a16e07451\nUnit Model Name: Single Device\nTotal Assembly Time: 0:05:37\nProduction Stages:\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:38:47\n  Finish Time: 26-06-2023 17:40:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:40:30\n  Finish Time: 26-06-2023 17:42:06\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:42:16\n  Finish Time: 26-06-2023 17:43:00\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Saw Through the Single Device\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:00\n  Finish Time: 26-06-2023 17:43:51\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:51\n  Finish Time: 26-06-2023 17:44:36\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n</LessonCodeWrapper>\n\n8. دعونا الآن نحاول إنشاء شهادة لتجميع مركب يتكون من عدة أجهزة. في قائمة اختيار النوع، انقر على `جهاز مركب`، ثم `جهاز عينة`. انسخ معرف الوحدة الخاص به (الموجود في حقل رقم التكوين)، حيث ستحتاج إليه لاحقًا. ثم، تابع مع الخطوات القياسية لتجميع الجهاز.\n\n9. بعد التجميع، عد إلى `جهاز مركب` واضغط على `التجميع النهائي` لإنهاء تجميع المركب. سيطلب منك النظام تقديم معرف الوحدة للأجهزة المجمعة، حيث يجب على الموظف مسح رمز الباركود الخاص بهم. لمحاكاة هذه العملية، عد إلى `hid-emulator.py` وحدد الوظيفة `2` لمسح رمز الباركود، وأدخل معرف الوحدة المحفوظ هناك.\n\n10. بعد ذلك، سيطلب النظام المرور بمراحل التجميع المركب الضرورية وإنشاء شهادة له:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: d08101feae7c4efbb5529885c9ad544b\nUnit Model Name: Composite Device\nTotal Assembly Time: 0:00:03\nProduction Stages:\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:25\n  Finish Time: 26-06-2023 18:18:26\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Tape the Sample Device to the base plate\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:26\n  Finish Time: 26-06-2023 18:18:27\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:27\n  Finish Time: 26-06-2023 18:18:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\nUnit Components:\n- Unit Unique Code: b165b382c3674127a6aaf5817c5a7040\n  Unit Model Name: Sample Device\n  Total Assembly Time: 0:00:03\n  Production Stages:\n  - Name: Prepare Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:45\n    Finish Time: 26-06-2023 18:17:46\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Assemble Sample Device\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:46\n    Finish Time: 26-06-2023 18:17:47\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Stack Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:47\n    Finish Time: 26-06-2023 18:17:48\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\nTotal Assembly Time (Including Components): 0:00:06\n</LessonCodeWrapper>\n\n11. لحذف العرض التوضيحي، أدخل الأمر:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker compose down --rmi all && docker builder prune -f\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"500\">\nفي الدرس القادم، سننتقل إلى نشر جميع المكونات الضرورية لنظام Feecc الفعلي.\n</RoboAcademyText>","fileInfo":{"path":"ar/learn/feecc-course/feecc-workbench-demo.md","name":"feecc-workbench-demo"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}