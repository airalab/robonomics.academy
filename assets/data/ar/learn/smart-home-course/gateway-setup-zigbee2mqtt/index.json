{"hash":"f33052c6cd25aad5fc1a1101d4bd76b0f766a37b","data":{"course":{"id":"6555bc10fa6d604d48a1628fcc08cf5e","title":"الدرس رقم 4a، إعداد البوابة: Zigbee2MQTT","description":"دورة مساعد المنزل","content":"\n## مقدمة\n\nهذا هو إعداد سيناريو لربط الأجهزة باستخدام محول Zigbee وجسر Zigbee2MQTT. إذا كان لديك [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (الذي يحتوي على جميع البرامج الثابتة اللازمة)، يمكنك ببساطة المتابعة مع هذه التعليمات. ومع ذلك، إذا كان لديك محول آخر، فأول شيء تحتاج إلى القيام به هو تفليشه ببرنامج Zigbee2MQTT. يمكنك العثور على التعليمات لجهازك [هنا](https://www.zigbee2mqtt.io/guide/adapters/).\n\nسوف تحتاج أيضًا إلى جهاز ذكي لاختبار اتصاله بمساعد المنزل.\n\n\n## تعليمات\n\n<List type=\"numbers\">\n\n<li>\n\nتثبيت البرنامج\n\n<List>\n\n  <li>\n    قم بإعداد مستودع بيئة تشغيل Node.js وتثبيته مع التبعيات المطلوبة:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - </LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install -y nodejs git make g++ gcc</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n    تحقق من أن الإصدارات الصحيحة من Node.js (v14.X، V16.x، V17.x أو V18.X) ومدير الحزم <code class=\"nowb\">npm</code> (6.X، 7.X أو 8.X) المثبتة تلقائيًا مع Node.js، قد تم تثبيتها:\n    <LessonCodeWrapper language=\"bash\" noLines>node --version</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm --version</LessonCodeWrapper>\n  </li>\n\n  <li>\n    إنشاء دليل لـ Zigbee2MQTT وتعيين مالك المستخدم له:\n    <LessonCodeWrapper language=\"bash\" noLines>sudo mkdir /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo chown -R ${USER}: /opt/zigbee2mqtt</LessonCodeWrapper>\n  </li>\n\n  <li>\n    استنساخ مستودع Zigbee2MQTT:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\n    git clone --depth 1 --branch 1.28.4 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n    </LessonCodeWrapper>\n  </li>\n\n  <li>\n    تثبيت الاعتماديات. لاحظ أن <code>npm ci</code> قد ينتج بعض التحذيرات التي يمكن تجاهلها.\n    <LessonCodeWrapper language=\"bash\" noLines>cd /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm ci</LessonCodeWrapper>\n  </li>\n\n</List>\n</li>\n\n<li>\n\nالاتصال وتكوين المحول\n\n<List>\n\n<li>\n\nقم بتوصيل محول Zigbee بـ Raspberry Pi. ثم تحتاج إلى العثور على موقع العصا. لهذا اكتب الأمر التالي:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nls -l /dev/serial/by-id\n</LessonCodeWrapper>\n\nيجب أن يكون الإخراج مشابهًا لـ:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon>\nubuntu@ubuntu:~$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n</LessonCodeWrapper>\n\nفي هذا المثال، دليل اتصال stick هو <code>ttyUSB0</code>.\n</li>\n\n<li>\n\nقم بتحرير ملف <code>configuration.yaml</code> قبل بدء Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnano /opt/zigbee2mqtt/data/configuration.yaml\n</LessonCodeWrapper>\n\nتحتاج التكوين الأساسي إلى بعض التعديلات. قم بتغيير البيانات التالية:\n\n\\- <code>homeassistant:</code> إلى <code>true</code>، سيتصل تلقائيًا بالمستشعرات إلى Home Assistant;\n\n\\- ألغ تعليق <code>user</code> و <code>password</code> تحت <code>mqtt</code> وأدخل اسم المستخدم وكلمة المرور الخاصة بك (كسلسلة، بعلامات اقتباس) من وسيط MQTT;\n\n\\- قم بتغيير المنفذ في <code>serial</code> -> <code>port</code> إلى دليل اتصال stick. في هذا المثال: <code>/dev/ttyUSB0</code>.\n\nيجب أن يبدو ملف التكوين المعدل كالتالي:\n\n<LessonCodeWrapper language=\"yaml\">\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n# allow new devices to join\npermit_join: true\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: 'YOUR_USERNAME'\n  password: 'YOUR_PASSWORD'\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/YOUR_PORT\n</LessonCodeWrapper>\n\n\n**إضافي:**\n\nإذا كان لديك بالفعل محول Zigbee أو بوابة نشطة في منزلك، وأنت الآن تكون على وشك تكوين stick آخر، فسيتعارضان مع بعضهما البعض. لحل هذه المشكلة، تحتاج إلى تغيير القناة على الجهاز الجديد. لهذا، أضف السلاسل التالية إلى نهاية ملف التكوين:\n\n\n<LessonCodeWrapper language=\"yaml\" codeClass=\"big-code\">\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nبدء Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd /opt/zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnpm start\n</LessonCodeWrapper>\n\nإذا بدأ بنجاح، سترى شيئًا مثل:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-1.jpg\" alt=\"code\"/>\n</li>\n</List>\n</li>\n\n<li>\n\nجهاز الزوجية\n\n<List>\n\n<li>\n\nحان الوقت لربط جهازك الذكي. أكثر الطرق شيوعًا لتبديل جهاز إلى وضع الاتصال هو الاستمرار في الضغط على زر الطاقة الخاص به أو تشغيله/إيقافه 5 مرات. تأكد من تشغيل Zigbee2MQTT.\n\n<LessonImages src=\"smart-house-course/lesson-4-a-4.gif\" alt=\"code\" imageClasses=\"mb\"/>\n\nعندما يتصل الجهاز، يجب أن ترى رسالة مثل:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n</LessonCodeWrapper>\n\nتذكر معرف الجهاز: في هذا المثال — <code>0x00158d0003eeeacf</code>.\n\nالآن يجب أن ترى هذا الجهاز مع معرفه في واجهة المستخدم الرئيسية لمساعد البيت. اذهب إلى <code>الإعدادات</code> -> <code>الأجهزة والخدمات</code> -> <code>الأجهزة</code> للتحقق من ذلك:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-2.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n\nبعد إضافة جميع الأجهزة، يمكنك إيقاف البرنامج باستخدام <code>Ctrl+C</code>. إذا كنت لا ترغب في إضافة المزيد من الأجهزة، يمكنك فتح ملف التكوين مرة أخرى وتعيين <code>permit_join:</code> إلى <code>false</code>.\n</li>\n\n</List>\n</li>\n\n<li>\n\nإنشاء خدمة للتشغيل التلقائي\n\n<List>\n\n<li>\n\nالآن تتاج إلى إنشاء خدمة. أنشئ الملف:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n</LessonCodeWrapper>\n\nأضف ما يلي إلى هذا الملف مع تغيير <code>YOUR_RASPPI_USERNAME_HERE</code>. إذا كنت لا تعرف اسم المستخدم الخاص بك، استخدم أمر <code>whoami</code>.\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target \n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=YOUR_RASPPI_USERNAME_HERE\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nتحقق من أن التكوين يعمل:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl start zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsystemctl status zigbee2mqtt.service\n</LessonCodeWrapper>\n\nيجب أن يكون الإخراج مشابهًا لـ:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-3.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n</li>\n\n<li>\n\nقم بتمكين الخدمة لبدء Zigbee2MQTT تلقائيًا عند التمهيد:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl enable zigbee2mqtt.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n</List>","fileInfo":{"path":"ar/learn/smart-home-course/gateway-setup-zigbee2mqtt.md","name":"gateway-setup-zigbee2mqtt"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:33 GMT+0400 (Samara Standard Time)"}},"context":{}}