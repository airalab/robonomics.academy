{"hash":"38d00f5ce0b34e89f5f33ff65026c37e182f6828","data":{"course":{"id":"cc7ae04d0b782c8141a076af3bd467ff","title":"मार्स क्यूरियोसिटी रोवर को कनेक्ट करें","description":"रोबोनॉमिक्स पैराचेन नियंत्रण के अधीन मंगल जिज्ञासा रोवर से कनेक्ट करें।","content":"\n**चलिए देखते हैं कि रोबोनॉमिक्स पैराचेन नियंत्रण कैसे मंगल जिज्ञासा रोवर को चलने की अनुमति देता है। आवश्यकताएं:**\n\n<List>\n\n<li class=\"flex\">\n\nROS मेलोडिक + Gazebo + RViz (स्थापना मैनुअल [यहाँ](http://wiki.ros.org/melodic/Installation))\n\n</li>\n\n\n<li>अतिरिक्त पैकेज:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\n  sudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\n[0.6.0](https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz) तक आईपीएफएस\n\n</li>\n\n<li class=\"flex\">\n\n[आईपीएफएस सहयोगी एक्सटेंशन](https://github.com/ipfs/ipfs-companion)\n\n</li>\n\n<li class=\"flex\">\n\nरोबोनॉमिक्स नोड (बाइनरी फ़ाइल) (नवीनतम रिलीज [यहाँ](https://github.com/airalab/robonomics/releases) से डाउनलोड करें। इस ट्यूटोरियल को v1.1 पर सफलतापूर्वक परीक्षण किया गया।\n\n</li>\n\n</List>\n\n<br/>\n\nयहाँ सफल लॉन्च दिखाने वाला वीडियो है:\n\nhttps://www.youtube.com/watch?v=6BSOyRbmac8\n\n\n<br/>\n\n### 1. एक सिमुलेशन सेट करें\n\nक्यूरिओसिटी रोवर पैकेज डाउनलोड करें:\n<LessonCodeWrapper language=\"bash\">\n  mkdir -p robonomics_ws/src\n  cd robonomics_ws/src\n  git clone https://bitbucket.org/theconstructcore/curiosity_mars_rover/src/master/\n  cd ..\n  catkin build\n</LessonCodeWrapper>\n\nहमें अपने रोवर को स्मूद्ली स्पॉन करने के लिए प्रारंभिक स्थितियों को समायोजित करने की आवश्यकता है:\n\n<List>\n\n<li>जाएं\n\n`src/master/curiosity_mars_rover_description/worlds` and change line 14 of the file` mars_curiosity.world` to \n`<pose>0 0 8 0 0 0</pose>`\n\n</li>\n\n<li>जाएं\n\n`src/master/curiosity_mars_rover_description/launch` and change line 4 of the file  `mars_curiosity_world.launch` to \n`<arg name=\"paused\" default=\"false\"/>`\n\n`~/.bashrc` में स्रोत कमांड जोड़ना न भूलें\n`source /home/$USER/robonomics_ws/devel/setup.bash`\n\n</li>\n\n<li> कंसोल को रीबूट करें और सिमुलेशन लॉन्च करें:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\n  roslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/rover.jpg\" alt=\"Mars rover\"/>\n\n</li>\n\n</List>\n\nनोट: यदि छवि अंधेरी है, उदा. छायांकित, तो Gazebo टूलबार में `कैमरा` को `आर्थोग्राफिक` में बदलें।\nसिमुलेशन कुछ समय के लिए बंद किया जा सकता है।\n\n------------\n\n<br/>\n\n### 2. रोबोनॉमिक्स नियंत्रक पैकेज डाउनलोड करें\nटर्मिनल में रोवर के लिए नियंत्रक पैकेज डाउनलोड करने के लिए:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\ncd ~/robonomics_ws/src\ngit clone https://github.com/PaTara43/robonomics_sample_controller\ncd robonomics_sample_controller\npip3 install -r requirements.txt\npip3 install rospkg\ncd ..\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 # The controller supports python3\n</LessonCodeWrapper>\n\n\n------------\n\n<br/>\n\n### 3. डीएपीपी में खाते प्रबंधित करें\nहम परीक्षण क रहे हैं, इसलिए हमें रोबोनॉमिक्स बाइनरी फ़ाइल के साथ स्थानीय रोबोनॉमिक्स नेटवर्क बनाने दें:\n\n<LessonCodeWrapper language=\"bash\">\n  ./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/robonomics.jpg\" alt=\"Running node\"/>\n\n\nजाएं [Robonomics Parachain पोर्टल पर](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) और स्थानीय नोड पर स्विच करें \n\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/local_node.jpg\" alt=\"Local node\"/>\n\n\nखातों पर जाएं और **CURIOSITY** और **EMPLOYER** खाते बनाएं।\n\n**महत्वपूर्ण**! प्रत्येक खाते का पता कॉपी करें (पता कॉपी करने के लिए खाते के आइकन पर क्लिक करें) और Curiosity के खाते का **म्नेमोनिक सीड** (खाता बनाते समय प्राप्त किया गया)\nइन खातों में कुछ पैसे (इकाइयाँ) भेजें। रोबोनॉमिक्स में खातों के बारे में अधिक पढ़ें [यहाँ](https://wiki.robonomics.network/docs/en/create-account-in-dapp/)\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/account_creation.jpg\" alt=\"Account creation\"/>\n\n\nइन पतों, सीड और नोड पता (डेवलपर नोड के लिए `ws://127.0.0.1:9944` को डिफ़ॉल्ट मानकर) को `robonomics_ws/src/robonomics_sample_controller/src` में `config.config` में जोड़ें। कोट्स नहीं।\n\n------------\n\n<br/>\n\n### 4. रोबोनॉमिक्स शुरू करें\n\nआगे बढ़ने से पहले, सुनिश्चित करें कि आपने [आईपीएफएस सहयोगी एक्सटेंशन](https://github.com/ipfs/ipfs-companion) इंस्टॉल किया है।\n\nएक अलग टर्मिनल में IPFS लॉन्च करें:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nifps init #you only need to do this once per IPFS installation\nipfs daemon\n</LessonCodeWrapper>\n\nअगर यह लाइव नहीं है, तो एक अलग टर्मिनल में Curiosity सिम्युलेशन लॉन्च करें:\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nroslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\nजब तक यह ठहर नहीं जाता\n\nएक और टर्मिनल में कंट्रोलर लॉन्च करें:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nrosrun robonomics_sample_controller sample_controller.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/controller.jpg\" alt=\"Controller\"/>\n\nअब आप ोवर को चलाने और डेटा एकत्र करने के लिए एक लेनदार लेने के लिए एक लेनदार भेज सकते हैं। इसे करने के लिए, आप वही [रोबोनॉमिक्स पैराचैन पोर्टल](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) का उपयोग कर सकते हैं।\n`Developer->Extrinsics` पर जाएं और क्यूरिओसिटी के नियोक्ता खाता, `लॉन्च` एक्सट्रिंसिक, क्यूरिओसिटी का खाता एक लक्ष्य खाता और पैरामीटर के रूप में `हाँ` का चयन करें।\nएक्सट्रिंसिक सबमिट करें।\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/extrinsic.jpg\" alt=\"Extrinsic\"/>\n\nरोबोट चलना शुरू करना चाहिए। यह अन्य खातों से आदेश स्वीकार नहीं करेगा न ही `नहीं` पैरामीटर के साथ आदेश स्वीकार करेगा। रोवर लगभग एक मिनट के लिए चलेगा और डेटा एकतर करेगा।\nबाद में, जब काम हो जाएगा:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/job_done.jpg\" alt=\"Job done\"/>\n\n\nरोबोनॉमिक्स पोर्टल पर जाएं `Developer -> Chain state` और `डेटालॉग -> रिंगबफरआइटम` को क्वेरी के रूप में चयन करके `क्यूरिओसिटी` डेटालॉग प्राप्त करें: \n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/datalog.jpg\" alt=\"Datalog\"/>\n\n\nअब टेलीमेट्री का आईपीएफएस हैश ब्लॉकचेन में सहेजा गया है। डेटा देखने के लिए आसानी से हैश कॉपी करें और गेटवे पर खोजें:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/data_in_ipfs.jpg\" alt=\"Data in IPFS\"/>\n\n\nयह टेलीमेट्री एक केंद्रीकृत स्टोरेज में रखी जाती है, और इसका हैश ब्लॉकचेन में स्टोर किया जाता है!\n","fileInfo":{"path":"hi/learn/connect-mars-curiosity-rover/overview.md","name":"overview"},"defaultName":"Connect Mars Curiosity Rover","lastUpdate":"Thu May 18 2023 10:41:00 GMT+0400 (Samara Standard Time)"}},"context":{}}