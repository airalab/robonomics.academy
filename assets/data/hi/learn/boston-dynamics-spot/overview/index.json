{"hash":"b7127cfb676a767c419fa0b68f47fd3dddba7323","data":{"course":{"id":"1d52926f15aa69b73e275230ecd7bfb6","title":"बोस्टन डायनेमिक्स स्पॉट के लिए सॉफ्टवेयर डेवलपिंग","description":"इस सबक में आप सीखेंगे कि आप एक उपयोगकर्ता के रूप में अधिकृत कैसे होते हैं, मोटर पावर नियंत्रण प्राप्त करते हैं और स्पॉट को मूल आदेश भेजते हैं।","content":"\n<RoboAcademyText fWeight=\"500\">\nइस सबक में आप सीखेंगे कि आप एक उपयोगकर्ता के रूप में अधिकृत कैसे होते हैं, मोटर पावर नियंत्रण प्राप्त करते हैं और स्पॉट को मूल आदेश भेजते हैं।\n</RoboAcademyText>\n\n## सिद्धांत\n\nजैसे कि और सभी गंभीर रोबोट, बोस्टन डायनामिक्स स्पॉट के पास एक सुरक्षा तंत्र है — [ई-स्टॉप सेवा](https://dev.bostondynamics.com/docs/concepts/estop_service) (आपातकालीन रोक) जो स्पॉट के संचालन के दौरान हमेशा सक्रिय रहना चाहिए ताकि किसी भी संभावित भौतिक क्षति से बचा जा सके। ई-स्टॉप को चालू करने से सभी जोइंट्स को तुरंत फ्रीज कर दिया जाता है (यदि रोबोट चालू है तो इंजन को बंद किए बिना यह होता है)।\n\nसबसे पहले, हमें रोबोट पर नियंत्रण किराया करना चाहिए। इसे करने के दो तरीके हैं - *प्राप्त* या *लेना*। *प्राप्त* का मतलब है नरम तरीके से नियंत्रण के लिए मांग करना, यदि किसी को अभी रोबोट का नियंत्रण है, तो आपकी अनुरोध को अस्वीकार किया जाएगा। दूसरे तरीके में, *लेना* का मतलब है ज़बरदस्ती नियंत्रण लेना, यह मायने नहीं रखता कि वर्तमान ऑपरेटर मौजूद है।\n\nइसलिए, कुछ गति प्राप्त करने के लिए, आपको यह योजना अनुसरण करना चाहिए:\n\n<LessonImages src=\"boston-dynamics-spot/e_stop_scheme.png\" alt=\"रोबोट क्रियान्वयन स्थितियाँ\" imageClasses=\"mb\"/>\n\nरोबोट निष्पादन राज्य\n\nइस सबक में आप सीखेंगे कि कैसे रोबोट की घूर्णन को नियंत्रित करने के लिए इसके *यॉ*, *रोल* और *पिच* को बदलकर। नीचे दिए गए चित्र में शरीर फ्रेम निर्देशिका प्रदर्शित है:\n\n<LessonImages src=\"boston-dynamics-spot/spot_coords.png\" alt=\"स्पॉट निर्देशांक\" imageClasses=\"mb\"/>\n\nस्पॉट निर्देशांक\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nकिसी कोड में कोणों को रेडियन में दर्शाया जाता है।\n</RoboAcademyText>\n\nसबक के परिणामस्वरूप, आप स्पॉट के चेहरे के साथ आकाश में अपने नाम के पहले अक्षर को खींचेंगे। आइए सेटअप शुरू करें!\n\n## गिटपॉड सेटअप\n\nइस सबक के लिए, हम गिटपॉड का उपयोग करेंगे, एक क्लाउड-आधारित आईडीई जो आपको अपने कंप्यूटर पर किसी भी विशेष सॉफ़्टवेयर को स्थापित किए बिना अभ्यास करने की अनुमति देता है।\n\n1. [गिटपॉड](https://gitpod.io/) के लिए साइन अप करें।\n2. हमारे [स्पॉट शिक्षा वातावरण](https://gitpod.io/#github.com/merklebot/spot-edu-environment) पर जाएं और उसे हमारे ब्राउज़र में खोलें। आपको एक सामान्य आईडीई के कार्यों के साथ विंडो दिखाई देगी। \n3. मेनू आइकन पर क्लिक करें, फिर टर्मिनल पर जाएं और एक नया टर्मिनल बनाएं।\n\n<LessonImages src=\"boston-dynamics-spot/gitpod_terminal.png\" alt=\"terminal\" imageClasses=\"mb\"/>\n    \n    \n4. इस कांड को कॉपी-पेस्ट करें:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\npython3 prepare_yggdrasil.py\nsudo ./start_yggdrasil.sh\n\n</LessonCodeWrapper>\n\nऔर `Enter` दबाएं।\n\n1. नया टर्मिनल खोलें (अब आप `+` बटन दबाकर कर सकते हैं) और कमांड के साथ कनेक्शन का परीक्षण करें\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nping6 200:42f6:d055:e74e:ce4a:35aa:953a:70f7\n\n</LessonCodeWrapper>\n\nआपको कुछ इस तरह कुछ दिखना चाहिए:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngitpod /workspace/spot-edu-environment (main) $ ping6 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09\nPING 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09(202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09) 56 data bytes\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=1 ttl=64 time=846 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=2 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=3 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=4 ttl=64 time=197 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=5 ttl=64 time=219 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=6 ttl=64 time=242 ms\n\n</LessonCodeWrapper>\n\n1. निर्धारित समय से पहले हम आपको एसएसएच कनेक्शन स्थापित करने के लिए निजी कुंजी भेजेंगे।\n2. अपनी निजी कुंजी को फ़ाइल `id_ed25519` में कॉपी करें। आप *stop-edu-enviroment* के साइडबार एक्सप्लोरर में फ़ाइल पा सकते हैं।\n3. **`id_ed25519` फ़ाइल के अंत में एक रिक्त पंक्ति जोड़ें, यह एसएसएच को सही ढंग से काम करने के लिए आवश्यक है।** बदलाव सहेजने के लिए `Ctrl+S` दबाएं।\n\nअगर सब कुछ ठीक है, तो आप `lesson1.py` को संपादित रके पाठ पूरा करना शुरू कर सकते हैं\n\nकोड को निष्पादित करने के लिए, कमांड का उपयोग करें:\n\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n\n</LessonCodeWrapper>\n\n\n<RoboAcademyText fWeight=\"700\" fStyle=\"normal\">\nयाद रखें कि सुनिश्चित करें कि इस समय किसी और का प्रोग्राम नहीं चल रहा है।\n</RoboAcademyText>\n\n\n## अभ्यास सत्र की अनुसूची तैयार करें\n\nअपने अभ्यास सत्र के लिए समयस्लॉट चुनने के लिए स्पॉट शेड्यूलिंग वेबसाइट का उपयोग करें:\n\n[meetings.hubspot.com/strelka](https://meetings.hubspot.com/strelka)\n\n## अभ्यास\n\nअब हम स्पॉट के सिर की गतिविधियों का उपयोग करके स्क्रीन पर चित्र बनाने के लिए एक सरल स्क्रिप्ट बनाएंगे।\n\n<LessonCodeWrapper language=\"python\" codeClass=\"big-code\">\n# Import Spot Control modules\nimport bosdyn.client\nfrom bosdyn.client.robot_command import RobotCommandClient, blocking_stand\nfrom bosdyn.client.robot_command import RobotCommandBuilder\nfrom bosdyn.geometry import EulerZXY\nimport time\n# ENTER YOUR AUTH DATA HERE\nROBOT_IP=\"192.168.50.3\"\nSPOT_USERNAME=\"student\"\nSPOT_PASSWORD=\"\"\n# Helpers to control camera drawing (you don't need to modify it)\nimport requests\nVIDEOSERVER_URL=\"http://luke.merklebot:8000/\"\nVIDEOSERVER_TOKEN=\"1234\"\ndef notify_start_line():\n  requests.post(VIDEOSERVER_URL + \"start_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_stop_line():\n  requests.post(VIDEOSERVER_URL + \"stop_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_clear_canvas():\n    requests.post(VIDEOSERVER_URL + \"clear_canvas\", json={\"token\": VIDEOSERVER_TOKEN})\n# Start with registering out SDK\nsdk = bosdyn.client.create_standard_sdk('LessonOneClient')\n# Create instance of robot and auth with credentials\nrobot = sdk.create_robot(ROBOT_IP)\nrobot.authenticate(SPOT_USERNAME, SPOT_PASSWORD)\n# Create lease client and take exclusive control over Spot.  \nlease_client = robot.ensure_client('lease')\nlease = lease_client.take()\nlease_keep_alive = bosdyn.client.lease.LeaseKeepAlive(lease_client)\n# Try to power on the robot\nrobot.power_on(timeout_sec=20)\nif robot.is_powered_on():\n    print(\"Powered On\")\n\t\t# If everything went smooth, Spot face lights should turn green\nelse:\n\t\t# In case of some problems, e.g. somebody stole control over robot\n    print(\"Failed\")\n    exit(0)\n# Synchronize Spor inner time with ours - to avoid outdated commands\nrobot.time_sync.wait_for_sync()\n# To execute robot movement, create command client through which orders are sent\ncommand_client = robot.ensure_client(RobotCommandClient.default_service_name)\n# Start movement with simple stand up\nblocking_stand(command_client, timeout_sec=10)\n# Rotate robot body:\n#  1. Build command for body rotation. It’s not an easy task to control robot motion with commands on low level. \n#     Bosdyn Client allow as to use a shortcut - RobotCommandBuilder. It contains a number of predefined commands, \n#     you need just to choose one of your liking and insert parameters\nfootprint_R_body = EulerZXY(yaw=0.1, roll=0.1, pitch=0.1)\ncmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n#  2. Execute builded command\ncommand_client.robot_command(cmd)\ntime.sleep(2)\n# Return robot state back\ncommand_client.robot_command(RobotCommandBuilder.synchro_stand_command(footprint_R_body=EulerZXY(yaw=0, roll=0, pitch=0)))\ntime.sleep(2)\n# Change robot height\ncmd = RobotCommandBuilder.synchro_stand_command(body_height=0.1)\ncommand_client.robot_command(cmd)\n# Now we are ready to draw letter. \ndef draw_letter(command_client):\n\t\t# Choose points to draw (see the coords explanation bellow)\n    points_xy_draw = (\n        (125, 125),\n        (375, 875),\n        (500, 500),\n        (250, 500),\n        (500, 500),\n        (625, 125),\n    )\n    for x, y in points_xy_draw:\n        convert = lambda x: (x / 1000 - 0.5) * -1\n        x, y = map(convert, (x, y))\n        footprint_R_body = EulerZXY(\n            yaw=x, \n            roll=0.0, \n            pitch=y,\n        )\n        cmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n        command_client.robot_command(cmd)\n        time.sleep(1)\nnotify_clear_canvas()\nnotify_start_line()\ndraw_letter(command_client)\nnotify_stop_line()\n# Turn off the robot gracefully\nrobot.power_off(cut_immediately=False)\n\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nअगर हमें कैमरे में स्पॉट को किसी बिंदु में ले जाना हो, तो हमें कई गैर-रैखिक पैरामीटरों के साथ कुछ बड़ी गणनाएँ करनी होंगी, जो बिल्कुल आसान काम नहीं है। लेकिन हम कह सकते हैं, कि स्थानिक रूप से, यॉ और पिच कोणों को कार्तेशियाई संयति के रूप में कुछ संकेतक के साथ चित्र पर उपयोग किया जा सकता है।\n</RoboAcademyText>\n\n\n<LessonImages src=\"boston-dynamics-spot/cartesian.jpeg\" alt=\"spot\" imageClasses=\"mb\"/>\n\nअब आप स्क्रिप्ट चलाने की कोशिश कर सकते हैं और परिणाम देख सकते हैं। Ctrl+S के साथ अपना कोड सहेजना न भूलें:\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n</LessonCodeWrapper>\n\n\n### स्पॉट का वीडियो यहाँ मिल सकता है:\n[https://codepen.io/smehnov/pen/BaVNrPM](https://codepen.io/smehnov/pen/BaVNrPM)\n\n\n## चुनौती\nएक पायथन स्क्रिप्ट बनाएं जो रोबोट शरीर की स्थिति को एक क्रम में गतियों से नियंत्रित करता है:\n\n1. खड़े हो जाओ\n2. उसके चेहरे के साथ अपने पहचान का पता लगाएं (कम से कम 3 बिंदु वाला एक अक्षर)\n3. बैठ जाओ\n\n## परिणाम\n\nअब, आप जानते हैं कि:\n\n- स्पॉट SDK के साथ काम करना\n- एक मूल कमांड बनाना\n- रोबोट शरीर को घुमाना\n- स्पॉट से कनेक्ट करना\n\nऔर एक अक्षर भी खींच लिया। बधाई हो!\n\n\n<RoboAcademyText fWeight=\"500\">\n\nहमने स्पॉट के संयुक्त डेटा के साथ [rosbag](http://wiki.ros.org/rosbag) एकत्रित किया है, ताकि आप उन्हें दृश्यीकरण कर सकें (उदाहरण के लिए [foxglove](https://www.notion.so/Lesson-1-Emergency-Stop-Initialization-Body-Position-Control-4ccf6316330d4680ab1bb571b2b788d5) के साथ)। प्रमाणपत्र जल्द ही आपके ईमेल पर भेजा जाएगा।\n\n</RoboAcademyText> \n\n\n## [अपना पहला सबक शेड्यूल करें](https://meetings.hubspot.com/strelka)","fileInfo":{"path":"hi/learn/boston-dynamics-spot/overview.md","name":"overview"},"defaultName":"Software Developing for Boston Dynamics Spot","lastUpdate":null}},"context":{}}