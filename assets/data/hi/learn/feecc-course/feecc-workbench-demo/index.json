{"hash":"f0f5c02be608963a98931b1ff3d7b952f1efb26f","data":{"course":{"id":"20e54e42d49f54d519c97c1de110ec06","title":"फ़ीसीसी का डेमो","description":"यह कोर्स फीस सिस्टम और उसके सभी घटकों को जानने के बारे में है।","content":"\n<RoboAcademyText fWeight=\"500\">\nइस पाठ में, आप एक उदाहरण के रूप में एक वर्चुअल टेस्टबेड का उपयोग करके फीस के मूल कार्यों का परीक्षण करेंगे, जो एक उत्पादन ट्रैकिंग सिस्टम के वास्तविक उदाहरण का अनुकरण करता है।\n</RoboAcademyText>\n\nप्रदर्शन के उद्देश्यों के लिए इसमें कुछ सामान्य विशेषताएँ नहीं हैं जैसे लेबल प्रिंटिंग या वीडियो रिकॉर्डिंग, लेकिन यह ऐसे एक सिस्टम की मुख्य अवधारणा को धारण करता है।\n\n## पूर्वापेक्षाएँ\n\nडेमो चलाने के लिए, आपको निम्नलिखित की आवश्यकता होगी:\n\n- UNIX जैसा सिस्टम (जांच किया गया है [Ubuntu 22.04.2](https://releases.ubuntu.com/jammy/))\n- [डॉकर](https://docs.docker.com/engine/install/ubuntu/) और [डॉकर कॉम्पोज](https://docs.docker.com/compose/)\n- वेब ब्राउज़र (Google Chrome और Mozilla Firefox पर जांच किया गया है)\n\n## स्थापना\n\nनिम्नलिखित कमांडों को निष्पादित करें:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-academy\ncd feecc-academy\nsudo docker compose up -d --build\n</LessonCodeWrapper>\n\nकाम कर रहे कंटेनर्स की जांच करने के लिए, निम्नलिखित को चलाएं:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker ps -a\n</LessonCodeWrapper>\n\nआपको निम्नलिखित आउटपुट दिखना चाहिए:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\nCONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS                             PORTS     NAMES\n0db8382bb271   feecc-academy-workbench-daemon      \"uvicorn app:app --h…\"   19 seconds ago   Up 7 seconds (healthy)                       feecc_academy_workbench_daemon\n0dbc7bb977d1   feecc-academy-workbench-frontend    \"node nodeServer.js\"     20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_workbench_frontend\na74fa229eb90   robonomics/robonomics:sha-bd71a23   \"robonomics --dev --…\"   20 seconds ago   Up 19 seconds (health: starting)             feecc_academy_robonomics_node\n0c9e8022658a   mongo:jammy                         \"docker-entrypoint.s…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_mongoDB\n6b0748904d0f   ipfs/go-ipfs:v0.17.0                \"/sbin/tini -- /usr/…\"   20 seconds ago   Up 19 seconds (healthy)                      feecc_academy_ipfsnode\n814e6f489a77   nyurik/alpine-python3-requests      \"tail -f /dev/null\"      20 seconds ago   Up 19 seconds                                feecc_academy_hid_emulator\n</LessonCodeWrapper>\n\n## डेमो को लॉन्च करना\n\n1. अपन ब्राउज़र में http://localhost:3000/ पर जाएं, आपको एक स्वागत स्क्रीन दिखाई देनी चाहिए।\n\n2. इस स्थिति में, सिस्टम कर्मचारी से उनके RFID कार्ड को स्कैनर पर रखने के लिए प्रोत्साहित करना चाहिए। डेमो में, आप `hid-emulator.py` का उपयोग अधिकृत कर सकते हैं। इसके लिए, एक अलग Docker कंटेनर चलाएं:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker exec -ti feecc_academy_hid_emulator sh\npython3 hid-emulator.py\n</LessonCodeWrapper>\n\nयह दो कार्यों का नकल करने में सक्षम है: एक RFID कार्ड प्रदान करना और एक बारकोड स्कैन करना; आपको पहले कार्य की आवश्यकता है, `1` दर्ज करें।\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n> Select emulated action (1/2): \n>  1. Put ID card on the RFID scanner.\n>  2. Scan a sample barcode with a barcode scanner.\n> 1\n> INFO:2023-03-21 21:42:05,370:Event relayed to endpoint http://127.0.0.1:5000/workbench/hid-event\n</LessonCodeWrapper>\n\n3. आपको संयोजन प्रकार का चयन करने के लिए स्क्रीन दिखाई देगी, `SINGLE DEVICE` चुनें।\n\n<LessonImages src=\"feecc-course/menu.png\" alt=\"Feecc start menu\"/>\n\n4. नोटिफिकेशन निर्मित करने की शुरुआत की सूचनाएं नीचे बाएं कोने में िखाई देगी जिसमें एक अद्वितीय आईडी बनाया गया है। नीला नोटिफिकेशन भी वर्चुअल प्रिंटर की गतिविधि को प्रदर्शित करेगा; वास्तविक सेटअप पर, इस समय उस उपकरण के आईडी के साथ एक बारकोड प्रिंट होगा।\n\n<LessonImages src=\"feecc-course/single_device.png\" alt=\"Single device composition\"/>\n\n5. `START COMPOSITION` पर क्लिक करें उपकरण संयोजन प्रक्रिया शुरू करने के लिए। आपको सभी आवश्यक संयोजन चरणों के माध्यम से जाने के लिए प्रोत्साहित किया जाएगा; हर बार जब कर्मचारी एक चरण पूरा करता है, तो उन्हें `NEXT` बटन पर क्लिक करना चाहिए, जिसके बाद वीडियो IPFS में सहेजा जाएगा। संयोजन को रोकना भी संभव है (`PAUSE`) बाद में वापस लौटने के लिए या प्रक्रिया को पूरी तरह े बंद करने के लिए (`STOP`)।\n\n6. जब सभी संयोजन चरण पूरे हो जाएंगे, `FINISH` बटन दिखाई देगा, जिसके बाद Feecc सुझाव देगा कि उपकरण का प्रमाणपत्र सहेजना चाहिए। हालांकि, इससे पहले, अपने ब्राउज़र में [स्थानीय Robonomics नोड](https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer) खोलें, आपको बाद में इसकी आवश्यकता होगी। उसके बाद, Feecc पर वापस आएं और `SAVE PASSPORT` पर क्लिक करें।\n    \n    आपको स्क्रीन के कोने में नई नोटिफिकेशन दिखाई देगी: प्रमाणपत्र को Robonomics और IPFS में अपलोड कर दिया गया है, साथ ही प्रिंटिंग सील टैग और प्रमाणपत्र के लिए QR-कोड के बारे में दो नीले संदेश।\n\n<LessonImages src=\"feecc-course/single_certificate.png\" alt=\"Cetrificate of single composition\"/>\n\n7. Robonomics स्थानीय नोड स्क्रीन पर `Chain info` खंड े तहत, आपको `recent events` स्तंभ के तहत एक नया घटना `datalog.NewRecord` दिखाई देना चाहिए। अगर आप इसे विस्तारित करते हैं, तो उपकरण के प्रमाणपत्र फ़ाइल के लिए IPFS CID दिखाई देगा।\n\n<LessonImages src=\"feecc-course/single_datalog.png\" alt=\"Datalog of single composition\"/>\n\nमुद्रित QR कोड में इस सीआईडी का लिंक होता है, जिससे ब्राउज़र में प्रमाणपत्र फ़ाइल खोल सकते हैं। क्योंकि आपके स्थानीय IPFS नोड में उस खोजने की क्षमता नहीं हो सकती, आप `localhost:8080/ipfs/CID` के साथ स्थानीय रूप से फ़ाइल तक पहुंच सकते हैं। प्रमाणपत्र की सामग्री कुछ इस प्रकार दिखती है:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: 423d3c1b42f6427e80cc881a16e07451\nUnit Model Name: Single Device\nTotal Assembly Time: 0:05:37\nProduction Stages:\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:38:47\n  Finish Time: 26-06-2023 17:40:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools (not finished.)\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:40:30\n  Finish Time: 26-06-2023 17:42:06\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:42:16\n  Finish Time: 26-06-2023 17:43:00\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Saw Through the Single Device\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:00\n  Finish Time: 26-06-2023 17:43:51\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 17:43:51\n  Finish Time: 26-06-2023 17:44:36\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n</LessonCodeWrapper>\n\n8. अब हम कई उपकरणों से मिलकर एक संयोजन संयंत्र के लिए प्रमाणपत्र बनाने की कोशिश करेंगे। प्रकार चयन मेनू में, `कॉम्पोज़िट उपकरण` पर क्लिक करें, और फिर `नमूना उपकरण` पर क्लिक करें। इसका यूनिट आईडी कॉपी करें (संयोजन संख्या क्षेत्र में स्थित), क्योंकि आपको बाद में इसकी आवश्यकता होगी। फिर, उपकरण को संयोजित करने के मानक चरणों के साथ आगे बढ़ें।\n\n9. संयोजन के बाद, `कॉम्पोज़िट उपकरण` पर वापस जाएं और संयोजन संयंत्र को समाप्त करने के लिए `अंतिम संयोजन` दबाएं। सिस्टम आपसे संयोजित उपकरणों के यूनिट आईडी प्रदान करने के लिए कहेगा, जिसके लिए कर्मचारी को उनके बार कोड को स्कैन करना होगा। इस प्रक्रिया को अनुकरण करने के लिए, `hid-emulator.py` पर वापस जाएं और बारकोड स्कैनिंग के लिए फ़ंक्शन `2` का चयन करें, और वहां सहेजे गए यूनिट आईडी डालें।\n\n10. अगले, सिस्टम आवश्यक संयोजन के आवश्यक चरणों के माध्यम से जाने के लिए प्रोत्साहित करगा और इसके लिए प्रमाणपत्र उत्पन्न करेगा:\n\n<LessonCodeWrapper language=\"json\" codeClass=\"big-code\" noLines noCopyIcon>\nUnit Unique Code: d08101feae7c4efbb5529885c9ad544b\nUnit Model Name: Composite Device\nTotal Assembly Time: 0:00:03\nProduction Stages:\n- Name: Prepare Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:25\n  Finish Time: 26-06-2023 18:18:26\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Tape the Sample Device to the base plate\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:26\n  Finish Time: 26-06-2023 18:18:27\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\n- Name: Stack Tools\n  Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n  Start Time: 26-06-2023 18:18:27\n  Finish Time: 26-06-2023 18:18:28\n  Assembly data in IPFS: This is a place for any production data, let it be video\n    record, some sensor data or any other data collection representing the production\n    process.\nUnit Components:\n- Unit Unique Code: b165b382c3674127a6aaf5817c5a7040\n  Unit Model Name: Sample Device\n  Total Assembly Time: 0:00:03\n  Production Stages:\n  - Name: Prepare Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:45\n    Finish Time: 26-06-2023 18:17:46\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Assemble Sample Device\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:46\n    Finish Time: 26-06-2023 18:17:47\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\n  - Name: Stack Tools\n    Employee Code: e9b69b302f72d82ca47964196536aab3f36e367910aff06d2be30888f9ad4234\n    Start Time: 26-06-2023 18:17:47\n    Finish Time: 26-06-2023 18:17:48\n    Assembly data in IPFS: This is a place for any production data, let it be video\n      record, some sensor data or any other data collection representing the production\n      process.\nTotal Assembly Time (Including Components): 0:00:06\n</LessonCodeWrapper>\n\n11. डेमो को हटाने के लिए, कमांड दर्ज करें:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker compose down --rmi all && docker builder prune -f\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"500\">\nअगले सबक में, हम फीक सिस्टम के सभी आवश्यक घटकों का वास्तविक डिप्लॉयमेंट करने के लिए आगे बढ़ेंगे।\n</RoboAcademyText>","fileInfo":{"path":"hi/learn/feecc-course/feecc-workbench-demo.md","name":"feecc-workbench-demo"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}