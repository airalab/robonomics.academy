{"hash":"f180987ff9e7f783a5d7057468bad547c343e5ed","data":{"course":{"id":"f02c9088d002275d7e638a197f8082bd","title":"Deployment of Engineer Workbench","description":"Questo corso riguarda la conoscenza del sistema Feecc e di tutti i suoi componenti.","content":"\n<RoboAcademyText fWeight=\"500\">\nIn questa lezione imparerai come distribuire da solo i componenti necessari di Feecc Engineer Workbench.\n</RoboAcademyText>\n\nTra i componenti:\n\n- Workbench Daemon\n- Workbench Frontend\n- IPFS Gateway\n- HID Reader Daemon\n\nTutti i componenti vengono avviati utilizzando [Docker](https://docs.docker.com/engine/install/ubuntu/) e [Docker compose](https://docs.docker.com/compose/), assicurati di avere loro installati.\n\n## Preparazione del software\n\n1. I componenti di Feecc utilizzano il database [MongoDB](https://www.mongodb.com/) per memorizzare e accedere ai dati. Prima di utilizzare Feecc, è necessario distribuire MongoDB nel modo che preferisci. Ecco alcune opzioni di distribuzione: [usando il tuo server](https://www.mongodb.com/try/download/community), [database cloud in Atlas](https://www.mongodb.com/atlas) (gratuito), [database cloud in DigitalOcean](https://www.digitalocean.com/products/managed-databases-mongodb) (a pagamento). \n    \n    In ogni caso, è necessario ottenere il tuo URI di connessione a MongoDB, che dovrai inserire come valore della variabile `MONGODB_URI` per tutti i componenti del sistema.\n    \n2. Se desideri sfruttare lo storage affidabile e trasparente dei dati dal tuo sistema di produzione, è necessario creare un account su Robonomics. Per farlo, utilizza le istruzioni disponibili al seguente link: https://wiki.robonomics.network/docs/create-account-in-dapp/\n    \n    È necessario salvare la frase seed dell'account in quanto verrà utilizzata successivamente nella variabile `ROBONOMICS_ACCOUNT_SEED`.\n\n## Preparazione del Workbench\n\nPrima di iniziare, collega tutta l'attrezzatura necessaria al computer o al server:\n\n- stampante di etichette tramite USB\n- lettori RFID/barcode tramite USB\n- telecamera IP tramite router PoE/switch di rete\n- monitor con tastiera e mouse o touchscreen tramite USB e HDMI/VGA (opzionale)\n\n## Avvio del demone del lettore HID\n\n1. Clona il repository:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon.git\ncd feecc-hid-reader-daemon\n</LessonCodeWrapper>\n\n2. Avviare il demone:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Avvio del demone del banco di lavoro\n\n1. Clona il repository:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-daemon.git\ncd feecc-workbench-daemon\n</LessonCodeWrapper>\n\n2. Configurare il demone per le proprie esigenze utilizzando il file `docker-compose.yml`. Il file contiene varie variabili d'ambiente:\n\n    - Configurazione di MongoDB;\n    - Configurazione di Robonomics;\n    - Configurazione di IPFS;\n    - parametri della stampante;\n    - parametri della fotocamera;\n    - parametri dei lettori RFID / codici a barre.\n    \n    L'elenco completo delle variabili è disponibile nel [repository](https://github.com/Multi-Agent-io/feecc-workbench-daemon) del demone.\n    \n    - `MONGODB_URI`: il tuo URI di connessione a MongoDB;\n    - `MONGODB_DB_NAME`: un nome di database di MongoDB;\n    - `MONGODB_DB_NAME`: un nome del database di MongoDB;\n\n`WORKBENCH_NUMBER`: numero del banco di lavoro dell'impiegato.\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n3. Avviare il demone:\n\n## Lancio del gateway IPFS\n\n1. Clona il repository:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git\n</LessonCodeWrapper>\n\n\n2. Configura il microservizio per le tue esigenze utilizzando il file `docker-compose.yml`. Il file contiene le variabili d'ambiente per la connessione con MongoDB, Robonomics e Pinata. L'elenco completo delle variabili è disponibile nel repository del gateway [repository](https://github.com/Multi-Agent-io/feecc-ipfs-gateway).\n\n3. Avvia il microservizio:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Lancio del frontend di Workbench\n\n1. Clona il repository:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git\n</LessonCodeWrapper>\n\n2. Vai alla directory `configs` e configura il servizio frontend per le tue esigenze utilizzando il file `config.json`. I seguenti parametri sono particolarmente importanti:\n    - `socket` — inserisci qui l'indirizzo del Workbench Daemon;\n    - `interface_language` — lingua dell'interfaccia, disponibili le opzioni `en` e `ru`;\n    - `dev_show_reducers` — abilitazione/disabilitazione della modalità sviluppatore;\n    - `pulling_period` — periodo di ricezione dei dati dal backend in millisecondi;\n\n3. Avvia il container frontend:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Verifica la sua funzionalità. Vai sul browser e apri la pagina `http://localhost:3000`, dovresti vedere una pagina di autorizzazione.\n\n<RoboAcademyText fWeight=\"500\">\nNella prossima lezione, passeremo al servizio di analisi Feecc.\n</RoboAcademyText>","fileInfo":{"path":"it/learn/feecc-course/feecc-workbench-deployment.md","name":"feecc-workbench-deployment"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}