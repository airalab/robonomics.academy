{"hash":"76c8f6c333fd43be28237b9e09f4e90eec13e11a","data":{"course":{"id":"fc51602fd73a7b1de008c7e75e6d4131","title":"Lezione n. 2, Configurazione di Raspberry Pi","description":"corso di assistente domestico","content":"\n## Introduzione\n\nIn questa lezione, preparerai il tuo Raspberry Pi per diventare un hub IoT. Installerai e configurerai sequenzialmente tutti i componenti necessari, ovvero:\n\n<List>\n\n- Distribuzione Ubuntu Linux per Raspberry Pi come sistema operativo server;\n- Pacchetti Home Assistant;\n- Pacchetti IPFS;\n- libreria robonomics-interface.\n\n</List>\n\n## Istruzioni\n\n<List type=\"numbers\">\n\n<li>\n\nPreparazione e configurazione di Raspberry Pi\n\n<List>\n\n  <li>\n\n  Scarica l'immagine di [Ubuntu Server 22.04 LTS a 64 bit](https://ubuntu.com/download/raspberry-pi) o successiva per Raspberry Pi.\n  </li>\n\n  <li>\n\n  Scarica e installa uno strumento per scrivere file immagine chiamato [Raspberry Pi Imager](https://www.raspberrypi.com/software/) sul tuo computer.\n  </li>\n\n  <li>\n\n  Inserisci la scheda SD ed esegui Raspberry Pi Imager. Seleziona l'immagine richiesta (che hai appena scaricato) come sistema operativo e assicurati di selezionare la tua scheda SD dal menu a discesa dello storage.\n\n  </li>\n\n  <li>\n\n  Apri le impostazioni e seleziona l'opzione <code>Abilita SSH</code> con il parametro <code>Usa autenticazione password</code>.\n\n  \\- In <code>Imposta nome utente e password</code> aggiungi nome utente e password per il tuo utente Raspberry Pi.\n\n  \\- In <code>Configura LAN wireless</code> fornisci il tuo Wi-Fi con la relativa password e scegli il tuo paese dal menu a discesa. Quindi <code>Scrivi</code> l'immagine.\n\n  <robo-academy-note type=\"okay\">\n  Assicurati di inserire il nome effettivo del tuo Wi-Fi e la relativa password.\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  Attendi fino al termine della scrittura, quindi inserisci la scheda SD nel Raspberry Pi e accendilo. Dovrebbe connettersi alla tua rete Wi-Fi, il che richiederà del tempo.\n\n  </li>\n  \n  <li>\n\n  Ora devi trovare un indirizzo del dispositivo. Per farlo puoi utilizzare vari metodi per la scansione di rete, come [Fing App](https://www.fing.com/products), il comando <code>arp -a</code> o [nmap](https://nmap.org/download.html). Quest'ultimo verrà utilizzato successivamente.\n\n  Installa nmap con un comando\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  Quindi trova il tuo indirizzo nella tua rete locale. Dovrebbe assomigliare a <code>192.168.xxx.xxx</code> o <code>172.xxx.xxx.xxx.</code> Presta attenzione poiché nmap può trovare molti indirizzi nella tua rete locale.\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  Quindi esegui la scansione della tua rete come mostrato di seguito sostituendo l'ultimo ottetto dell'indirizzo con <code>0</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  L'output del comando sarà qualcosa del genere:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  In questo esempio l'indirizzo è <code>192.168.43.56.</code>\n\n  </li>\n\n  <li>\n\n  Connettiti al Raspberry Pi tramite SSH con l'IP trovato. Utilizza il nome utente e la password che hai creato in precedenza.\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  Ulteriori istruzioni vengono eseguite tramite SSH sul Raspberry Pi stesso.\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nInstallazione di Home Assistant\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\nAlcune versioni del software mostrate di seguito potrebbero essere obsolete. Per le versioni più recenti, puoi fare riferimento al [repository di installazione per l'immagine di Robonomics Home Assistant](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage).\n\n  </robo-academy-note>\n\n  Prima di iniziare, aggiorna il sistema del Raspberry Pi e installa i pacchetti necessari. Durante l'installazione vedrai una finestra con la richiesta di riavvio del servizio. Scegli semplicemente <span class=\"accent\">ok</span> con il pulsante <code>tab</code> e premi invio.\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  Crea l'utente <code>homeassistant</code> e la directory per Home Assistant Core:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Crea un ambiente virtuale per Home Assistant Core e passa ad esso. Questo dovrebbe essere fatto come utente <code>homeassistant</code>, quindi dopo aver eseguito i comandi il tuo utente sembrerà <code>(homeassistant) homeassistant@ubuntu</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  Come risultato, troverai un nome dell'ambiente virtuale tra parentesi:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  Installa i pacchetti Python richiesti:\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  Avvia Home Assistant Core per la prima volta. Questo completerà l'installazione creando automaticamente la directory di configurazione <code class=\"nowb\">.homeassistant</code> nella directory <code>/home/homeassistant</code> e installando le dipendenze di base:\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Mentre l'impostazione iniziale è in corso, controlla la tua installazione tramite l'interfaccia web su <code>http://%RASPBERRY_IP_ADDRESS%:8123</code>. In questo esempio: <code>http://192.168.43.56:8123</code>. Puoi aprire un'interfaccia web da qualsiasi computer connesso alla tua rete locale.\n\n  Aspetta fino a quando non comparirà la finestra di benvenuto con la creazione di login/password e poi arresta Home Assistant con <code>Ctrl+C</code>.\n  </li>\n</List>\n</li>\n\n<li>\n\nInstallazione di IPFS\n\n<List>\n\n  <li>\n\n  Per l'installazione di IPFS puoi utilizzare il nostro script per scaricare IPFS e creare un servizio systemd con esso. Prima, esci dall'ambiente virtuale di Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  Quindi esegui:\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nServizi Systemd\n\n<List>\n\n<li>\n\nIl servizio Systemd è utile per automatizzare l'avvio di Home Assistant. Crea un nuovo servizio per Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nIncolla quanto segue\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAbilita e avvia il servizio:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nIntegrazione Robonomics\n\n<List>\n\n<li>\n\nAccedi con l'utente <code>homeassistant</code> sul tuo Raspberry Pi:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nAttiva l'ambiente virtuale e installa i pacchetti Python richiesti:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nQuindi vai alla directory <code>.homeassistant</code>, crea la cartella <code class=\"nowb\">custom_components</code> e clona lì il repository con l'integrazione:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nDopo di che esci dall'utente homeassistant e riavvia il servizio:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"it/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}