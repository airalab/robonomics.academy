{"hash":"b245a40217fbced1639aa527710a032ddca236bc","data":{"course":{"id":"0da76b15ac6a27ac5920834d8e92311d","title":"Lezione n. 4a, Configurazione del gateway: Zigbee2MQTT","description":"corso di assistente domestico","content":"\n## Introduzione\n\nQuesto è un setup di scenario per connettere dispositivi utilizzando l'adattatore Zigbee e il ponte Zigbee2MQTT. Se possiedi il [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (che ha tutto il firmware necessario), puoi procedere semplicemente con queste istruzioni. Tuttavia, se possiedi un altro adattatore, la prima cosa da fare è flasharlo con il software Zigbee2MQTT. Puoi trovare le istruzioni per il tuo dispositivo [qui](https://www.zigbee2mqtt.io/guide/adapters/).\n\nAvrai anche bisogno di un dispositivo smart per testare la sua connessione con Home Assistant.\n\n\n## Istruzioni\n\n<List type=\"numbers\">\n\n<li>\n\nInstallazione del Software\n\n<List>\n\n  <li>\n    Configura il repository dell'ambiente di runtime Node.js e installalo con le dipendenze richieste:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - </LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install -y nodejs git make g++ gcc</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n    Verifica che le versioni corrette di Node.js (v14.X, V16.x, V17.x o V18.X) e del gestore di pacchetti <code class=\"nowb\">npm</code> (6.X, 7.X o 8.X) installate automaticamente con Node.js, siano state installate:\n    <LessonCodeWrapper language=\"bash\" noLines>node --version</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm --version</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Crea una directory per Zigbee2MQTT e imposta il tuo utente come proprietario di essa:\n    <LessonCodeWrapper language=\"bash\" noLines>sudo mkdir /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>sudo chown -R ${USER}: /opt/zigbee2mqtt</LessonCodeWrapper>\n  </li>\n\n  <li>\n    Clona il repository di Zigbee2MQTT:\n    <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\n    git clone --depth 1 --branch 1.28.4 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n    </LessonCodeWrapper>\n  </li>\n\n  <li>\n    Installare le dipendenze. Nota che il <code>npm ci</code> potrebbe produrre alcuni avvisi che possono essere ignorati.\n    <LessonCodeWrapper language=\"bash\" noLines>cd /opt/zigbee2mqtt</LessonCodeWrapper>\n    <LessonCodeWrapper language=\"bash\" noLines>npm ci</LessonCodeWrapper>\n  </li>\n\n</List>\n</li>\n\n<li>\n\nConnessione e Configurazione dell'Adattatore\n\n<List>\n\n<li>\n\nCollega l'adattatore Zigbee al Raspberry Pi. Poi devi trovare la posizione della chiavetta. Per fare ciò, digita il comando successivo:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nls -l /dev/serial/by-id\n</LessonCodeWrapper>\n\nL'output dovrebbe assomigliare a:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon>\nubuntu@ubuntu:~$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n</LessonCodeWrapper>\n\nIn questo esempio la directory di connessione del stick è <code>ttyUSB0</code>.\n</li>\n\n<li>\n\nModificare il file <code>configuration.yaml</code> prima di avviare Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnano /opt/zigbee2mqtt/data/configuration.yaml\n</LessonCodeWrapper>\n\nLa configurazione di base necessita di alcune modifiche. Cambiare le seguenti dichiarazioni:\n\n\\- <code>homeassistant:</code> in <code>true</code>, si connetterà automaticamente ai sensori di Home Assistant;\n\n\\- decommentare <code>user</code> e <code>password</code> sotto <code>mqtt</code> e inserire il tuo nome utente e password (come stringa, tra virgolette) dal Broker MQTT;\n\n\\- cambiare la porta in <code>serial</code> -> <code>port</code> con la directory di connessione del stick. In questo esempio: <code>/dev/ttyUSB0</code>.\n\nIl file di configurazione modificato dovrebbe apparire così:\n\n<LessonCodeWrapper language=\"yaml\">\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n# allow new devices to join\npermit_join: true\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: 'YOUR_USERNAME'\n  password: 'YOUR_PASSWORD'\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/YOUR_PORT\n</LessonCodeWrapper>\n\n\n**Extra:**\n\nSe hai già un adattatore Zigbee attivo o un gateway nella tua casa, e stai configurando un altro stick, allora entreranno in conflitto tra loro. Per risolvere questo problema è necessario cambiare il canale sul nuovo dispositivo. Per fare ciò aggiungi le seguenti stringhe alla fine del file di configurazione:\n\n\n<LessonCodeWrapper language=\"yaml\" codeClass=\"big-code\">\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nAvvia Zigbee2MQTT:\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd /opt/zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nnpm start\n</LessonCodeWrapper>\n\nSe avviato con successo, vedrai qualcosa del genere:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-1.jpg\" alt=\"code\"/>\n</li>\n</List>\n</li>\n\n<li>\n\nAccoppiamento Dispositivo\n\n<List>\n\n<li>\n\nÈ il momento di collegare il tuo dispositivo intelligente. Il modo più comune per passare un dispositivo alla modalità di connessione è tenere premuto il pulsante di accensione o accenderli/spegnere 5 volte. Assicurati che Zigbee2MQTT sia in esecuzione.\n\n<LessonImages src=\"smart-house-course/lesson-4-a-4.gif\" alt=\"code\" imageClasses=\"mb\"/>\n\nQuando il dispositivo si connette, dovresti vedere un messaggio del genere:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n</LessonCodeWrapper>\n\nRicorda l'ID del sensore: in questo esempio — <code>0x00158d0003eeeacf</code>.\n\nOra dovresti vedere questo sensore con ID nella tua Home Assistant WebUI. Vai su <code>Impostazioni</code> -> <code>Dispositivi e Servizi</code> -> <code>Dispositivi</code> per controllarlo:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-2.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n\nDopo aver aggiunto tutti i sensori, puoi interrompere il programma con <code>Ctrl+C</code>. Se non vuoi aggiungere altri dispositivi, puoi aprire nuovamente il file di configurazione e impostare <code>permit_join:</code> su <code>false</code>.\n</li>\n\n</List>\n</li>\n\n<li>\n\nCreazione Servizio per l'Avvio Automatico\n\n<List>\n\n<li>\n\nOra devi creare un servizio. Crea il file:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n</LessonCodeWrapper>\n\nAggiungi quanto segue a questo file cambiando <code>IL_TUO_NOME_UTENTE_RASPPI_QUI</code>. Se non conosci il tuo nome utente, utilizza il comando <code>whoami</code>.\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target \n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=YOUR_RASPPI_USERNAME_HERE\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n</li>\n\n<li>\n\nVerifica che la configurazione funzioni:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl start zigbee2mqtt\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsystemctl status zigbee2mqtt.service\n</LessonCodeWrapper>\n\nL'output dovrebbe assomigliare a:\n\n<LessonImages src=\"smart-house-course/lesson-4-a-3.jpg\" alt=\"code\" imageClasses=\"mb\"/>\n</li>\n\n<li>\n\nAbilita il servizio per avviare automaticamente Zigbee2MQTT all'avvio:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo systemctl enable zigbee2mqtt.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n</List>","fileInfo":{"path":"it/learn/smart-home-course/gateway-setup-zigbee2mqtt.md","name":"gateway-setup-zigbee2mqtt"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:33 GMT+0400 (Samara Standard Time)"}},"context":{}}