{"hash":"ebf92df2790a8f2dc659c241c969d5c9f2c95e48","data":{"course":{"id":"6508cb479756c97ac9a8440d762be509","title":"Leçon n°2, Configuration de Raspberry Pi","description":"cours d'assistant domestique","content":"\n## Introduction\n\nDans cette leçon, vous allez préparer votre Raspberry Pi pour en faire un concentrateur IoT. Vous installerez et configurerez séquentiellement tous les composants nécessaires, à savoir :\n\n<List>\n\n- Distribution Ubuntu Linux pour Raspberry Pi en tant que système d'exploitation serveur;\n- Paquets Home Assistant;\n- Paquets IPFS;\n- bibliothèque robonomics-interface.\n\n</List>\n\n## Instructions\n\n<List type=\"numbers\">\n\n<li>\n\nPréparation et configuration de Raspberry Pi\n\n<List>\n\n  <li>\n\n  Téléchargez l'image de [64-bit Ubuntu Server 22.04 LTS](https://ubuntu.com/download/raspberry-pi) ou plus récente pour Raspberry Pi.\n  </li>\n\n  <li>\n\n  Téléchargez et installez un outil pour écrire des fichiers image appelé [Raspberry Pi Imager](https://www.raspberrypi.com/software/) sur votre ordinateur.\n  </li>\n\n  <li>\n\n  Insérez la carte SD et exécutez Raspberry Pi Imager. Sélectionnez l'image requise (que vous venez de télécharger) comme système d'exploitation et assurez-vous de sélectionner votre carte SD dans le menu déroulant de stockage.\n\n  </li>\n\n  <li>\n\n  Ouvrez les paramètres et cochez l'option <code>Activer SSH</code> avec le paramètre <code>Utiliser l'authentification par mot de passe</code>.\n\n  \\- Dans <code>Définir le nom d'utilisateur et le mot de passe</code> ajoutez le nom d'utilisateur et le mot de passe de votre utilisateur Raspberry Pi.\n\n  \\- Dans <code>Configurer le réseau local sans fil</code> fournissez votre Wi-Fi avec son mot de passe et choisissez votre pays dans la liste déroulante. Ensuite <code>Écrire</code> l'image.\n\n  <robo-academy-note type=\"okay\">\n  Assurez-vous de saisir le nom réel de votre Wi-Fi et le mot de passe de votre Wi-Fi.\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  Attendez que l'écriture se termine, puis insérez la carte SD dans le Raspberry Pi et allumez-le. Il devrait se connecter à votre réseau Wi-Fi, ce qui prendra un certain temps.\n\n  </li>\n  \n  <li>\n\n  Maintenant, vous devez trouver l'adresse de l'appareil. Pour ce faire, vous pouvez utiliser diverses méthodes de balayage réseau, comme [Fing App](https://www.fing.com/products), la commande <code>arp -a</code> ou [nmap](https://nmap.org/download.html). Ce dernier sera utilisé ensuite.\n\n  Installez nmap avec une commande\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  Ensuite, trouvez votre adresse dans votre réseau local. Elle devrait ressembler à <code>192.168.xxx.xxx</code> ou <code>172.xxx.xxx.xxx.</code> Faites attention car nmap peut trouver de nombreuses adresses sur votre réseau local.\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  Ensuite, scannez votre réseau comme indiqué ci-dessous en remplaçant le dernier octet de l'adresse par <code>0</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  La sortie de la commande ressemblera à ceci:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  Dans cet exemple, l'adresse est <code>192.168.43.56.</code>\n\n  </li>\n\n  <li>\n\n  Connectez-vous au Raspberry Pi via SSH avec l'IP trouvée. Utilisez le nom d'utilisateur et le mot de passe que vous avez créés précédemment.\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  Les instructions supplémentaires sont exécutées via SSH sur le Raspberry Pi lui-même.\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nInstallation de Home Assistant\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\nCertaines versions de logiciels indiquées ci-dessous peuvent être obsolètes. Pour les dernières versions, vous pouvez vous référer au [dépôt d'installation de l'image Robonomics Home Assistant](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage).\n\n  </robo-academy-note>\n\n  Avant de commencer, mettez à jour le système Raspberry Pi et installez les packages nécessaires. Pendant l'installation, vous verrez une fenêtre avec une demande de redémarrage du service. Choisissez simplement <span class=\"accent\">ok</span> avec le bouton <code>tab</code> et appuyez sur entrée.\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  Créez l'utilisateur <code>homeassistant</code> et le répertoire pour Home Assistant Core:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Créez un environnement virtuel pour Home Assistant Core et basculez dessus. Cela doit être fait en tant qu'utilisateur <code>homeassistant</code>, donc après avoir exécuté les commandes, votre utilisateur ressemblera à <code>(homeassistant) homeassistant@ubuntu</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  En conséquence, vous trouverez un nom d'environnement virtuel entre crochets:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  Installez les packages Python requis:\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  Démarrer Home Assistant Core pour la première fois. Cela complétera l'installation en créant automatiquement le répertoire de configuration <code class=\"nowb\">.homeassistant</code> dans le répertoire <code>/home/homeassistant</code>, et en installant toutes les dépendances de base:\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Pendant que la configuration initiale est en cours, vérifiez votre installation via l'interface web sur <code>http://%RASPBERRY_IP_ADDRESS%:8123</code>. Dans cet exemple: <code>http://192.168.43.56:8123</code>. Vous pouvez ouvrir une interface web depuis n'importe quel ordinateur connecté à votre réseau local.\n\n  Attendez d'obtenir la fenêtre de bienvenue avec la création du login / mot de passe, puis arrêtez Home Assistant avec <code>Ctrl+C</code>.\n  </li>\n</List>\n</li>\n\n<li>\n\nInstallation d'IPFS\n\n<List>\n\n  <li>\n\n  Pour l'installation d'IPFS, vous pouvez utiliser notre script pour télécharger IPFS et créer un service systemd avec. Tout d'abord, quittez l'environnement virtuel pour Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  Ensuite, exécutez:\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nServices Systemd\n\n<List>\n\n<li>\n\nLe service systemd est utile pour automatiser le lancement de Home Assistant. Créez un nouveau service pour Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nCollez ce qui suit\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nActiver et démarrer le service:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nIntégration Robonomics\n\n<List>\n\n<li>\n\nConnectez-vous avec l'utilisateur <code>homeassistant</code> sur votre Raspberry Pi:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nSource de l'environnement virtuel et installez les packages Python requis:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nEnsuite, allez dans le répertoire <code>.homeassistant</code>, créez le dossier <code class=\"nowb\">custom_components</code> et clonez-y le dépôt avec l'intégration:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nAprès cela, quittez l'utilisateur homeassistant et redémarrez le service:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"fr/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}