{"hash":"ebf92df2790a8f2dc659c241c969d5c9f2c95e48","data":{"course":{"id":"d9a4694601da7bc9b43a812d4af81dee","title":"Parte 4: El Camino de un Nuevo Bloque de Información en la Computadora Mundial","description":"La cuarta y última parte de nuestra conferencia es \"La Computadora Mundial en tu Hogar\". Después de esto, comenzaré a grabar screencasts para la parte práctica de las sesiones.","content":"\nLa cuarta y última parte de nuestra conferencia es \"La Computadora Mundial en tu Hogar\". Después de esto, comenzaré a grabar screencasts para la parte práctica de las sesiones.\n\nAhora intentaremos resumir casi toda la teoría que hemos cubierto hasta ahora en términos de un proceso. El proceso que describe el camino de un bloque de información en la computadora mundial. Comencemos nuevamente volviendo al tema de web3 y al concepto de blockchain. La frase \"bloque\" o \"bloque de información\" puede considerarse idéntica al alejarse de los últimos 10 años y adoptar una teoría más general, como se exploró en las partes anteriores de las conferencias. El concepto de un \"bloque de información\" se alinea con web3, pero no necesariamente con blockchain. Incluso sin proyectos de criptomonedas, necesitamos entender que al formar la teoría de la computadora mundial sin hacer referencia a la formación de bloques de información, actualmente es difícil imaginar otros modelos. Por lo tanto, consideraremos el camino de un bloque de información en toda la computadora mundial, no porque sea blockchain, sino porque, por ahora, no hay otras formas de conceptualizar la existencia de la computadora mundial que procesando información en porciones específicas.\n\nBloque de información = bloque en web3, pero sin blockchain y sin influencia de ningún proyecto de criptomonedas. Actualmente debemos considerar la formación de bloques de información al discutir la teoría de la computadora mundial. Ahora, pasemos al primer punto. Intenté encontrar analogías cercanas de la vida cotidiana para ayudar a ilustrar el camino de un bloque de información en la computadora mundial. La analogía que he elegido es el movimiento de un autobús en una ruta. Nuestro primer punto de encuentro es la parada de autobús.\n\nMarqué las transacciones en rosa como pequeños puntos. Imaginemos una parada de autobús típica donde la gente se reúne, esperando un autobús que opera según un horario. Si no consideramos el ajetreo y bullicio de las grandes ciudades, donde los autobuses siempre llegan tarde, todos en el mundo generalmente saben que el tren de la aldea A a la aldea B siempre llega alrededor de las 7:15 am. Las transacciones que los usuarios desean enviar a la computadora mundial se reúnen en una cierta parada de autobús y esperan a que llegue el autobús.\n\nAsí es como se forma nuestro bloque. Imagina: el autobús llega y cada persona comienza a abordar uno por uno, tomando sus asientos. El autobús luego sigue su ruta. En nuestro caso, el bloque de información supera la primera frontera. Nuestras transacciones, de alguna forma, se han asentado en el autobús y superado la barrera inicial. Estaré utilizando terminología principalmente de Polkadot, y la tercera parte debería haber explicado mejor el concepto de la computadora mundial en la comparación entre Ethereum y Polkadot. Mi opinión personal, y probablemente la mayoría de los ingenieros hoy estarían de acuerdo, es que la representación de una computadora mundial multicéntrica heterogénea se implementa mejor en Polkadot. Sin embargo, aún revisaremos los términos heredados de Ethereum, pero hacia el final de esta parte de la conferencia.\n\n¿Cuál es la línea que separa la parada de autobús del movimiento posterior del autobús? Esta línea representa a los recolectores de la red, participantes en los nodos de la red que recopilan transacciones. Puedes pensar en un recolector no como un conductor de autobús sino como un controlador que se queda en la parada de autobús. En otras palabras, este controlador verifica si tienes un boleto cuando entras al autobús. No vuelve a verificar en la base de datos qué tan válido es el boleto, sino que mira los parámetros básicos del boleto y verifica si todo parece estar bien. En realidad, los recolectores realizan casi todos los cálculos necesarios, verificando el número de boleto y otros datos, pero no se requiere que garanticen que la verificación se realice correctamente. Por lo tanto, los recolectores son controladores que permanecen en la parada de autobús, asegurando principalmente el abordaje de pasajeros, la asignación de asientos y el envío del autobús a lo largo de la ruta.\n\nMás allá de la frontera dibujada, ingresamos a la primera área de validación donde se encuentran los paravalidadores. Estos son validadores de todo el ecosistema, de toda la red, específicamente asignados por un cierto tiempo para verificar cada transacción y así realizar cálculos reales en la computadora mundial. Nuestro bloque de información aún no completamente formado está marcado con una línea discontinua. Todavía es un bloque de información candidato ya que no ha pasado por ninguna verificación real. El recolector, que recopiló el bloque de información y verificó las transacciones en la entrada, no participa de ninguna manera en la ciberseguridad de los cálculos realizados. Su tarea es solo asignar todas las transacciones y formar el primer bloque. En esta etapa, comienza la transformación de un bloque candidato a un bloque real de información.\n\nLo he dividido en tres partes, pero olvidé una más. Consideremos cuatro partes de este bloque candidato. La parte superior, conocida por los usuarios de varias aplicaciones web3 como el encabezado o bloque de encabezado, es la quintaesencia, la pieza de información más popular que circula y se refleja desde el explorador de bloques hasta los clientes de consola de todos los nodos de minería, participación, etc. El encabezado es un elemento clave del bloque, pero prácticamente se forma en la última etapa en este punto.\n\nEn primer lugar, tenemos nuestras solicitudes reales de transiciones de estado o cálculos. Hay una lista de cambios que deben hacerse: convertir A en A', B en B', C en C', aplicando un conjunto de algoritmos a ellos. Para esto, ahora construiremos otro límite inmediatamente y lo cruzaremos para realizar esta parte del trabajo, y luego solo proceder más allá de él. Ya en la etapa de preparación del bloque, tenemos que cruzar el segundo límite dentro de la computadora mundial para ir a los algoritmos que deben aplicarse para preparar el bloque. Como mencioné antes, teóricamente, el controlador en la parada de autobús aquí hace lo mismo, pero no prestaría mucha atención a eso. La etapa de preparación del bloque, especialmente cuando hablamos de ejemplos simultáneamente de Polkadot y Ethereum como una computadora mundial, difieren ligeramente y nos muestran la insignificancia de las verificaciones en esta etapa porque es precisamente en el segundo paso, después de pasar la primera frontera y recibir el bloque de información de los recolectores, que comienzan los cálculos dignos de atención de esta computadora mundial.\n\n\nPara realizar estos cálculos, el validador, en esta etapa, solo puede hacerlo recurriendo a la cadena de retransmisión, la base de datos central, y tomando de allí los algoritmos del tiempo de ejecución. En el caso de Ethereum, eran las mismas máquinas virtuales en el concepto arquitectónico anterior, que podían aplicarse, por lo que no era necesario ir a ningún lado. Casi cada nodo tenía una copia completa de los algoritmos que podían aplicarse. Pero en términos de una red heterogénea, donde cada segmento o cada cadena individual puede tener su propio conjunto de algoritmos, un validador, antes de ejecutar realmente todas las transiciones, debe consultar los cálculos obtenidos en forma de un bloque candidato del recolector. Debe consultar la cadena de retransmisión, consultar la cadena principal en la red y tomar de allí los algoritmos necesarios, aplicarlos y realizar transiciones de estado.\n\nDurante la ejecución de los cálculos, se forma simultáneamente un árbol de Merkle, y no nos detendremos en ello porque los árboles de Merkle no son tan complicados desde la perspectiva de la informática. Aún así, noto que para entender cómo aplicarlos en la ingeniería y en la arquitectura de un proyecto, cómo se aplican, no solo leyendo en Wikipedia, necesitas romperte un poco la cabeza, imaginar ejemplos. En este ejemplo, no profundizaremos demasiado en ello, pero creo que para aquellos que ya están familiarizados con algunas definiciones básicas, han leído sobre los árboles de Merkle, será un poco más claro cómo y en qué momentos se ensambla otro árbol de Merkle. El árbol de Merkle se forma cuando realmente realizamos cálculos y aparecen valores de salida. Estos valores de salida se empaquetan en un formato de árbol binario, luego se realiza la adición entre ellos en lenguaje de informática, y el nodo superior alcanza el encabezado. Vamos a denotarlo con una letra grande \"H.\" Es un aspecto pequeño y agradable considerar tales esquemas.\n\nEn este esquema, podemos notar cómo el encabezado del bloque está realmente relacionado con los cálculos realizados en su interior. Volvamos a mirar - nuestro bloque candidato provino del recolector. Hay un conjunto de transacciones que deben ejecutarse, realizar cálculos. El validador pasó por otro límite interno, uno más, detrás de los algoritmos, los aplicó y registró todos los resultados en el nivel más bajo del árbol de Merkle. Los otros nodos son fundamentalmente sistémicos. No provienen de ningún dato; no provienen de ninguna parte. En el segundo nivel, el nodo no proviene de ninguna información. Se obtiene sumando valores en estas dos hojas, y cuando subimos contigo, obtenemos solo la raíz de este árbol, que es suficiente para proteger todos los valores de salida. No obtendremos el mismo encabezado si cambiamos alguno de estos cálculos. Y esta es una de las características mágicas y simples, como el almacenamiento orientado a hash, de cómo podemos proteger un bloque completo de información hablando solo de un encabezado. Por lo tanto, los encabezados son tan importantes y desempeñan un papel fundamental incluso en arquitecturas cuando pasamos de una cadena o una máquina virtual a muchas combinadas en la red. Es suficiente para nosotros asegurar la seguridad de almacenar encabezados para estar seguros de que todas las transacciones que se ejecutaron en la etapa de preparación del bloque se ejecutaron correctamente y no pueden ser reemplazadas.\n\nY todavía queda un campo sin completar. En el proceso de preparar el bloque de información, es el campo del autor, es decir, el validador que realmente realizó todos los cambios, preparó el árbol de Merkle y registró el encabezado. Dado que estamos considerando un ejemplo con el autobús moviéndose a lo largo de la ruta desde la parada, llamemos al validador un \"controlador\" que entra directamente en el autobús, pasa por cada asiento, se acerca a cada persona, verifica realmente lo que está escrito en sus boletos, hace alguna marca, lo valida y, en consecuencia, pone su firma. El controlador, por ejemplo, número 134, lo que significa, naturalmente, que cada validador tiene algún identificador único, su dirección, y también lo hemos renombrado de alguna manera de forma única.\n\nY parece que en este punto podríamos haber sombreado y hecho más audaces los límites de nuestro bloque, pero no, y este es uno de los cambios interesantes que han ocurrido en los últimos 5 años en términos de ecosistemas descentralizados, a saber, el cambio de prueba de trabajo. Cuando los validadores de la red, en ese momento mineros, nunca tuvieron que coordinar nada entre ellos. Producías un bloque y lo enviabas a la red y seguías adelante. De hecho, no era un consenso de consentimiento acordado. Era un consenso de acuerdo obvio con el hecho que había ocurrido. Lo interesante es que cuando la arquitectura se vuelve más compleja, y nos hemos acercado de una simple calculadora como Bitcoin con un libro mayor hacia una computadora virtual real, es que en cada etapa, la conectividad de los participantes que garantizan la seguridad y la producción de bloques ha aumentado. Porque, de hecho, nadie que arriesgue su participación, el que garantiza esta seguridad y quiere ganar procesando sus transacciones, tiene algo que perder, a diferencia de la prueba de trabajo. En la prueba de trabajo, compraste el equipo, sí, pusiste dinero en él, gastaste electricidad, pero en realidad no hay protección contra el hecho de que puedes atacar la red con tu poder, el mismo ataque del 51%, donde alguien con muchos mineros puede intentar reescribir la cadena.\n\nAhora estamos hablando de la prueba de participación, donde ya se realiza un depósito, y si haces algo mal, se retirará una parte de él, como penalización. Todos los nodos, absolutamente, en todas las arquitecturas que observo actualmente, comenzaron a aparecer rápidamente mecanismos para el intercambio de mensajes entre validadores en la etapa de preparación del bloque. En Polkadot, no es diferente. Cualquier validador de una parachain separada que recopila un bloque conoce las direcciones o ya ha establecido contacto con otros 15-63 validadores que están contigo en esta época, en algún período temporal, como validadores, y cada uno de ellos se convierte aleatoriamente en un productor de bloques en algún momento. Pero ser designado como productor no niega un componente muy importante de este proceso. No dejas de interactuar con los demás participantes. Siempre hay un grupo de validadores asignados a una época específica, a un intervalo de tiempo específico, para validar una parachain o segmento de la computadora mundial. Independientemente de si eres un validador-controlador específicamente asignado para producir el siguiente bloque en la computadora mundial de este segmento, sigues en contacto con los demás validadores y tienes contacto constante con ellos.\n\n¿Por qué es necesario este contacto constante? Resulta ser bastante simple. No queremos, al entrar en la parte interna, tener miedo o preocuparnos de que hayamos realizado alguna de las operaciones incorrectamente. Por sorprendente que parezca, es beneficioso para cualquier validador, antes de avanzar, dirigirse primero a sus colegas asignados a la validación y pedirles que verifiquen nuevamente los cálculos. Esta verificación es informal, por lo que incluso si no utilizamos ningún registro en una base de datos inmutable de solicitudes de verificación y los resultados de esta verificación, el controlador designado, después de hablar con el grupo de validadores, aún recopila respuestas adicionales de todos los validadores asignados a esta paracadena o segmento de red. Junto con las confirmaciones adicionales, el controlador avanza a la siguiente etapa. Pero incluso aquí, no es tan simple. En esta etapa, se debe realizar otro proceso. Es importante tener en cuenta que en esta etapa, nuestro bloque de información sigue siendo un bloque candidato, y el asentamiento de la información ya está teniendo lugar en el almacenamiento. Ni al final, ni después de haber creado y sellado el bloque y adjuntado con un archivador en la parte final, es decir, aquí, en esta parte intermedia donde realmente se realizan todos los cálculos, la información se guarda en el almacenamiento. Por lo tanto, nuestro controlador, además de hablar con sus colegas, también asegura el almacenamiento de datos en algún almacenamiento, lo cual también es bastante metafísico porque en el momento en que te comunicas con otros validadores, este almacenamiento se llena. ¿Cómo se verifica esto? Tendremos que pasar a la siguiente etapa.\n\nEn resumen, para completar la parte intermedia, veamos de nuevo. Todavía tenemos solo un bloque candidato al principio. Sí, todas las transacciones se calculan aproximadamente en algún lugar en la parada de autobús, todos han tomado sus asientos según sus boletos. Hemos pasado el primer límite, que es básicamente el contacto directo establecido entre validadores y recolectores de bloques. En Ethereum y Polkadot, estos son esquemas ligeramente diferentes ahora. Pero todo lo que sucede en el lado izquierdo al principio no proporciona ciberseguridad para datos y cálculos. Es solo preparación. Una vez que hemos pasado y entrado en el entorno de la atención de los validadores, el trabajo con el bloque de información en la computadora mundial comienza. Un validador seleccionado al azar, en nuestro caso, con una ruta de autobús - un controlador, en realidad pasa por cada uno de los asientos, verifica el boleto, verifica y realiza todos los cálculos que se hicieron, reúne toda la información en un árbol. El nodo raíz resultante de este árbol se convierte en el encabezado del bloque propuesto. El validador que realmente realiza todos los cálculos con este bloque de información se comunica con los otros participantes que realizan una función similar para la misma ruta en un intervalo de tiempo indefinido. Y mientras se comunica con ellos y les pide que verifiquen todos los cálculos, en realidad estamos llenando un cierto almacenamiento de datos en la red. No es un almacenamiento físico específico; no hay una dirección IP específica, no hay un disco duro específico en el que todos carguen a través de algún esquema de VPN o inicio de sesión y contraseña, por supuesto que no. En el proceso de comunicarse con otros validadores, los datos permanecen en sus máquinas locales, y estos datos participarán más adelante en la transformación de este candidato en un nuevo bloque de información. En esencia, se recopila el bloque sellado que se liquidará en la cadena de retransmisión. Hemos ensamblado un bloque. Todos los metadatos alrededor de los cálculos ya están llenos, lo que significa que podemos intentar avanzar hacia la próxima frontera.\n\nEn este momento, adentrémonos en el paso del próximo límite. El aspecto más crucial en la etapa final se convierte en el encabezado del bloque. Nos preocupa menos la ejecución de cálculos; podemos simplificar nuestra perspectiva aquí, ya que los cálculos pueden variar según la arquitectura, ya sea Ethereum o Polkadot. El punto clave es que, en la etapa intermedia, según lo que observo en la teoría y práctica de implementar el concepto de computadora mundial, la mayoría de los cálculos ocurren a un nivel intermedio. El último nivel queda solo para ejecutar verificaciones esenciales. Casi todas estas verificaciones en una arquitectura multi-cadena están relacionadas con la concatenación o fusión de encabezados de bloques en un bloque.\n\n\nEn la parte final de nuestro viaje, el elemento más importante en el bloque de información de la computadora mundial se convierte en la piedra angular: el encabezado. El segundo componente se trata más de meta-información. Si el encabezado es el resultado real de todos los cálculos, la meta-información adicional que se transmite consiste en recibos y firmas de los validadores que participaron en la etapa intermedia de este proceso. En la etapa final, podemos visualizar toda la imagen únicamente como el ensamblaje del mismo árbol, no como una lista de transacciones. En la parte final de la cadena de retransmisión, el aspecto crucial es el ensamblaje de encabezados de muchos procesos similares, pero vinculados a diferentes segmentos de la computadora mundial, diferentes paracadenas.\n\nCada paracadena, cada conjunto de validadores: hemos discutido un ejemplo, pero en realidad, tales preparativos de bloques para paracadenas ocurren 30-40 veces. El número de espacios de paracadena o el número de redes L2 en Ethereum resultará en un número similar de procesos con una arquitectura similar. Sin embargo, en la etapa final, veremos una imagen aproximadamente idéntica en todas partes: cómo se formará el encabezado del bloque a partir de una multitud de encabezados de otros bloques. En este proceso, necesitamos introducir una entidad más y saltar de nuevo a través del límite a la segunda etapa.\n\nFinalizadores. De hecho, también son validadores, pero validadores de la cadena de retransmisión. En la arquitectura de Polkadot, tenemos mil validadores divididos en dos grupos. El primero, un grupo muy pequeño, es responsable solo de formar el encabezado del bloque y un nuevo bloque que consiste en los encabezados de los bloques del Estado de los Estados. El segundo grupo: los validadores de paracadena, se divide aún más en muchos subgrupos, pero este grupo se llama validadores de paracadena. En las redes L2 por encima de Ethereum, esta historia eventualmente ganará más comprensión, más denominadores. Por ahora, centrémonos en la arquitectura de Polkadot. Los finalizadores, además de verificar un conjunto adicional de meta-información y volver a verificar un validador con un ID específico, elegido al azar para generar este bloque de todos los bloques, también ayudan a volver a verificar la meta-información, verificar y ensamblar todos los encabezados en uno. Es un poco complejo, sí, si lo miramos desde la perspectiva del ensamblaje de árboles.\n\nAdemás de esto, en la arquitectura de Polkadot y en Ethereum con los últimos cambios, se realiza una verificación de disponibilidad de datos. Para esto, los finalizadores visitan a los validadores de las paracadenas e intentan solicitar información real sobre cada bloque almacenado en la red. Si reciben datos de al menos 1/3 de los validadores, utilizando tecnología que permite el almacenamiento redundante de información, y posteriormente, si alguien la pierde, uno o dos o tres validadores aún pueden restaurarla, hay un umbral crítico en 1/3. Si 1/3 de los nodos responden y dicen que tenemos datos sobre el bloque que se está produciendo, los finalizadores le dicen al bloque que ya es un bloque de información completamente formado, que todos los cálculos se han realizado correctamente, que ya hemos tomado el encabezado de este bloque y lo hemos combinado con los encabezados de otras personas de otros segmentos de la red. Ya hemos formado el encabezado principal de toda la red. Después de eso, los finalizadores colocan muchas marcas de verificación en el bloque final, que combina todos los cálculos realizados.\n\nActualmente, esta es la situación desde la perspectiva del ecosistema heterogéneo de múltiples cadenas más implementado en términos de ingeniería, que es Polkadot. Es el ecosistema heterogéneo de múltiples cadenas más implementado en términos de ingeniería, no muy lejos de Ethereum. Me gustaría centrarme en la comparación, y si alguien está interesado en entender cómo fluyen los bloques de información en Ethereum con redes L2, puede intentarlo ahora. Volveré a esta pregunta cuando algunos elementos de Ethereum, en términos de heterogeneidad y aspectos de múltiples cadenas, estén completos. Podría tomar 1-2 años, y luego podremos construir tal imagen. Sin embargo, podemos aceptar generalmente un esquema con tres etapas principales:\n\n**1. Formación de un candidato para el bloque de información:**\n   - En esta etapa, se forma el candidato inicial para el bloque de información.\n\n\n**2. Ejecución de todos los cálculos, almacenamiento de datos, disponibilidad de datos, reconfirmación con otros nodos, asegurando que todas las transiciones de estado se realicen correctamente según algoritmos específicos, y almacenando estos algoritmos en la ciudadela principal:**\n   - Esta etapa implica la ejecución real de cálculos, guardando datos en ciertas capas, asegurando la disponibilidad de datos, reconfirmación con otros nodos para confirmar que todas las transiciones de estado están de acuerdo con algoritmos almacenados en algún lugar de la ciudadela principal.\n\n\n**3. Finalización, que no volverá a verificar los cálculos pero verificará la meta-información, cómo se almacena esta meta-información. Luego ensamblará el bloque final, que es el estado de los estados, y lo liberará como un bloque de información común para toda la red multi-cadena segmentada:**\n   - La etapa final implica verificar la meta-información, verificar cómo se almacena esta meta-información, ensamblar el bloque final (estado de los estados) y liberarlo como un bloque de información común para toda la red multi-cadena segmentada.\n\n\nEn este punto, podemos decir que nuestra información está guardada. Ha pasado por el corazón, el corazón ha ejecutado correctamente su transferencia de datos, y ya podemos usar los valores de salida. Algunos los usarán para abrir un apartamento comprado con un contrato inteligente con una cerradura inteligente, mientras que otros podrían presumir de su NFT, recién recibido por 10 ethers.\n\nEn general, así es más o menos cómo funciona. Esto concluye la parte teórica. Creo que tomó alrededor de 2 horas, y por delante tenemos sesiones prácticas que estaré grabando durante los próximos meses. Nos ayudarán a entender los datos observados desde la ventana de la consola, aplicaciones descentralizadas, exploradores de bloques, donde gradualmente entenderemos cómo se ven realmente todos estos números y letras tericos en la implementación utilizando Polkadot como ejemplo. También comenzaré a trabajar en implementaciones a nivel L2 utilizando uno de los marcos conocidos para construir L2. Gracias a todos los que han estado viendo.\n","fileInfo":{"path":"es/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md","name":"the-path-of-a-new-block-of-information-in-the-world-computer"},"defaultName":"World computer in your home","lastUpdate":null}},"context":{}}