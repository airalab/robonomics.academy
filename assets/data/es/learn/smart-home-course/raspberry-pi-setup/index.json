{"hash":"e32ec6aa0237b51fe496ef5a5df720ef84304a93","data":{"course":{"id":"3ed99a60b9f4a6d686b1595a728f7bb4","title":"Lección #2, Configuración de Raspberry Pi","description":"curso de asistente doméstico","content":"\n## Introducción\n\nEn esta lección, prepararás tu Raspberry Pi para convertirse en un centro de IoT. Instalarás y configurarás secuencialmente todos los componentes necesarios, a saber:\n\n<List>\n\n- Distribución de Ubuntu Linux para Raspberry Pi como sistema operativo de servidor;\n- Paquetes de Home Assistant;\n- Paquetes de IPFS;\n- biblioteca de robonomics-interface.\n\n</List>\n\n## Instrucciones\n\n<List type=\"numbers\">\n\n<li>\n\nPreparación y configuración de Raspberry Pi\n\n<List>\n\n  <li>\n\n  Descarga la imagen de [Ubuntu Server 22.04 LTS de 64 bits](https://ubuntu.com/download/raspberry-pi) o más reciente para Raspberry Pi.\n  </li>\n\n  <li>\n\n  Descarga e instala una herramienta para escribir archivos de imagen llamada [Raspberry Pi Imager](https://www.raspberrypi.com/software/) en tu computadora.\n  </li>\n\n  <li>\n\n  Inserta la tarjeta SD y ejecuta Raspberry Pi Imager. Selecciona la imagen requerida (que acabas de descargar) como sistema operativo y asegúrate de seleccionar tu tarjeta SD del menú desplegable de almacenamiento.\n\n  </li>\n\n  <li>\n\n  Abre la configuración y marca la opción <code>Enable SSH</code> con el parámetro <code>Use password authentication</code>.\n\n  \\- En <code>Set username and password</code> agrega el nombre de usuario y la contraseña para tu usuario de Raspberry Pi.\n\n  \\- En <code>Configure wireless LAN</code> proporciona tu Wi-Fi con su contraseña y elige tu país de la lista desplegable. Luego <code>Write</code> la imagen.\n\n  <robo-academy-note type=\"okay\">\n  Asegúrate de ingresar el nombre real de tu Wi-Fi y tu contraseña de Wi-Fi.\n  </robo-academy-note>\n\n  <LessonVideo  :videos=\"[{src: 'https://crustipfs.info/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw', type:'mp4'}]\" />\n\n  </li>\n\n  <li>\n\n  Espera hasta que termine la escritura, luego inserta la tarjeta SD en la Raspberry Pi y enciéndela. Debería conectarse a tu red Wi-Fi, lo cual tomará un tiempo.\n\n  </li>\n  \n  <li>\n\n  Ahora necesitas encontrar la dirección del dispositivo. Para hacerlo, puedes usar varios métodos de escaneo de red, como [Fing App](https://www.fing.com/products), el comando <code>arp -a</code> o [nmap](https://nmap.org/download.html). Este último se usará a continuación.\n\n  Instala nmap con un comando\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get install nmap</LessonCodeWrapper>\n\n  Luego encuentra tu dirección en tu red local. Debería verse como <code>192.168.xxx.xxx</code> o <code>172.xxx.xxx.xxx.</code> Presta atención ya que nmap puede encontrar muchas direcciones en tu red local.\n\n  <LessonCodeWrapper language=\"bash\" noLines>ip a</LessonCodeWrapper>\n\n  Luego escanea tu red como se muestra a continuación reemplazando el último octeto de la dirección con <code>0</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo nmap -sP 192.168.xxx.0/24</LessonCodeWrapper>\n\n  La salida del comando será algo como esto:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noCopyIcon noLines>\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n</LessonCodeWrapper>\n\n  En este ejemplo la dirección es <code>192.168.43.56.</code>\n\n  </li>\n\n  <li>\n\n  Conéctate al Raspberry Pi a través de SSH con la IP encontrada. Utiliza el nombre de usuario y la contraseña que creaste anteriormente.\n  \n  <LessonCodeWrapper language=\"bash\" noLines>ssh ubuntu@192.168.43.56</LessonCodeWrapper>\n\n  Las instrucciones adicionales se ejecutan a través de SSH en el propio Raspberry Pi.\n  \n  </li>\n</List>\n</li>\n\n<li>\n\nInstalación de Home Assistant\n\n<List>\n  <li>\n\n  <robo-academy-note type=\"okay\">\n\nAlgunas versiones de software mostradas a continuación pueden estar desactualizadas. Para obtener las últimas versiones, puedes consultar el [repositorio de instalación de la imagen de Robonomics Home Assistant](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage).\n\n  </robo-academy-note>\n\n  Antes de comenzar, actualiza el sistema del Raspberry Pi e instala los paquetes necesarios. Durante la instalación verás una ventana con una solicitud de reinicio del servicio. Simplemente elige <span class=\"accent\">ok</span> con el botón <code>tab</code> y presiona enter.\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get update</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo apt-get upgrade -y</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n  \n  Crea el usuario <code>homeassistant</code> y el directorio para Home Assistant Core:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo useradd -rm homeassistant -d /srv/homeassistant -G dialout</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Crea un entorno virtual para Home Assistant Core y cámbiate a él. Esto debe hacerse como usuario <code>homeassistant</code>, por lo que después de ejecutar los comandos tu usuario se verá como <code>(homeassistant) homeassistant@ubuntu</code>:\n\n  <LessonCodeWrapper language=\"bash\" noLines>sudo -u homeassistant -H -s</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd /srv/homeassistant</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m venv .</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>source bin/activate</LessonCodeWrapper>\n\n  Como resultado, encontrarás un nombre del entorno virtual entre corchetes:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines noCopyIcon>\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n</LessonCodeWrapper>\n\n  </li>\n\n  <li>\n\n  Instala los paquetes de Python requeridos:\n\n  <LessonCodeWrapper language=\"bash\" noLines>python3 -m pip install wheel~=0.37</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11</LessonCodeWrapper>\n\n  <LessonCodeWrapper language=\"bash\" noLines>pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n  \n  Iniciar Home Assistant Core por primera vez. Esto completará la instalación creando automáticamente el directorio de configuración <code class=\"nowb\">.homeassistant</code> en el directorio <code>/home/homeassistant</code>, e instalando cualquier dependencia básica:\n  \n<LessonCodeWrapper language=\"bash\" noLines>hass</LessonCodeWrapper>\n  \n  </li>\n\n  <li>\n\n  Mientras la configuración inicial está en progreso, verifique su instalación a través de la interfaz web en <code>http://%RASPBERRY_IP_ADDRESS%:8123</code>. En este ejemplo: <code>http://192.168.43.56:8123</code>. Puede abrir una interfaz web desde cualquier computadora conectada a su red local.\n\n  Espere hasta que aparezca la ventana de bienvenida con la creación de usuario / contraseña y luego detenga Home Assistant con <code>Ctrl+C</code>.\n  </li>\n</List>\n</li>\n\n<li>\n\nInstalación de IPFS\n\n<List>\n\n  <li>\n\n  Para la instalación de IPFS puede utilizar nuestro script para descargar IPFS y crear un servicio systemd con él. Primero, salga del entorno virtual de Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" noLines>exit</LessonCodeWrapper>\n\n  Luego ejecute:\n\n  <LessonCodeWrapper language=\"bash\" noLines>cd ~</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>sudo chmod +x install_ipfs.sh</LessonCodeWrapper>\n  <LessonCodeWrapper language=\"bash\" noLines>./install_ipfs.sh</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nServicios de Systemd\n\n<List>\n\n<li>\n\nEl servicio de Systemd es útil para automatizar el inicio de Home Assistant. Cree un nuevo servicio para Home Assistant:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nPegue lo siguiente\n\n<LessonCodeWrapper language=\"bash\">\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/srv/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n[Install]\nWantedBy=multi-user.target\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nHabilitar y iniciar el servicio:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl enable home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl start home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n<li>\n\nIntegración de Robonomics\n\n<List>\n\n<li>\n\nInicie sesión con el usuario <code>homeassistant</code> en su Raspberry Pi:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsudo -u homeassistant -H -s\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nActive el entorno virtual y instale los paquetes de Python requeridos:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\nsource /srv/homeassistant/bin/activate\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\npip3 install robonomics-interface~=1.6.0\n</LessonCodeWrapper>\n\n</li>\n\n<li>\n\nLuego vaya al directorio <code>.homeassistant</code>, cree la carpeta <code class=\"nowb\">custom_components</code> y clone allí el repositorio con la integración:\n\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd ~/.homeassistant\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\nmkdir custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" noLines>\ncd custom_components\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nDespués de eso, salga del usuario homeassistant y reinicie el servicio:\n\n<LessonCodeWrapper language=\"bash\" noLines>\nexit\n</LessonCodeWrapper>\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\" noLines>\nsudo systemctl restart home-assistant@homeassistant.service\n</LessonCodeWrapper>\n\n</li>\n</List>\n</li>\n\n</List>\n\n\n\n","fileInfo":{"path":"es/learn/smart-home-course/raspberry-pi-setup.md","name":"raspberry-pi-setup"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 18 2023 10:46:29 GMT+0400 (Samara Standard Time)"}},"context":{}}