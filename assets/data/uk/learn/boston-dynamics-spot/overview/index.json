{"hash":"b9a9a5706288f7d2df3809bed93815498969baee","data":{"course":{"id":"5190c7ed184378509afec39e4dbb5183","title":"Екстрене зупинення, Ініціалізація, Контроль позиції тіла","description":"Під час цього уроку ви дізнаєтеся, як авторизувати себе як користувача, отримати контроль над потужністю двигуна та надсилати базові команди на Spot.","content":"\n<RoboAcademyText fWeight=\"500\">\nПід час цього уроку ви дізнаєтеся, як авторизувати себе як користувача, отримати контроль над потужністю двигуна та надсилати базові команди на Spot.\n</RoboAcademyText>\n\n## Теорія\n\nЯк і всі серйозні роботи, у Boston Dynamics Spot є механізм захисту — [Служба E-Stop](https://dev.bostondynamics.com/docs/concepts/estop_service) (Екстрене зупинення), яка завжди повинна бути активною під час роботи Spot, щоб уникнути потенційних фізичних пошкоджень. Увімкнення E-Stop миттєво заморожує всі з'єднння (це відбувається без вимкнення двигунів, якщо робот був увімкнений).\n\nСпочатку ми повинні взяти під контроль робота. Є два способи це зробити - *здобути* або *взяти*. *Здобути* означає запит контролю в лагідний спосіб, якщо хтось контролює робота зараз, ваш запит буде відхилений. Інакше, *взяти* означає насильницьке взяття контролю, не має значення, чи існує поточний оператор.\n\nТаким чином, щоб зробити деякий рух, вам слід дотримуватися схеми:\n\n<LessonImages src=\"boston-dynamics-spot/e_stop_scheme.png\" alt=\"Стани виконання робота\" imageClasses=\"mb\"/>\n\nRobot Execution States\n\nНа цьому уроці ви дізнаєтеся, як керувати обертанням робота, змінюючи його *yaw*, *roll* та *pitch*. На малюнку нижче показана система координат тіла:\n\n<LessonImages src=\"boston-dynamics-spot/spot_coords.png\" alt=\"Координати Spot\" imageClasses=\"mb\"/>\n\nSpot coordinates\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nКути в коді представлені в радіанах.\n</RoboAcademyText>\n\nВ результаті уроку ви намалюєте першу літеру свого імені у повітрі з обличям Spot. Давайте почнемо налаштування!\n\n## Налаштування Gitpod\n\nНа цьому уроці ми будемо використовувати Gitpod, хмарне середовище розробки, яке дозволяє вам практикуватися без встановлення спеціального програмного забезпечення на вашому комп'ютері.\n\n1. Зареєструйтеся на [Gitpod](https://gitpod.io/).\n2. Перейдіть на наше [навчальне середовище Spot](https://gitpod.io/#github.com/merklebot/spot-edu-environment) та відкрийте його у нашому браузері. Ви побачите вікно з типовими функціями IDE. \n3. Клацніть на піктограму Меню, потім перейдіть в Термінал та створіть новий термінал.\n\n<LessonImages src=\"boston-dynamics-spot/gitpod_terminal.png\" alt=\"terminal\" imageClasses=\"mb\"/>\n    \n    \n4. Скопіюйте та вставте цю команду:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\npython3 prepare_yggdrasil.py\nsudo ./start_yggdrasil.sh\n\n</LessonCodeWrapper>\n\nта натисніть `Enter`.\n\n1. Відкрийте новий термінал (зараз ви можете це зробити, натиснуви кнопку `+`) та перевірте підключення за допомогою команди\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nping6 200:42f6:d055:e74e:ce4a:35aa:953a:70f7\n\n</LessonCodeWrapper>\n\nВи повинні побачити щось на кшталт цього:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngitpod /workspace/spot-edu-environment (main) $ ping6 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09\nPING 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09(202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09) 56 data bytes\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=1 ttl=64 time=846 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=2 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=3 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=4 ttl=64 time=197 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=5 ttl=64 time=219 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=6 ttl=64 time=242 ms\n\n</LessonCodeWrapper>\n\n1. Перед запланованим часом ми надішлемо вам приватний ключ для встановлення SSH-з'єднання.\n2. Скопіюйте свій приватний ключ у файл `id_ed25519`. Ви можете знайти файл у бічному експлорері *stop-edu-enviroment*.\n3. **Додайте порожній рядок в кінці** `id_ed25519` ***файлу, це необхідно для правильної роботи SSH.*** Натисніть `Ctrl+S`, щоб зберегти зміни.\n\nЯкщо все в порядку, ви можете почати виконання уроку, редагуючи `lesson1.py`\n\nДля виконання коду використовуйте команду:\n\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n\n</LessonCodeWrapper>\n\n\n<RoboAcademyText fWeight=\"700\" fStyle=\"normal\">\nНе забудьте переконатися, що ніхто інший не запускає свою програму в даний момент.\n</RoboAcademyText>\n\n\n## Розклад практичної сесії\n\nВикористовуйте веб-сайт планування Spot, щоб вибрати часовий інтервал для вашої практичної сесії:\n\n[meetings.hubspot.com/strelka](https://meetings.hubspot.com/strelka)\n\n## Практика\n\nТепер ми створимо простий скрипт для Spot для малювання на екрані за допомогою рухів його голови. \n\n<LessonCodeWrapper language=\"python\" codeClass=\"big-code\">\n# Import Spot Control modules\nimport bosdyn.client\nfrom bosdyn.client.robot_command import RobotCommandClient, blocking_stand\nfrom bosdyn.client.robot_command import RobotCommandBuilder\nfrom bosdyn.geometry import EulerZXY\nimport time\n# ENTER YOUR AUTH DATA HERE\nROBOT_IP=\"192.168.50.3\"\nSPOT_USERNAME=\"student\"\nSPOT_PASSWORD=\"\"\n# Helpers to control camera drawing (you don't need to modify it)\nimport requests\nVIDEOSERVER_URL=\"http://luke.merklebot:8000/\"\nVIDEOSERVER_TOKEN=\"1234\"\ndef notify_start_line():\n  requests.post(VIDEOSERVER_URL + \"start_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_stop_line():\n  requests.post(VIDEOSERVER_URL + \"stop_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_clear_canvas():\n    requests.post(VIDEOSERVER_URL + \"clear_canvas\", json={\"token\": VIDEOSERVER_TOKEN})\n# Start with registering out SDK\nsdk = bosdyn.client.create_standard_sdk('LessonOneClient')\n# Create instance of robot and auth with credentials\nrobot = sdk.create_robot(ROBOT_IP)\nrobot.authenticate(SPOT_USERNAME, SPOT_PASSWORD)\n# Create lease client and take exclusive control over Spot.  \nlease_client = robot.ensure_client('lease')\nlease = lease_client.take()\nlease_keep_alive = bosdyn.client.lease.LeaseKeepAlive(lease_client)\n# Try to power on the robot\nrobot.power_on(timeout_sec=20)\nif robot.is_powered_on():\n    print(\"Powered On\")\n\t\t# If everything went smooth, Spot face lights should turn green\nelse:\n\t\t# In case of some problems, e.g. somebody stole control over robot\n    print(\"Failed\")\n    exit(0)\n# Synchronize Spor inner time with ours - to avoid outdated commands\nrobot.time_sync.wait_for_sync()\n# To execute robot movement, create command client through which orders are sent\ncommand_client = robot.ensure_client(RobotCommandClient.default_service_name)\n# Start movement with simple stand up\nblocking_stand(command_client, timeout_sec=10)\n# Rotate robot body:\n#  1. Build command for body rotation. It’s not an easy task to control robot motion with commands on low level. \n#     Bosdyn Client allow as to use a shortcut - RobotCommandBuilder. It contains a number of predefined commands, \n#     you need just to choose one of your liking and insert parameters\nfootprint_R_body = EulerZXY(yaw=0.1, roll=0.1, pitch=0.1)\ncmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n#  2. Execute builded command\ncommand_client.robot_command(cmd)\ntime.sleep(2)\n# Return robot state back\ncommand_client.robot_command(RobotCommandBuilder.synchro_stand_command(footprint_R_body=EulerZXY(yaw=0, roll=0, pitch=0)))\ntime.sleep(2)\n# Change robot height\ncmd = RobotCommandBuilder.synchro_stand_command(body_height=0.1)\ncommand_client.robot_command(cmd)\n# Now we are ready to draw letter. \ndef draw_letter(command_client):\n\t\t# Choose points to draw (see the coords explanation bellow)\n    points_xy_draw = (\n        (125, 125),\n        (375, 875),\n        (500, 500),\n        (250, 500),\n        (500, 500),\n        (625, 125),\n    )\n    for x, y in points_xy_draw:\n        convert = lambda x: (x / 1000 - 0.5) * -1\n        x, y = map(convert, (x, y))\n        footprint_R_body = EulerZXY(\n            yaw=x, \n            roll=0.0, \n            pitch=y,\n        )\n        cmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n        command_client.robot_command(cmd)\n        time.sleep(1)\nnotify_clear_canvas()\nnotify_start_line()\ndraw_letter(command_client)\nnotify_stop_line()\n# Turn off the robot gracefully\nrobot.power_off(cut_immediately=False)\n\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nЯкщо нам потрібно перемістити голову Spot в певну точку на камері, нам потрібно виконати великі обчислення з багатьма нелінійними параметрами, що взагалі не є простим завданням. Але ми можемо сказати, що локально кути yaw та pitch можуть бути приблизно використані як декартові координати з певним коефіцієнтом на малюнку.\n</RoboAcademyText>\n\n\n<LessonImages src=\"boston-dynamics-spot/cartesian.jpeg\" alt=\"spot\" imageClasses=\"mb\"/>\n\nТепер ви можете спробувати запустити скрипт і побачити результат. Не забудьте зберегти свій код за допомогою Ctrl+S:\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n</LessonCodeWrapper>\n\n\n### Відео Spot можна знайти тут:\n[https://codepen.io/smehnov/pen/BaVNrPM](https://codepen.io/smehnov/pen/BaVNrPM)\n\n\n## Виклик\nСтворіть скрипт Python, який керує позицією тіла робота за допомогою послідовності рухів:\n\n1. Підніміться\n2. Простежте ваші ініціали обличчям (одна літера, принаймні 3 точки)\n3. Сядьте\n\n## Результати\n\nТепер ви знаєте, як:\n\n- працювати з SDK Spot\n- створити базову команду\n- обертати тіло робота\n- підключитися до Spot\n\nІ навіть намалювали літеру. Вітаємо!\n\n\n<RoboAcademyText fWeight=\"500\">\n\nМи зібрали [rosbag](http://wiki.ros.org/rosbag) з даними про з'єднання Spot, щоб ви могли їх візуалізувати (наприклад, за допомогою [foxglove](https://www.notion.so/Lesson-1-Emergency-Stop-Initialization-Body-Position-Control-4ccf6316330d4680ab1bb571b2b788d5)). Сертифікат буде надіслано на вашу електронну пошту незабаром.\n\n</RoboAcademyText> \n\n\n## [Заплануйте свій перший урок](https://meetings.hubspot.com/strelka)","fileInfo":{"path":"uk/learn/boston-dynamics-spot/overview.md","name":"overview"},"defaultName":"Software Developing for Boston Dynamics Spot","lastUpdate":null}},"context":{}}