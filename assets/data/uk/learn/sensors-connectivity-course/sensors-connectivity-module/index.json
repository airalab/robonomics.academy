{"hash":"b9a9a5706288f7d2df3809bed93815498969baee","data":{"course":{"id":"4ad0d03a75a8aa0bbc5b87d49d12a975","title":"Урок №4, Модуль підключення датчиків","description":"МОДУЛЬ ПІДКЛЮЧЕННЯ ДАТЧИКІВ","content":"\nУ наступних статтях ви дізнаєтеся більше про модуль підключення датчиків. Після цього ви зможете приєднатися до нашої децентралізованої мережі датчиків або створити свою власну карту датчиків.\n\n## Про підключення датчиків\n\nДецентралізована мережа датчиків використовує модуль Python `sensors-connectivity` ([вихідний код](https://github.com/airalab/sensors-connectivity)). Цей модуль дозволяє будь-якому користувачеві запустити власний сервер для отримання даних від датчиків та подальшої обробки їх. На даний момент розробники запустили кілька таких серверів і будь-який датчик може надсилати дані на них. Запуск кількох серверів дозволяє уникнути втрати данх у випадку проблем з одним з них, оскільки датчики перейдуть з неробочого сервера на робочий. В основному, ви можете уявити модуль підключення датчиків як чорний ящик з одним входом (дані датчика) та багатьма виходами.\n\n<LessonImages  figure figureCaption=\"Module architecture\" src=\"sensors-connectivity-course/lesson-4-1.png\" alt=\"Module architecture\"/>\n\nМодуль підключення датчиків - це набір станцій (станція_1, станція_2 ... станція_n), які отримують різні дані, включаючи дані від датчиків через протокол HTTP. Також це можуть бути датчики, підключені до комп'ютера через USB або будь-який інший джерело даних. Дані, отримані від станцій, обробляються модулем і передаються до годувальників (годувальник_1, годувальник_2 ... годувальник_n). Годувальники надсилають оброблені дані користувачеві; у нашому випадку дані надсилаються на децентралізований канал IPFS. \n\nКарта [Децентралізованої мрежі датчиків](https://sensors.robonomics.network/#/) - це децентралізований додаток (dapp), який працює на комп'ютері. Він зчитує дані з каналу IPFS та відображає їх на карті. Немає прямого зв'язку між сервером, який збирає дані від датчиків, та картою, яку бачить користувач; дані передаються між ними через IPFS pubsub, що зменшує навантаження на сервери. \n\nКрім того, час від часу файл з даними за останній період часу зберігається в IPFS, а хеш цих даних потім записується на блокчейн. Оскільки IPFS є мережею з адресацією вмісту, зберігання даних в ньому гарантує, що будь-яка зміна даних не залишиться непоміченою, оскільки адреса потрібного файлу містить хеш його вмісту, який змінюється з будь-якою зміною даних. Блокчейн використовується для передачі хешу користувачеві, який може використовувати його для отримання потрібних даних з IPFS (це відбувається, коли ви запитуєте історію карти).\n\n## Модуль налаштування для Linux\n\n**Попередні вимоги та встановлення**\n\n<List type=\"numbers\">\n\n<li>\n\nДля побудови модуля `sensors-connectivity` необхідно встановити демон IPFS з версією не вище `0.8.x`. Припускаючи, що ви працюєте на Linux, виконайте наступне (для версії `0.8.0`):\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">wget https://dist.ipfs.io/go-ipfs/v0.8.0/go-ipfs_v0.8.0_linux-amd64.tar.gz\ntar -xzf go-ipfs_v0.8.0_linux-amd64.tar.gz\ncd go-ipfs\nsudo bash install.sh\nipfs init</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nВстановіть пакет з інструментами розробки `python3-dev` та інсталятор пакетів для Python `pip`:\n\n<LessonCodeWrapper codeClass=\"long-code\" language=\"bash\">sudo apt install python3-dev python3-pip</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nВстановіть модуль як пакет PyPI:\n\n<LessonCodeWrapper codeClass=\"long-code\" language=\"bash\">pip3 install sensors-connectivity</LessonCodeWrapper>\n\nЯкщо ви бачите наступне попередження: \n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">WARNING: The script sensors_connectivity is installed in '/home/test2/.local/bin' which is not on PATH.\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.</LessonCodeWrapper>\n\nВиконайте наступну команду:\n\n<LessonCodeWrapper  language=\"bash\">cd ~\nexport PATH=\"/usr/local/bin:$PATH\"\nsource .profile</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## Конфігурація\n\n<List type=\"numbers\">\n\n<li>\n\nСтворіть каталог для файлу конфігурації та файлу бази даних де завгодно. Ця база даних буде зберігати хеші IPFS даних сенсорів, мітки часу та статус служби:\n\n<LessonCodeWrapper language=\"bash\">cd ~\nmkdir sensors_connectivity\ncd sensors_connectivity\ntouch database.db</LessonCodeWrapper>\n\n<RoboAcademyNote type=\"okay\" title=\"INFO\">\nІм'я файлу бази даних може бути будь-яким, але розширення повинно бути <code>.db</code>\n</RoboAcademyNote>\n\n</li>\n\n\n<li>\n\nСтворіть файл конфігурації в тому ж каталозі:\n\n<LessonCodeWrapper language=\"bash\">touch my_config.json</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nСкопіюйте наступне до файлу та вставте повний шлях до файлу бази даних у поле db_path. Ця конфігурація буде достатньою для отримання даних сенсорів через HTTP та відправлення їх на карту Robonomics:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"json\">{\n   \"general\": {\n      \"publish_interval\": 30,\n      \"db_path\": \"<YOUR/PATH/TO/DATABASE>\"\n   },\n   \"comstation\": {\n      \"enable\": false,\n      \"port\": \"/dev/<YOUR/PATH/TO/BOARD>\",\n      \"work_period\": 300,\n      \"geo\": \"00.000000,00.000000\",\n      \"public_key\": \"\"\n   },\n   \"httpstation\": {\n      \"enable\": true,\n      \"port\": 8001\n   },\n   \"mqttstation\": {\n      \"enable\": false,\n      \"host\": \"localhost\",\n      \"port\": 1883,\n      \"topic\": \"/freertos_mqtt_robonomics_example/#\",\n      \"username\": \"\",\n      \"password\": \"\"\n   },\n   \"robonomics\": {\n      \"enable\": true,\n      \"ipfs_provider\": \"/ip4/127.0.0.1/tcp/5001/http\",\n      \"ipfs_topic\": \"airalab.lighthouse.5.robonomics.eth\"\n   },\n   \"datalog\": {\n      \"enable\": false,\n      \"suri\": \"\",\n      \"dump_interval\": 60,\n      \"temporal_username\": \"\",\n      \"temporal_password\": \"\",\n      \"pinata_api\": \"\",\n      \"pinata_secret\": \"\"\n   },\n   \"dev\": {\n      \"sentry\": \"\"\n   },\n   \"frontier\": {\n      \"enable\": false,\n      \"suri\": \"\"\n   },\n   \"trackagro\": {\n      \"enable\": false,\n      \"token\": \"\"\n   }\n}</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## Запуск\n\n\n<List type=\"numbers\">\n\n<li>\n\nЗапуск демона IPFS:\n\n<LessonCodeWrapper codeCLass=\"big-code\" language=\"bash\">ipfs daemon --enable-pubsub-experiment</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nПісля встановення конфігурації запустіть службу зі шляхом до файлу конфігурації в іншому терміналі:\n\n<LessonCodeWrapper language=\"bash\">sensors_connectivity \"path/to/your/config/file”</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nВи побачите журнали в терміналі (також їх буде додано до `~/.logs`). приклад:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">$ sensors_connectivity test.json\n2022-09-02 14:08:48,408 - INFO - Getting data from the stations...\n2022-09-02 14:08:48,409 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:08:48,409 - INFO - Sending result to the feeders...\n2022-09-02 14:08:48,411 - INFO - Checking data base...\n2022-09-02 14:09:18,410 - INFO - Sending result to the feeders...\n2022-09-02 14:09:18,410 - INFO - Getting data from the stations...\n2022-09-02 14:09:18,411 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:09:48,411 - INFO - Sending result to the feeders...\n2022-09-02 14:09:48,412 - INFO - Getting data from the stations...\n2022-09-02 14:09:48,413 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:10:18,413 - INFO - Sending result to the feeders...\n2022-09-02 14:10:18,413 - INFO - Getting data from the stations...</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## Після встановлення\n\nЩоб підключити ваш модуль `sensors-connectivity` до нашої Децентралізованої мережі сенсорів та побачити ваші дані на карті, вам потрібно надіслати ваш IPFS ID на [vm@multi-agent.io](mailto:vm@multi-agent.io) або [ping@airalab.org](mailto:ping@airalab.org). Ми додамо ваш ID до списку контролю доступу.\n\nОтримайте свій IPFS `ID` за допомогою наступної команди після запуску демона IPFS:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">$ ipfs id\n{\n\t\"ID\": \"QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP\",\n\t\"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/uMV3rLM/C+LOh2DGPo3chr+VM+vyYMKi...\n    ...</LessonCodeWrapper>","fileInfo":{"path":"uk/learn/sensors-connectivity-course/sensors-connectivity-module.md","name":"sensors-connectivity-module"},"defaultName":"Sensors Connectivity & Decentralized Sensors Network","lastUpdate":null}},"context":{}}