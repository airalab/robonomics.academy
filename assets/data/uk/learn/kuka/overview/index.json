{"hash":"cc71bf47aafce049dec68b910ec43100bf99e437","data":{"course":{"id":"31a2af15d1c077ebfdd655bfbf90c551","title":"Підключіть маніпулятор Kuka","description":"Підключіть маніпулятор","content":"\nВідео з прикладом роботи можна знайти тут:\n\nhttps://youtu.be/z55HepXbHr8\n\n<br/>\n\n***\n\n<br/>\n\n## Вимоги\n\n<List>\n\n<li class=\"flex\">\n\nROS мелодійний, Gazebo (інструкція з встановлення [тут](http://wiki.ros.org/melodic/Встановлення/Ubuntu))\n</li>\n\n<li>Деякі додаткові пакети\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li> IPFS 0.4.22 \n\n(завантажте з [тут](https://www.npackd.org/p/ipfs/0.4.22) та встановіть)\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ntar -xvzf go-ipfs_v0.4.22_linux-386.tar.gz\ncd go-ipfs/\nsudo bash install.sh\nipfs init\n</LessonCodeWrapper>\n\n</li>\n\n<li>pip3\n\n<LessonCodeWrapper language=\"bash\">\nsudo apt-get install python3-pip\n</LessonCodeWrapper>\n\n</li>\n\n<li>ipfshttpclient\n\n<LessonCodeWrapper language=\"bash\">\npip3 install ipfshttpclient\n</LessonCodeWrapper>\n\n</li>\n\n<li>substrate-interface\n\n<LessonCodeWrapper language=\"bash\">\npip3 install substrate-interface\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nВузол Robonomics (бінарний файл) (завантажте останню версію [тут](https://github.com/airalab/robonomics/releases))\n\n</li>\n\n<li>Розширення браузера IPFS (не обов'язково)</li>\n\n</List>\n\n<br/>\n\n***\n\n<br/>\n\n## Інсталяція\nВстановіть маніпулятор Kuka та пакети управління\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">cd catkin_wc/src/\ngit clone https://github.com/orsalmon/kuka_manipulator_gazebo\ngit clone https://github.com/LoSk-p/kuka_controller\ncd ..\ncatkin_make</LessonCodeWrapper>\n\n***\n\n<br/>\n\n## Запуск моделі gazebo\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsource ~/catkin_ws/devel/setup.bash\nroslaunch manipulator_gazebo manipulator_empty_world.launch\n</LessonCodeWrapper>\n\nУ новому вікні\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun manipulator_gazebo move_arm_server\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/1.png\" alt=\"model\"/>\n\n***\n\n<br/>\n\n## Запуск robonomics\nПерейдіть до папки з файлом robonomics та створіть локальну мережу robonomics:\n\n<LessonCodeWrapper language=\"bash\">\n./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/robonomics.png\" alt=\"robonomics\"/>\n\nПерейдіть до [порталу Robonomics Parachain](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) та перейдіть на локальний вузо��\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/local.png\" alt=\"local\"/>\n\nПотім перейдіть до Рахунки та створіть рахунок `KUKA`. Збережіть мнемонічний ключ рахунку, ви його знадобитеся пізніше. \n\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/create_acc.png\" alt=\"acc\"/>\n\nНадішліть деякі одиниці на новий рахунок з одного з рахунків за замовчуванням.\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/send_money.png\" alt=\"accs\"/>\n\n***\n<br/>\n\n## Запуск ipfs\nЗапустіть ipfs daemon:\n\n<LessonCodeWrapper language=\"bash\">\nipfs daemon\n</LessonCodeWrapper>\n\n***\n\n</br>\n\n## Запуск пакету управління\nУ каталозі конфігурації пакету управління kuka_control вам потрібно створити файл конфігурації з цими рядками, де `<your_mnemonic>` - це збережений мнемонічний ключ:\n\n<LessonCodeWrapper language=\"bash\">\n{\n    \"kuka_mnemonic\": \"[your_mnemonic]\",\n    \"node\": \"ws://127.0.0.1:9944\"\n}\n</LessonCodeWrapper>\n\n\nТепер ви можете запустити сценарій управління:\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun kuka_controller move_arm_client.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/run.png\" alt=\"control\"/>\n\n## Надсилання транзакції\nНа [порталі Robonomics Parachain](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) перейдіть до `Розробник/Екстрактори`, змініть `екстрактор` на `запуск`. Виберіть свій рахунок `KUKA` в `роботі` та змініть `параметр` на `Так`. Натисніть `Надіслати транзакцію`\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/launch.png\" alt=\"transaction\"/>\n\nУ вікні з пакетом управління kuka_control ви побачите:\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/res.png\" alt=\"done\"/>\n\nПотім перейдіть до `Розробник/Стан ланцюга` на порталі Robonomics, виберіть `даталог` та `datalogItem((AccountId,u64)): RingBufferItem` в запиті та додайте `KUKA` datalog з кнопкою '+':\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/datalog.png\" alt=\"datalog\"/>\n\nТепер ви можете знайти телеметрію робота в IPFS за цим посиланням з вашим хешем `https://gateway.ipfs.io/ipfs/<hash>`.\n\n## Усунення неполадок\n\nЯкщо `catkin_make` не працює з повідомленням, що він не може знайти MoveArm.h, спробуйте видалити останні чотири рядки в CMakeLists.txt у пакеті kuka_manipulator_gazebo:\n\n<LessonCodeWrapper language=\"yaml\">\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(move_arm_server src/move_arm_server.cpp)\ntarget_link_libraries(move_arm_server ${catkin_LIBRARIES})\nadd_dependencies(move_arm_server beginner_tutorials_gencpp)\n</LessonCodeWrapper>\n\nВиконайте `catkin_make` без цих рядків, потім поверніть їх і знову виконайте `catkin_make`.","fileInfo":{"path":"uk/learn/kuka/overview.md","name":"overview"},"defaultName":"Connect Kuka manipulator","lastUpdate":null}},"context":{}}