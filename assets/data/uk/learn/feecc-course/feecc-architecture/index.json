{"hash":"d581ab531c5af1fcf498eba534e7cd9db8b6d676","data":{"course":{"id":"4a32cea6182d18e6c364135e71523597","title":"Архітектура","description":"Цей курс призначений для того, щоб дізнатися про систему Feecc та всі її компоненти.","content":"\n<RoboAcademyText fWeight=\"500\">\nУ цьому уроці ми розглянемо архітектуру Feecc докладніше і розглянемо всі компоненти програмного забезпечення.\n</RoboAcademyText>\n\nПлатформа Feecc складається з кількох служб, від контролю робочого майданчика інженера до надання аналітики. Кожна служба відповідає за певний вид функціональності, необхідної для розгортання в підприємницькому середовищі.\n\n## Feecc Engineer Workbench\n\nОсновне завдання Engineer Workbench - організувати робоче простір збираючого інженера. Залежно від завдання інженер може знадобитися наступне обладнання:\n\n- IP-камера для організації відеозапису виробничого процесу;\n- RFID-читач для ідентифікації в системі за допомогою особистої RFID-карти;\n- сканер штрих-кодів для сканування етикеток продкції;\n- етикет-принтер для маркування виготовленої продукції;\n- цифрові датчики, що збирають дані з різних пристроїв / станцій.\n\nПрограмне забезпечення Engineer Workbench зазвичай складається з наступних контейнерів. По-перше, програмне забезпечення, яке потребує встановлення **на комп'ютері, на якому працює співробітник** під час зборки продукту:\n\n1. [feecc-workbench-daemon](https://github.com/Multi-Agent-io/feecc-workbench-daemon) - серце платформи Feecc, яке надає користувачам доступ до всіх функцій і конфігурацій Feecc; воно також містить легкі служби для друку етикеток за допомогою етикет-принтера та запису відео з потоків RTSP;\n2. [feecc-workbench-frontend](https://github.com/Multi-Agent-io/feecc-workbench-frontend) - веб-інтерфейс для взаємодії співробітника з платформою Feecc;\n3. [feecc-hid-reader-daemon](https://github.com/Multi-Agent-io/feecc-hid-reader-daemon) - Python-демон для відправлення подій USB-периферійних пристроїв;\n\nПо-друге, програмне забезпечення, яке може бути встановлене **як на комп'ютері співробітника, так і на сервері в локальній мережі**:\n\n1. [feecc-ipfs-gateway](https://github.com/Multi-Agent-io/feecc-ipfs-gateway) — мікросервіс для публікації файлів в IPFS, а точніше, файлових CID в мережу Robonomics;\n\nНа рисунку нижче показана архітектура робочого місця інженера Feecc в корпоративному середовищі. IPFS Шлюз (а також вузол IPFS та MongoDB у вигляді кластерного піра) може бути розміщений на комп'ютері кожного співробітника, що підвищить децентралізацію системи за рахунок обчислювальних ресурсів.\n\n<LessonImages src=\"feecc-course/feecc_global_hardware.png\" alt=\"an architecture of Feecc\"/>\n\n### Підтримуване обладнання для одного робочого місця:\n\n#### Сканер RFID\n\nДля авторизації інженерів на місці роботи з їх внутрішніми значками потрібен USB-сканер RFID. Вхідна інформація обробляється за допомогою `feecc-hid-reader-daemon`.\n\n#### Сканер штрих-кодів\n\nUSB-сканер штрих-кодів необхідний для іентифікації продуктів за штрих-кодами, відправлення команд службам та правильного призначення сертифікатів. Вхідна інформація також обробляється за допомогою `feecc-hid-reader-daemon`. Бажано читання у двох вимірах, але не обов'язково.\n\n#### Комп'ютер співробітника\n\nНевеликий одноплатний комп'ютер обробляє сигнали зовнішніх пристроїв (сканер штрих-кодів, сканер RFID), відправляє запити на друк зображень на принтері, запуск та зупинку відеозапису, відправлення даних до IPFS Gateway. Він запускає наступні служби: `feecc-workbench-frontend`, `feecc-workbench-daemon` з підтримкою принтера та камери, `feecc-hid-reader-daemon`. Потрібне підключення до Інтернету через Wi-Fi або LAN.\n    \nВарто уточнити, що будь-який комп'ютер може бути використаний замість одноплатного комп'ютера з монітором. На ньому повинна бути встановлена операційна система GNU/LINUX нативно або через віртуальну машину.\n    \nМінімальні технічні характеристики:\n    \n- Процесор: Broadcom BCM2711, чотирьохядерний Cortex-A72 (ARM v8) 64-бітний SoC @ 1.8GHz або аналогічний;\n- ОЗП: 4 ГБ LPDDR4-3200 або аналогічний.\n\n#### Екран\n\nМонітор використовується працівником для введення та перегляду інформації про поточний виробничий етап. Також він відображає підказки для інженера на поточному етапі. Інші пристрої введення також можуть бути використані.\n\n#### Принтер для етикеток\n\nПринтер для етикеток використовується для друку QR-кодів та штрих-кодів для подальшого накладання етикеток на виріб для ідентифікації та верифікації. Взаємодія з принтером здійснюється за допомогою відповідної служби `feecc-workbench-daemon`. У нашому випадку ми використовуємо принтери XPrinter 236B.\n\n#### IP-камера\n\nIP-камера для захоплення виробничих процесів для включення в сертифікат продукту. Розташована над зоной зборки продукту. Взаємодія з камерою виконується за допомогою відповідної служби `feecc-workbench-daemon`.\n\nНеобхідні технічні характеристики: живлення через PoE, протокол передачі даних RTSP. У нашому випадку ми використовуємо камери Hikvision HiWatch DS-i200d.\n\n### Підтримуване обладнання для кількох робочих місць:\n\n#### Маршрутизатор або комутатор\n\nДля живлення IP-камер та підключення їх до служби `feecc-workbench-daemon` потрібен маршрутизатор або комутатор з підтримкою PoE 802.3af та живленням PoE на вихідних портах. У нашому випадку ми використовуємо MikroTik hEX PoE (один на 3-4 робочих місця) та живлення.\n\n#### Сервер (необов'язково)\n\nТакож може бути встановлений більший сервер, який може запускати `feecc-ipfs-gateway`. Він може бути розташований на місці одного з комп'ютерів робочих місць працівників. \n\nМінімальні технічні характеристики: \n\n- Процесор: Intel Xeon E-2200 або аналогічний;\n- Оперативна пам'ять: 8 ГБ;\n- Зберігання: 1 ТБ HDD;\n- LAN-інтерфейс: 1 Гбіт/с.\n\n## Feecc Analytics\n\nОсновним завданням Feecc Analytics є організація процесу відстеження готової продукції та її попереднього контролю перед продажем в відділі контролю продукції.\n\nFeecc Analytics залежить від наступних контейнерів:\n\n1. [feecc-analytics-backend](https://github.com/Multi-Agent-io/feecc-analytics-backend) — основне програмне забезпечення для розгортання аналітичної служби;\n2. [feecc-analytics-frontend](https://github.com/Multi-Agent-io/feecc-analytics-frontend) — програмне забезпечення для фронтенду аналітичної служби;\n\nЗазвичай воно розгортається на одному сервері локально з метою забезпечення безпеки даних тільки в межах організації.\n\nДля роботи Feecc Analytics потрібне обладнання - локальний або віддалений сервер (віртуальна машина), на якому буде працювати веб-застосунок та сканер штрих-кодів. Кожен авторизований співробітник може отримати доступ до веб-застосунку зі свого комп'ютера за допомогою імені користувача та пароля.\n\n## Feecc Validator\n\nОсновним завданням Feecc Validator є порівняння даних з різних сховищ даних для перевірки цілісності цифрового сертифіката продукту.\n\nFeecc Validator залежить від наступних контейнерів:\n\n1. [feecc-validator-backend](https://github.com/Multi-Agent-io/feecc-validator-backend) — мікросервіс, призначений для обробки перевірки сертифікатів та отримання даних, пов'язаних з одиницею, якщо у користувача є лише один з елементів даних;\n2. [feecc-validator-frontend](https://github.com/Multi-Agent-io/feecc-validator-frontend) — веб-інтерфейс для взаємодії з мікросервісом перевірки.\n\nТак само, як і Feecc Analytics, його можна розгорнути на одному сервері локально та потребує сканера штрих-кодів.\n\n<RoboAcademyText fWeight=\"500\">\nУ наступному уроці ми розглянемо систему Feecc ближче через невелику демонстрацію, яка працює локально на вашому комп'ютері.\n</RoboAcademyText>","fileInfo":{"path":"uk/learn/feecc-course/feecc-architecture.md","name":"feecc-architecture"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}