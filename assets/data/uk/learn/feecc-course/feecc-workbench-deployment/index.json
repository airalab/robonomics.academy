{"hash":"cc71bf47aafce049dec68b910ec43100bf99e437","data":{"course":{"id":"fea146b8c5577e1594561487aae3f9bc","title":"Розгортання Інженерної Робочої Області","description":"Цей курс призначений для того, щоб дізнатися про систему Feecc та всі її компоненти.","content":"\n<RoboAcademyText fWeight=\"500\">\nУ цьому уроці ви дізнаєтеся, як самостійно розгорнути необхідні компоненти Інженерної Робочої Області Feecc.\n</RoboAcademyText>\n\nСеред компонентів:\n\n- Демон Робочого Столу\n- Веб-інтерфейс Робочого Столу\n- IPFS Шлюз\n- Демон Читача HID\n\nУсі компоненти запускаються за допомогою [Docker](https://docs.docker.com/engine/install/ubuntu/) та [Docker compose](https://docs.docker.com/compose/), переконайтеся, що у вас їх встановлено.\n\n## Підготовка програмного забезпечення\n\n1. Компоненти Feecc використовують базу даних [MongoDB](https://www.mongodb.com/) для зберігання та доступу до даних. Перед використанням Feecc вам потрібно розгорнути MongoDB таким чином, який вам зручний. Ось деякі варіанти розгортання: [використання власного сервера](https://www.mongodb.com/try/download/community), [хмарна база даних в Atlas](https://www.mongodb.com/atlas) (безкоштовно), [хмарна база даних в DigitalOcean](https://www.digitalocean.com/products/managed-databases-mongodb) (платно). \n    \n    У будь-якому випадку вам потрібно отримати свій URI підключення до MongoDB, який вам потрібно ввести як значення змінної `MONGODB_URI` для всіх компонентів системи.\n    \n2. Якщо ви хочете скористатися надійним та прозорим зберіганням даних з вашої виробничої системи, вам потрібно створити обліковий запис на Robonomics. Для цього скористайтеся інструкціями, доступними за наступним посиланням: https://wiki.robonomics.network/docs/create-account-in-dapp/\n    \n    Вам потрібно зберегти фразу-сід облікового запису, оскільки вона буде використана пізніше в змінній `ROBONOMICS_ACCOUNT_SEED`.\n\n## Підготовка Робочого Столу\n\nПеред початком роботи підключіть усе необхідне обладнання до комп'ютера або сервера:\n\n- етикетний принтер за допомогою USB\n- читачі RFID / штрих-кодів за допомогою USB\n- IP-камера через маршрутизатор PoE/мережевий комутатор\n- монітор з клавіатурою та мишею або сенсорним екраном за допомогою USB та HDMI/VGA (необов'язково)\n\n## Запуск демона читача HID\n\n1. Клонуйте репозиторій:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon.git\ncd feecc-hid-reader-daemon\n</LessonCodeWrapper>\n\n2. Запустіть демона:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Запуск демона робочого місця\n\n1. Клонуйте репозиторій:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-daemon.git\ncd feecc-workbench-daemon\n</LessonCodeWrapper>\n\n2. Налаштуйте демона під свої потреби, використовуючи файл `docker-compose.yml`. Файл містить різні змінні середовища:\n\n    - Конфігурація MongoDB;\n    - Конфігурація Robonomics;\n    - Конфігурація IPFS;\n    - параметри принтера;\n    - параметри камери;\n    - параметри читача RFID / штрих-коду.\n    \n    Повний список змінних доступний у демоні [репозиторії](https://github.com/Multi-Agent-io/feecc-workbench-daemon). Наступні параметри є обов'язковими:\n    \n    - `MONGODB_URI`: ваш URI підключення до MongoDB;\n    - `MONGODB_DB_NAME`: ім'я бази даних MongoDB;\n    - `WORKBENCH_NUMBER`: номер робочого місця працівника.\n\n3. Запустіть демона:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Перевірте його функціональність. Перейдіть у браузері та відкрийте сторінку `http://127.0.0.1:5000/docs`, де повин��а бути документація інтерфейсу REST API системи. Якщо сторінка недоступна, то сервер не був запущений належним чином. Перевірте журнали всередині контейнера на наявність помилок, виправте їх і повторіть кроки збірки та запуску.\n\n## Запуск IPFS шлюзу\n\n1. Клонуйте репозиторій:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git\n</LessonCodeWrapper>\n\n\n2. Налаштуйте мікросервіс за своїми потребами, використовуючи файл `docker-compose.yml`. Файл містить змінні середовища для підключення до MongoDB, Robonomics та Pinata. Повний список змінних доступний у репозиторії шлюзу [repository](https://github.com/Multi-Agent-io/feecc-ipfs-gateway).\n\n3. Запустіть мікросервіс:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Запуск робочого столу Frontend\n\n1. Клонуйте репозиторій:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git\n</LessonCodeWrapper>\n\n2. Перейдіть в каталог `configs` та налаштуйте фронтенд сервіс за своїми потребами, використовуючи файл `config.json`. Особливо важливі наступні параметри:\n    - `socket` — вставте адресу демона робочого столу тут;\n    - `interface_language` — мова інтерфейсу, доступні опції `en` та `ru`;\n    - `dev_show_reducers` — увімкнення/вимкнення режиму розробника;\n    - `pulling_period` — період отримання даних з бекенду в мілісекундах;\n\n3. Запустіть контейнер фронтенду:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Перевір��е його функціональність. Перейдіть у браузер та відкрийте сторінку `http://localhost:3000`, ви повинні побачити сторінку авторизації.\n\n<RoboAcademyText fWeight=\"500\">\nУ наступному уроці ми розглянемо сервіс аналітики Feecc.\n</RoboAcademyText>","fileInfo":{"path":"uk/learn/feecc-course/feecc-workbench-deployment.md","name":"feecc-workbench-deployment"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}