{"hash":"b245a40217fbced1639aa527710a032ddca236bc","data":{"course":{"id":"88f6c1db7d740fcab049dfef77f48a13","title":"Підключіть Mars Curiosity Rover","description":"Підключіть Mars Curiosity rover під керуванням Robonomics parachain.","content":"\n**Давайте подивимося, як керування Robonomics Parachain дозволяє рухати Mars Curiosity rover. Вимоги:**\n\n<List>\n\n<li class=\"flex\">\n\nROS Melodic + Gazebo + RViz (інструкція з встановлення [тут](http://wiki.ros.org/melodic/Встановлення))\n\n</li>\n\n\n<li>додаткові пакети:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\n  sudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nIPFS до [0.6.0](https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz)\n\n</li>\n\n<li class=\"flex\">\n\n[Супутнє розширення IPFS](https://github.com/ipfs/ipfs-companion)\n\n</li>\n\n<li class=\"flex\">\n\nВузол Robonomics (виконуваний файл) (завантажте останню версію [тут](https://github.com/airalab/robonomics/releases). Цей підручник успішно протестований на версії 1.1)\n\n</li>\n\n</List>\n\n<br/>\n\nОсь відео, що показує успішний запуск:\n\nhttps://www.youtube.com/watch?v=6BSOyRbmac8\n\n\n<br/>\n\n### 1. Налаштування симуляції\n\nЗавантажте пакет Curiosity rover:\n<LessonCodeWrapper language=\"bash\">\n  mkdir -p robonomics_ws/src\n  cd robonomics_ws/src\n  git clone https://bitbucket.org/theconstructcore/curiosity_mars_rover/src/master/\n  cd ..\n  catkin build\n</LessonCodeWrapper>\n\nНам потрібно налаштувати початкові умови, щоб наш ровер почав рухатися плавно:\n\n<List>\n\n<li>Перейдіть до\n\n`src/master/curiosity_mars_rover_description/worlds` і змініть рядок 14 файлу` mars_curiosity.world` to \n`<pose>0 0 8 0 0 0</pose>`\n\n</li>\n\n<li>Перейдіть до\n\n`src/master/curiosity_mars_rover_description/launch` і змініть рядок 4 файлу `mars_curiosity_world.launch` на \n`<arg name=\"paused\" default=\"false\"/>`\n\nНе забудьте додати команду джерела `~/.bashrc`\n`source /home/$USER/robonomics_ws/devel/setup.bash`\n\n</li>\n\n<li> Перезавантажте консоль та запустіть симуляцію:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\n  roslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/rover.jpg\" alt=\"Mars rover\"/>\n\n</li>\n\n</List>\n\nПримітка: якщо зображення темне, наприклад, затінене, змініть `Camera` на `Orthorgraphic` в панелі інструментів Gazebo.\nСимуляцію можна закрити на деякий час.\n\n------------\n\n<br/>\n\n### 2. Завантаження пакету керування Robonomics\nДля завантаження пакету керування для Rover введіть в термінал:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\ncd ~/robonomics_ws/src\ngit clone https://github.com/PaTara43/robonomics_sample_controller\ncd robonomics_sample_controller\npip3 install -r requirements.txt\npip3 install rospkg\ncd ..\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 # The controller supports python3\n</LessonCodeWrapper>\n\n\n------------\n\n<br/>\n\n### 3. Керування обліковими записами в DAPP\nОскільки ми тестуємо, давайте створимо локальну мережу robonomics з використанням виконуваного файлу robonomics:\n\n<LessonCodeWrapper language=\"bash\">\n  ./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/robonomics.jpg\" alt=\"Запустітьning node\"/>\n\n\nПерейдіть на [портал Robonomics Parachain](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) та переключіться на локальний вузол \n\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/local_node.jpg\" alt=\"Local node\"/>\n\n\nПерейдіть до Облікових записів та створіть облікові записи **CURIOSITY** та **EMPLOYER**.\n\n**Важливо**! Скопіюйте адресу кожного облікового запису (щоб скопіювати адресу, натисніть на значок облікового запису) та **мнемонічне насіння** облікового запису Curiosity (отримане під час створення облікового запису)\nПерекажіть деякі гроші (одиниці) на ці облікові записи. Ви можете дізнатися більше про облікові записи в Robonomics [тут](https://wiki.robonomics.network/docs/en/create-account-in-dapp/)\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/account_creation.jpg\" alt=\"Account creation\"/>\n\n\nДодайте ці адреси, насіння та адресу вузла (за замовчуванням `ws://127.0.0.1:9944` для вузла розробника) в `config.config` в `robonomics_ws/src/robonomics_sample_controller/src`. Без лапок.\n\n------------\n\n<br/>\n\n### 4. Запуск Robonomics\n\nПерш ніж продовжувати, переконайтеся, що ви встановили [розширення IPFS Companion](https://github.com/ipfs/ipfs-companion).\n\nУ окремому терміналі запустіть IPFS:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nifps init #вам потрібно це зробити лише один раз під час встановлення IPFS\nipfs daemon\n</LessonCodeWrapper>\n\nУ іншому окремому терміналі запустіть симуляцію Curiosity, якщо вона не працює:\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nroslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\nЗачекайте, доки вона не залишиться нерухомою\n\nУ іншому терміналі запустіть контролер:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nrosrun robonomics_sample_controller sample_controller.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/controller.jpg\" alt=\"Controller\"/>\n\nТепер ви можете відправити транзакцію, що викликає рух ровера та збір даних. Для цього ви можете використовувати той самий [портал Robonomics Parachain](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/).\nПерейдіть до `Developer->Extrinsics` та виберіть обліковий запис робота Curiosity, зовнішній параметр `launch`, обліковий запис Curiosity як цільовий обліковий запис та `yes` як параметр.\nНадішліть зовнішній параметр.\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/extrinsic.jpg\" alt=\"Extrinsic\"/>\n\nРобот повинен почати рухатися. Він не прийматиме команди від інших облікових записів або команди з параметром `no`. Ровер буде рухатися та збирати дані протягом приблизно хвилини.\nПізніше, коли робота буде виконана:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/job_done.jpg\" alt=\"Job done\"/>\n\n\nНа порталі Robonomics перейдіть до `Developer -> Chain state` та отримайте `CURIOSITY` даталог, використовуючи кнопку “+” з вибраним запитом `datalog -> RingBufferItem` \n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/datalog.jpg\" alt=\"Datalog\"/>\n\n\nТепер хеш IPFS телеметрії збережено в блокчейні. Щоб побачити дані, просто скопіюйте хеш та знайдіть його на шлюзі:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/data_in_ipfs.jpg\" alt=\"Data in IPFS\"/>\n\n\nЦя телеметрія зберігається в децентралізованому сховищі, а ��ї хеш зберігається в блокчейні!\n","fileInfo":{"path":"uk/learn/connect-mars-curiosity-rover/overview.md","name":"overview"},"defaultName":"Connect Mars Curiosity Rover","lastUpdate":"Thu May 18 2023 10:41:00 GMT+0400 (Samara Standard Time)"}},"context":{}}