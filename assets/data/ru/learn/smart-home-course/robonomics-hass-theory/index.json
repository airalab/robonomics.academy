{"hash":"f33052c6cd25aad5fc1a1101d4bd76b0f766a37b","data":{"course":{"id":"06e3a541f32092a3585cae7474a7a2d6","title":"Урок №1, Теоретическое введение","description":"курс домашнего помощника","content":"\n## Ключевые компоненты суверенного умного дома \n\n<List>\n\n1. **[Raspberry Pi](https://www.raspberrypi.org/), одноплатный компьютер**.\n\nМы можем преобразить устройство в центр Интернета вещей после установки всех необходимых программ. Основная цель центра - оркестрировать протоколы, сети, приложения и различные устройства умного дома.\n\n2. **[Home Assistant](https://www.home-assistant.io/), программное обеспечение для управления открытым исходным кодом**.\n\nОн разработан для централизованного управления умными устройствами. Он может автоматически сканировать сеть на известные устройства и позволяет пользователям легко настраивать все необходимые автоматизации. Мы установим Home Assistant на Raspberry Pi.\n\nHome Assistant взаимодействует с устройствами и хранит их данные локально, что, к сожалению, не позволяет вам управлять устройствами удаленно. Для решения этой проблемы мы используем Robonomics Network.\n\n3. **[Robonomics Network](https://robonomics.network/), децентрализованный облачный сервис для безопасного и надежного управления приложениями Интернета вещей**.\n\nОн использует технологии web3, которые включают децентрализацию и технологии блокчейна для защиты умных устройств и их данных.\n\nОсновные функции Robonomics реализованы на основе блокчейна (парачейна) экосистемы Polkadot/Kusama. Среди основных функций парачейна - возможность отправить команду на запуск устройства и возможность хранить данные пользователя на блокчейне.\n\nПарачейн Robonomics имеет функцию подписки на Интернет вещей, которая позволяет пользователям отправлять транзакции в парачейн без комиссии на протяжении одного месяца. В практическом разделе этого курса вы будете использовать метод подписки.\n\nВзаимодействие между центром Интернета вещей и парачейном Robonomics осуществляется с использованием [robonomics-interface](https://github.com/Multi-Agent-io/Robonomics-interface) - библиотеки Python, специализирующейся на взаимодействии с Robonomics для удобного программирования.\n\n4. **[InterPlanetary File System](https://ipfs.tech/) (IPFS), программное обеспечение для хранения и обмена данными в распределенной файловой системе**.\n\nIPFS необходим для избегания хранения больших файлов на блокчейне (так как это было бы слишком дорого), вместо этого мы можем хранить хеши файлов IPFS, которые действуют как ссылки на эти файлы.\n\n## Протоколы для умных устройств\nВы будете использовать два основных протокола для умных устройств:\n\n1. **[Zigbee](https://csa-iot.org/all-solutions/zigbee/), беспроводной протокол связи.**\n\nОн очень часто используется для подключения умных устройств. Он разработан для низкого энергопотребления, легкости настройки и гибкости конфигурации, а также поддерживает самоорганизующуюся и самовосстанавливающуюся топологию сети сетки. На рынке доступно тысячи устройств с поддержкой Zigbee, что делает его очень привлекательным для создания умных домашних решений. Для управления устройствами Zigbee вам понадобится шлюз, который передает данные между сетью Zigbee и другой сетью (например, Wi-Fi).\n\n2. **[Протокол передачи телеметрии через очередь сообщений](https://mqtt.org/) (MQTT), протокол публикации-подписки, предназначенный для управления приложениями IoT.**\n\nПротокол легкий, требует минимальных ресурсов и обеспечивает надежность доставки сообщений. Протокол разработан для сетей с низкой пропускной способностью, высокой задержкой и ненадежностью, что делает его отличным вариантом для работы с большими объемами сообщений датчиков. MQTT требует сервера, который запускает брокер MQTT (в нашем случае он будет работать с нашим Raspberry Pi). Брокер получает все сообщения от клиентов MQTT, а затем маршрутизирует их к соответствующим клиентам-подписчикам.\n\n## Варианты подключения Zigbee\nВы исследуете два сценария подключения устройств к Home Assistant с помощью Robonomics.\n\n1. Первый сценарий не использует отдельный шлюз Zigbee для подключения устройств. Вместо этого используется комбинация [адаптера Zigbee](https://www.zigbee2mqtt.io/guide/adapters/) и программного обеспечения [Zigbee2MQTT](https://www.zigbee2mqtt.io/guide/adapters/).\n\n<LessonImages figure figureCaption=\"Architectural scheme of the scenario with Zigbee adapter\" src=\"smart-house-course/lesson-1-1.png\" alt=\"Architectural scheme of the scenario with Zigbee adapter\"/>\n\nАдаптер (например, JetHome USB JetStick Z2) подключается к Raspberry Pi и действует как интерфейс между компьютером и радиосвязью Zigbee. Zigbee2MQTT - это программное обеспечение, которое позволяет подключать Zigbee к сетям MQTT. Оно получает сообщения из сети Zigbee и преобразует их в удобные и хорошо структурированные сообщения MQTT.\n\n2. Во втором сценарии устройства подключаются с использованием [шлюза SLS](https://github.com/slsys/Gateway) на основе микроконтроллера ESP32. Для удобства использования Robonomics разработали [собственную модификацию](https://oshwlab.com/ludovich88/robonomics_sls_gateway_v01) шлюза.\n\n<LessonImages figure figureCaption=\"Architectural scheme of the scenario with SLS Gateway\" src=\"smart-house-course/lesson-1-2.png\" alt=\"Architectural scheme of the scenario with SLS Gateway\"/>\n\nШлюз SLS действует как координатор сообщений протокола Zigbee и позволяет использовать большинство доступного оборудования Zigbee. Для интеграции с Home Assistant используется протокол MQTT.\n\n## Удаленное управление\n\nУдаленное управление умным домом выполняется с использованием [децентрализованного приложения Robonomics](https://dapp.robonomics.network/) (dapp), которое обеспечивает доступ к функциям парачейна удобным для пользователя способом. Безопасность и неизменяемость пользовательских данных обеспечивается, с одной стороны, отправкой зашифрованных данных в IPFS (которые могут быть расшифрованы только ключом пользователя), а с другой стороны, размещением хэша IPFS этих данных на блокчейне.\n\n</List>\n\n\n\n","fileInfo":{"path":"ru/learn/smart-home-course/robonomics-hass-theory.md","name":"robonomics-hass-theory"},"defaultName":"Sovereign Smart Home with Robonomics and Home Assistant","lastUpdate":"Thu May 04 2023 12:54:41 GMT+0400 (Samara Standard Time)"}},"context":{}}