{"hash":"f33052c6cd25aad5fc1a1101d4bd76b0f766a37b","data":{"course":{"id":"ab81c6f2c9af3cc30c6e550125207a47","title":"Экстренная остановка, Инициализация, Управление положением тела","description":"Во время этого урока вы узнаете, как авторизоваться как пользователь, получить управление мотором и отправлять базовые команды Spot.","content":"\n<RoboAcademyText fWeight=\"500\">\nВо время этого урока вы узнаете, как авторизоваться как пользователь, получить управление мотором и отправлять базовые команды Spot.\n</RoboAcademyText>\n\n## Теория\n\nКак и все серьезные роботы, у Boston Dynamics Spot есть механизм защиты — [Служба E-Stop](https://dev.bostondynamics.com/docs/concepts/estop_service) (Экстренная остановка), который всегда должен быть активен во время работы Spot, чтобы избежать потенциального физического повреждения. Включение E-Stop мгновенно замораживает все сочленения (это происходит без выключения двигателей, если робот был включен).\n\nПрежде всего, мы должны арендовать контроль над роботом. Есть два способа сделать это - *приобрести* или *взять*. *Приобрести* означает запрос контроля мягким способом, если кто-то управляет роботом сейчас, ваш запрос будет отклонен. В другом случае, *взять* означает насильственное захватывание контроля, не имеет значения, существует ли текущий оператор.\n\nИтак, чтобы сделать какое-то движение, вы должны следовать схеме:\n\n<LessonImages src=\"boston-dynamics-spot/e_stop_scheme.png\" alt=\"Состояния выполнения робота\" imageClasses=\"mb\"/>\n\nRobot Execution States\n\nНа этом уроке вы узнаете, как управлять вращением робота, изменяя его *yaw*, *roll* и *pitch*. На рисунке ниже показана система координат корпуса:\n\n<LessonImages src=\"boston-dynamics-spot/spot_coords.png\" alt=\"Координаты Spot\" imageClasses=\"mb\"/>\n\nSpot coordinates\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nУглы в коде представлены в радианах.\n</RoboAcademyText>\n\nВ результате урока вы нарисуете первую букву своего имени в воздухе с лицом Spot. Давайте начнем настройку!\n\n## Настройка Gitpod\n\nДля этого урока мы будем использовать Gitpod, облачную среду IDE, которая позволяет практиковаться без установки какого-либо специального программного обеспечения на вашем компьютере.\n\n1. Зарегистрируйтесь на [Gitpod](https://gitpod.io/).\n2. Перейдите на нашу [среду обучения Spot](https://gitpod.io/#github.com/merklebot/spot-edu-environment) и откройте ее в нашем браузере. Вы увидите окно с типичными функциями IDE. \n3. Нажмите на значок Меню, затем перейдите в Терминал и создайте новый терминал.\n\n<LessonImages src=\"boston-dynamics-spot/gitpod_terminal.png\" alt=\"terminal\" imageClasses=\"mb\"/>\n    \n    \n4. Скопируйте и вставьте эту команду:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\npython3 prepare_yggdrasil.py\nsudo ./start_yggdrasil.sh\n\n</LessonCodeWrapper>\n\nи нажмите `Enter`.\n\n1. Откройте новый терминал (теперь вы можете сделать это, нажав кнопку `+`) и протестируйте подключение с помощью команды\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nping6 200:42f6:d055:e74e:ce4a:35aa:953a:70f7\n\n</LessonCodeWrapper>\n\nВы должны увидеть что-то вроде этого:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngitpod /workspace/spot-edu-environment (main) $ ping6 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09\nPING 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09(202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09) 56 data bytes\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=1 ttl=64 time=846 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=2 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=3 ttl=64 time=172 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=4 ttl=64 time=197 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=5 ttl=64 time=219 ms\n64 bytes from 202:9292:712f:a3ef:4a7e:b2b2:b45b:7e09: icmp_seq=6 ttl=64 time=242 ms\n\n</LessonCodeWrapper>\n\n1. До назначенного времени мы отправим вам закрытый ключ для установления SSH-соединения.\n2. Скопируйте ваш закрытый ключ в файл `id_ed25519`. Вы можете найти файл в боковом исследователе *stop-edu-enviroment*.\n3. **Добавьте пустую строку в конце** `id_ed25519` ***файла, это необходимо для правильной работы SSH.*** Нажмите `Ctrl+S`, чтобы сохранить изменения.\n\nЕсли все в порядке, вы можете начать выполнение урока, отредактировав `lesson1.py`\n\nДля выполнения кода используйте команду:\n\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n\n</LessonCodeWrapper>\n\n\n<RoboAcademyText fWeight=\"700\" fStyle=\"normal\">\nНе забудьте убедиться, что никто другой не запускает свою программу в данный момент.\n</RoboAcademyText>\n\n\n## Запланируйте практическую сессию\n\nИспользуйте веб-сайт планирования Spot, чтобы выбрать временной слот для вашей практической сессии:\n\n[meetings.hubspot.com/strelka](https://meetings.hubspot.com/strelka)\n\n## Практика\n\nТеперь мы создадим простой скрипт для Spot для рисования на экране с использованием движений его головы. \n\n<LessonCodeWrapper language=\"python\" codeClass=\"big-code\">\n# Import Spot Control modules\nimport bosdyn.client\nfrom bosdyn.client.robot_command import RobotCommandClient, blocking_stand\nfrom bosdyn.client.robot_command import RobotCommandBuilder\nfrom bosdyn.geometry import EulerZXY\nimport time\n# ENTER YOUR AUTH DATA HERE\nROBOT_IP=\"192.168.50.3\"\nSPOT_USERNAME=\"student\"\nSPOT_PASSWORD=\"\"\n# Helpers to control camera drawing (you don't need to modify it)\nimport requests\nVIDEOSERVER_URL=\"http://luke.merklebot:8000/\"\nVIDEOSERVER_TOKEN=\"1234\"\ndef notify_start_line():\n  requests.post(VIDEOSERVER_URL + \"start_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_stop_line():\n  requests.post(VIDEOSERVER_URL + \"stop_line\", json={\"token\": VIDEOSERVER_TOKEN})\ndef notify_clear_canvas():\n    requests.post(VIDEOSERVER_URL + \"clear_canvas\", json={\"token\": VIDEOSERVER_TOKEN})\n# Start with registering out SDK\nsdk = bosdyn.client.create_standard_sdk('LessonOneClient')\n# Create instance of robot and auth with credentials\nrobot = sdk.create_robot(ROBOT_IP)\nrobot.authenticate(SPOT_USERNAME, SPOT_PASSWORD)\n# Create lease client and take exclusive control over Spot.  \nlease_client = robot.ensure_client('lease')\nlease = lease_client.take()\nlease_keep_alive = bosdyn.client.lease.LeaseKeepAlive(lease_client)\n# Try to power on the robot\nrobot.power_on(timeout_sec=20)\nif robot.is_powered_on():\n    print(\"Powered On\")\n\t\t# If everything went smooth, Spot face lights should turn green\nelse:\n\t\t# In case of some problems, e.g. somebody stole control over robot\n    print(\"Failed\")\n    exit(0)\n# Synchronize Spor inner time with ours - to avoid outdated commands\nrobot.time_sync.wait_for_sync()\n# To execute robot movement, create command client through which orders are sent\ncommand_client = robot.ensure_client(RobotCommandClient.default_service_name)\n# Start movement with simple stand up\nblocking_stand(command_client, timeout_sec=10)\n# Rotate robot body:\n#  1. Build command for body rotation. It’s not an easy task to control robot motion with commands on low level. \n#     Bosdyn Client allow as to use a shortcut - RobotCommandBuilder. It contains a number of predefined commands, \n#     you need just to choose one of your liking and insert parameters\nfootprint_R_body = EulerZXY(yaw=0.1, roll=0.1, pitch=0.1)\ncmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n#  2. Execute builded command\ncommand_client.robot_command(cmd)\ntime.sleep(2)\n# Return robot state back\ncommand_client.robot_command(RobotCommandBuilder.synchro_stand_command(footprint_R_body=EulerZXY(yaw=0, roll=0, pitch=0)))\ntime.sleep(2)\n# Change robot height\ncmd = RobotCommandBuilder.synchro_stand_command(body_height=0.1)\ncommand_client.robot_command(cmd)\n# Now we are ready to draw letter. \ndef draw_letter(command_client):\n\t\t# Choose points to draw (see the coords explanation bellow)\n    points_xy_draw = (\n        (125, 125),\n        (375, 875),\n        (500, 500),\n        (250, 500),\n        (500, 500),\n        (625, 125),\n    )\n    for x, y in points_xy_draw:\n        convert = lambda x: (x / 1000 - 0.5) * -1\n        x, y = map(convert, (x, y))\n        footprint_R_body = EulerZXY(\n            yaw=x, \n            roll=0.0, \n            pitch=y,\n        )\n        cmd = RobotCommandBuilder.synchro_stand_command(footprint_R_body=footprint_R_body)\n        command_client.robot_command(cmd)\n        time.sleep(1)\nnotify_clear_canvas()\nnotify_start_line()\ndraw_letter(command_client)\nnotify_stop_line()\n# Turn off the robot gracefully\nrobot.power_off(cut_immediately=False)\n\n</LessonCodeWrapper>\n\n<RoboAcademyText fWeight=\"300\" fSize=\"90%\">\nЕсли нам нужно переместить голову Spot в какую-то точку на камере, нам нужно выполнить много больших вычислений с множеством нелинейных параметров, что вовсе не простая задача. Но мы могли бы сказать, что локально углы yaw и pitch могут быть приблизительно использованы как декартовы координаты с некоторым коэффициентом на изображении.\n</RoboAcademyText>\n\n\n<LessonImages src=\"boston-dynamics-spot/cartesian.jpeg\" alt=\"spot\" imageClasses=\"mb\"/>\n\nТеперь вы можете попробовать запустить скрипт и увидеть результат. Не забудьте сохранить свой код с помощью Ctrl+S:\n\n<LessonCodeWrapper language=\"bash\">\nsudo ./run_code.sh\n</LessonCodeWrapper>\n\n\n### Видео Spot можно найти здесь:\n[https://codepen.io/smehnov/pen/BaVNrPM](https://codepen.io/smehnov/pen/BaVNrPM)\n\n\n## Задание\nСоздайте скрипт на Python, управляющий положением тела робота с последовательностью движений:\n\n1. Встаньте\n2. Нарисуйте свои инициалы его лицом (одна буква, как минимум 3 точки)\n3. Сядьте\n\n## Резултаты\n\nТеперь вы знаете, как:\n\n- работать с SDK Spot\n- создавать базовую команду\n- вращать тело робота\n- подключаться к Spot\n\nИ даже нарисовали букву. Поздравляем!\n\n\n<RoboAcademyText fWeight=\"500\">\n\nМы собрали [rosbag](http://wiki.ros.org/rosbag) с данными сочленений Spot, чтобы вы могли визуализировать их (например, с помощью [foxglove](https://www.notion.so/Lesson-1-Emergency-Stop-Initialization-Body-Position-Control-4ccf6316330d4680ab1bb571b2b788d5)). Сертификат будет отправлен на вашу электронную почту в ближайшее время.\n\n</RoboAcademyText> \n\n\n## [Запланируйте свой первый урок](https://meetings.hubspot.com/strelka)","fileInfo":{"path":"ru/learn/boston-dynamics-spot/overview.md","name":"overview"},"defaultName":"Software Developing for Boston Dynamics Spot","lastUpdate":null}},"context":{}}