{"hash":"8ef03bb5d0758af9cf9521a2138c5ca6b002a78d","data":{"course":{"id":"5d04d69e602a43d71c4f207d53bbafbb","title":"Подключите манипулятор Kuka","description":"Подключите манипулятор","content":"\nВидео с примером работы можно найти здесь:\n\nhttps://youtu.be/z55HepXbHr8\n\n<br/>\n\n***\n\n<br/>\n\n## Требования\n\n<List>\n\n<li class=\"flex\">\n\nROS мелодичный, Gazebo (инструкция по установке [здесь](http://wiki.ros.org/melodic/Установка/Ubuntu))\n</li>\n\n<li>Некоторые дополнительные пакеты\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li> IPFS 0.4.22 \n\n(скачать отсюда (https://www.npackd.org/p/ipfs/0.4.22) и установить)\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ntar -xvzf go-ipfs_v0.4.22_linux-386.tar.gz\ncd go-ipfs/\nsudo bash install.sh\nipfs init\n</LessonCodeWrapper>\n\n</li>\n\n<li>pip3\n\n<LessonCodeWrapper language=\"bash\">\nsudo apt-get install python3-pip\n</LessonCodeWrapper>\n\n</li>\n\n<li>ipfshttpclient\n\n<LessonCodeWrapper language=\"bash\">\npip3 install ipfshttpclient\n</LessonCodeWrapper>\n\n</li>\n\n<li>substrate-interface\n\n<LessonCodeWrapper language=\"bash\">\npip3 install substrate-interface\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nУзел Robonomics (бинарный файл) (скачать последний релиз [здесь](https://github.com/airalab/robonomics/releases))\n\n</li>\n\n<li>Расширение браузера IPFS (не обязательно)</li>\n\n</List>\n\n<br/>\n\n***\n\n<br/>\n\n## Установка\nУстановите манипулятор Kuka и пакеты управления\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">cd catkin_wc/src/\ngit clone https://github.com/orsalmon/kuka_manipulator_gazebo\ngit clone https://github.com/LoSk-p/kuka_controller\ncd ..\ncatkin_make</LessonCodeWrapper>\n\n***\n\n<br/>\n\n## Запуск модели gazebo\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsource ~/catkin_ws/devel/setup.bash\nroslaunch manipulator_gazebo manipulator_empty_world.launch\n</LessonCodeWrapper>\n\nВ новом окне\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun manipulator_gazebo move_arm_server\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/1.png\" alt=\"model\"/>\n\n***\n\n<br/>\n\n## Запуск robonomics\nПерейдите в папку с файлом robonomics и создайте локальную сеть robonomics:\n\n<LessonCodeWrapper language=\"bash\">\n./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/robonomics.png\" alt=\"robonomics\"/>\n\nПерейдите на портал Robonomics Parachain (https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) и переключитесь на локальный узел\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/local.png\" alt=\"local\"/>\n\nЗатем перейдите в раздел Accounts и создайте учетную запись `KUKA`. Сохраните мнемонический ключ учетной записи, вам понадобится он позже. \n\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/create_acc.png\" alt=\"acc\"/>\n\nОтправьте некоторые единицы на новую учетную запись с одной из учетных записей по умолчанию.\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/send_money.png\" alt=\"accs\"/>\n\n***\n<br/>\n\n## Запуск ipfs\nЗапустить ipfs daemon:\n\n<LessonCodeWrapper language=\"bash\">\nipfs daemon\n</LessonCodeWrapper>\n\n***\n\n</br>\n\n## Запуск пакета управления\nВ каталоге конфигурации в пакете управления kuka_control вам нужно создать файл конфигурации с этими строками, где `<your_mnemonic>` - сохраненное мнемоническое зерно:\n\n<LessonCodeWrapper language=\"bash\">\n{\n    \"kuka_mnemonic\": \"[your_mnemonic]\",\n    \"node\": \"ws://127.0.0.1:9944\"\n}\n</LessonCodeWrapper>\n\n\nТеперь вы можете запустить управляющий скрипт:\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun kuka_controller move_arm_client.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/run.png\" alt=\"control\"/>\n\n## Отправка транзакции\nНа портале Robonomics Parachain (https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) перейдите в `Developer/Extrinsics`, измените `extrinsic` на `launch`. Выберите свою учетную запись `KUKA` в `robot` и измените `param` на `Yes`. Затем нажмите `Submit Transaction`\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/launch.png\" alt=\"transaction\"/>\n\nВ окне с пакетом управления kuka_control вы увидите:\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/res.png\" alt=\"done\"/>\n\nЗатем перейдите в `Developer/Chain State` на портале Robonomics, выберите `datalog` и `datalogItem((AccountId,u64)): RingBufferItem` в запросе и добавьте `KUKA` datalog с помощью кнопки '+':\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/datalog.png\" alt=\"datalog\"/>\n\nТеперь вы можете найти телеметрию робота в IPFS по этой ссылке с вашим хэшем `https://gateway.ipfs.io/ipfs/<hash>`.\n\n## Устранение неполадок\n\nЕсли `catkin_make` не работает с сообщением о том, что не удается найти MoveArm.h, попробуйте удалить последние четыре строки в CMakeLists.txt в пакете kuka_manipulator_gazebo:\n\n<LessonCodeWrapper language=\"yaml\">\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(move_arm_server src/move_arm_server.cpp)\ntarget_link_libraries(move_arm_server ${catkin_LIBRARIES})\nadd_dependencies(move_arm_server beginner_tutorials_gencpp)\n</LessonCodeWrapper>\n\nВыполните `catkin_make` без этих строк, затем верните их и выполните `catkin_make` снова.","fileInfo":{"path":"ru/learn/kuka/overview.md","name":"overview"},"defaultName":"Connect Kuka manipulator","lastUpdate":null}},"context":{}}