{"hash":"b1e56d0488e11d362be002f253a9d20523c77de4","data":{"course":{"id":"fbbee47dba0a56f89c5da475ae9b6ea3","title":"Архитектура","description":"Этот курс посвящен знакомству с системой Feecc и всеми ее компонентами.","content":"\n<RoboAcademyText fWeight=\"500\">\nВ этом уроке мы ближе познакомимся с архитектурой Feecc и рассмотрим все компоненты программного обеспечения.\n</RoboAcademyText>\n\nПлатформа Feecc состоит из нескольких служб, от контроля рабочего места инженера до предоставления аналитики. Каждая служба отвечает за определенный функционал, необходимый для развертывания в корпоративной среде.\n\n## Рабочее место инженера Feecc\n\nОсновная задача Рабочего места инженера - организация рабочего пространства сборочного инженера. В зависимости от задачи инженеру может понадобиться следующее оборудование:\n\n- IP-камера для организации видеозаписи процесса производства;\n- Считыватель RFID для идентификации в системе по персональной RFID-карте;\n- Сканер штрих-кода для сканирования этикеток продукции;\n- Принтер этикеток для маркировки произведенной продукции;\n- Цифровые датчики, собирающие данные с различных устройств / станций.\n\nПрограммное обеспечение Рабочего места инженера обычно состоит из следующих контейнеров. Во-первых, программное обеспечение, требующее установки **на компьютер, на котором работает сотрудник** во время сборки продукта:\n\n1. [feecc-workbench-daemon](https://github.com/Multi-Agent-io/feecc-workbench-daemon) - сердце платформы Feecc, предоставляющее пользователям доступ ко всем функциям и конфигурациям Feecc; также содержит легковесные службы для печати этикеток с использованием принтера этикеток и записи видео из потоков RTSP;\n2. [feecc-workbench-frontend](https://github.com/Multi-Agent-io/feecc-workbench-frontend) - веб-интерфейс для взаимодействия сотрудников с платформой Feecc;\n3. [feecc-hid-reader-daemon](https://github.com/Multi-Agent-io/feecc-hid-reader-daemon) - Python-демон для отправки событий USB-периферийных устройств;\n\nВо-вторых, программное обеспечение, которое можно установить **как на компьютер сотрудника, так и на сервер в локальной сети**:\n\n1. [feecc-ipfs-gateway](https://github.com/Multi-Agent-io/feecc-ipfs-gateway) — микросервис для публикации файлов в IPFS, и более конкретно, CID файлов в сеть Robonomics;\n\nНа рисунке ниже показана архитектура Рабочего места Инженера Feecc в корпоративной среде. Шлюз IPFS (а также узел IPFS и MongoDB в виде кластерного узла) могут быть размещены на компьютере каждого сотрудника, что повысит децентрализацию системы за счет вычислительных ресурсов.\n\n<LessonImages src=\"feecc-course/feecc_global_hardware.png\" alt=\"an architecture of Feecc\"/>\n\n### Поддерживаемое оборудование для одного рабочего места:\n\n#### Сканер RFID\n\nДля авторизации инженеров на месте работы с их внутренними бейджами требуется USB-сканер RFID. Входящая информация обрабатывается с использованием `feecc-hid-reader-daemon`.\n\n#### Сканер штрих-кода\n\nUSB-сканер штрих-кода необходим для идентификации продуктов по штрих-кодам, отправки команд на услуги и для правильного присвоения сертификатов. Входящая информация также обрабатывается с использованием `feecc-hid-reader-daemon`. Желательно считывание в двух измерениях, но не обязательно.\n\n#### Компьютер сотрудника\n\nНебольшой одноплатный компьютер обрабатывает сигналы от внешних устройств (сканер штрих-кода, сканер RFID), отправляет запросы на печать изображений на принтере, запускает и останавливает видеозапись, отправляет данные в IPFS Gateway. На нем работают следующие службы: `feecc-workbench-frontend`, `feecc-workbench-daemon` с поддержкой принтера и камеры, `feecc-hid-reader-daemon`. Требуется подключение к Интернету через Wi-Fi или LAN.\n    \nСледует отметить, что вместо одноплатного компьютера с монитором можно использовать любой компьютер. На нем должна быть установлена операционная система GNU/LINUX нативно или через виртуальную машину.\n    \nМинимальные технические характеристики:\n    \n- Процессор: Broadcom BCM2711, четырехъядерный Cortex-A72 (ARM v8) 64-битный SoC @ 1.8GHz или аналогичный;\n- ОЗУ: 4GB LPDDR4-3200 или аналогичный.\n\n#### Экран\n\nМонитор используется сотрудником для ввода и просмотра информации о текущем производственном этапе. Он также отображает подсказки для инженера на текущем этапе. Другие устройства ввода также могут быть использованы.\n\n#### Принтер для этикеток\n\nПринтер для печати QR-кодов и штрих-кодов для дальнейшего размещения этикеток на изделии для идентификации и верификации. Взаимодействие с принтером осуществляется с помощью соответствующего сервиса `feecc-workbench-daemon`. В нашем случае мы используем принтеры XPrinter 236B.\n\n#### IP-камера\n\nIP-камера для захвата производственных процессов для включения в сертификат продукта. Расположена над зоной сборки продукта. Взаимодействие с камерой выполняется с использованием соответствующего сервиса `feecc-workbench-daemon`.\n\nТребуемые технические характеристики: питание через PoE, протокол передачи данных RTSP. В нашем случае мы используем Hikvision HiWatch DS-i200d.\n\n### Поддерживаемое оборудование для нескольких рабочих мест:\n\n#### Маршрутизатор или коммутатор\n\nТребуется маршрутизатор или коммутатор с поддержкой PoE 802.3af и питанием PoE на выходных портах для питания IP-камер и их подключения к сервису `feecc-workbench-daemon`. В нашем случае мы используем MikroTik hEX PoE (один на 3-4 рабочих места) и блок питания.\n\n#### Сервер (опционально)\n\nТакже можно установить более крупный сервер, который может запускать `feecc-ipfs-gateway`. Он может быть размещен на месте одного из компьютеров рабочих мест сотрудников. \n\nМинимальные технические характеристики:\n\n- Процессор: Intel Xeon E-2200 или аналогичный;\n- ОЗУ: 8 ГБ;\n- Хранилище: 1 ТБ HDD;\n- Интерфейс LAN: 1 Гбит/с.\n\n## Feecc Analytics\n\nОсновная задача Feecc Analytics заключается в организации процесса отслеживаемости готовой продукции и их предпродажной проверки в отделе контроля продукции.\n\nFeecc Analytics зависит от следующих контейнеров:\n\n1. [feecc-analytics-backend](https://github.com/Multi-Agent-io/feecc-analytics-backend) — основное программное обеспечение для развертывания аналитического сервиса;\n2. [feecc-analytics-frontend](https://github.com/Multi-Agent-io/feecc-analytics-frontend) — программное обеспечение для фронтенда аналитического сервиса;\n\nОбычно развертывается на одном сервере локально для обеспечения безопасности данных только внутри организации.\n\nДля работы Feecc Analytics требуется локальный или удаленный сервер (виртуальная машина), на котором будет работать веб-приложение и сканер штрих-кодов. Каждый авторизованный сотрудник может получить доступ к веб-приложению с его/ее компьютера с помощью имени пользователя и пароля.\n\n## Feecc Validator\n\nОсновная задача Feecc Validator заключается в сравнении данных из разных хранилищ данных для проверки целостности цифрового сертификата продукта.\n\nFeecc Validator зависит от следующих контейнеров:\n\n1. [feecc-validator-backend](https://github.com/Multi-Agent-io/feecc-validator-backend) — микросервис, предназначенный для обработки проверки сертификатов и получения данных, связанных с блоком, предоставленным пользователем только одного из кусков данных;\n2. [feecc-validator-frontend](https://github.com/Multi-Agent-io/feecc-validator-frontend) — веб-интерфейс для взаимодействия с микросервисом проверки.\n\nКак и Feecc Analytics, его можно развернуть на одном сервере локально и требует сканера штрих-кодов.\n\n<RoboAcademyText fWeight=\"500\">\nНа следующем уроке мы более подробно рассмотрим систему Feecc через небольшое демо, которое будет запущено локально на вашем компьютере.\n</RoboAcademyText>","fileInfo":{"path":"ru/learn/feecc-course/feecc-architecture.md","name":"feecc-architecture"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}