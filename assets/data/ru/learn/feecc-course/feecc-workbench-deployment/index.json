{"hash":"8d66541f6e2b7bde6cbd76ed09ec87c40b5569d7","data":{"course":{"id":"aad8e808a1e719a40538f95cf5b20353","title":"Развертывание Рабочего места Инженера","description":"Этот курс посвящен знакомству с системой Feecc и всеми ее компонентами.","content":"\n<RoboAcademyText fWeight=\"500\">\nВ этом уроке вы узнаете, как самостоятельно развернуть необходимые компоненты Feecc Engineer Workbench.\n</RoboAcademyText>\n\nСреди компонентов:\n\n- Демон Рабочего места\n- Веб-интерфейс Рабочего места\n- Шлюз IPFS\n- Демон считывателя HID\n\nВсе компоненты запускаются с помощью [Docker](https://docs.docker.com/engine/install/ubuntu/) и [Docker Compose](https://docs.docker.com/compose/), убедитесь, что у вас есть их установили.\n\n## Подготовка программного обеспечения\n\n1. Компоненты Feecc используют базу данных [MongoDB](https://www.mongodb.com/) для хранения и доступа к данным. Перед использованием Feecc вам необходимо развернуть MongoDB любым удобным для вас способом. Вот некоторые варианты развертывания: [используя собственный сервер](https://www.mongodb.com/try/download/community), [облачная база данных в Atlas](https://www.mongodb.com/atlas) (бесплатно), [облачная база данных в DigitalOcean](https://www.digitalocean.com/products/managed-databases-mongodb) (платно). \n    \n    В любом случае вам необходимо получить свой URI подключения к MongoDB, который вам нужно будет ввести в качестве значения переменной `MONGODB_URI` для всех компонентов системы.\n    \n2. Если вы хотите воспользоваться надежным и прозрачным хранением данных из вашей производственной системы, вам необходимо создать учетную запись на Robonomics. Для этого используйте инструкции, доступные по следующей ссылке: https://wiki.robonomics.network/docs/create-account-in-dapp/\n    \n    Вам необходимо сохранить фразу-семя учетной записи, так как она будет использована позже в переменной `ROBONOMICS_ACCOUNT_SEED`.\n\n## Подготовка Рабочего места\n\nПеред началом работы подключите всю необходимую оборудование к компьютеру или серверу:\n\n- принтер этикеток через USB\n- считыватели RFID / штрих-кодов через USB\n- IP-камера через маршрутизатор PoE/сетевой коммутатор\n- монитор с клавиатурой и мышью или сенсорным экраном через USB и HDMI/VGA (по желанию)\n\n## Запуск демона считывателя HID\n\n1. Клонировать репозиторий:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon.git\ncd feecc-hid-reader-daemon\n</LessonCodeWrapper>\n\n2. Запустите демона:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Запуск демона рабочего стола\n\n1. Клонировать репозиторий:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-daemon.git\ncd feecc-workbench-daemon\n</LessonCodeWrapper>\n\n2. Настройте демона под ваши потребности, используя файл `docker-compose.yml`. Файл содержит различные переменные среды:\n\n    - Настройка MongoDB;\n    - Настройка Robonomics;\n    - Настройка IPFS;\n    - параметры принтера;\n    - параметры камеры;\n    - параметры считывателя RFID / штрих-кода.\n    \n    Полный список переменных доступен в репозитории демона [здесь](https://github.com/Multi-Agent-io/feecc-workbench-daemon). Следующие параметры обязательны:\n    \n    - `MONGODB_URI`: ваша строка подключения к MongoDB;\n    - `MONGODB_DB_NAME`: имя базы данных MongoDB;\n    - `WORKBENCH_NUMBER`: номер рабочего стола сотрудника.\n\n3. Запустите демона:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Проверьте его функциональность. Перейдите в браузер и откройте страницу `http://127.0.0.1:5000/docs`, которая должна содержать документацию по интерфейсу REST API системы. Если страница недоступна, значит сервер не запущен правильно. Проверьте журналы внутри контейнера на наличие ошибок, исправьте их и повторите шаги сборки и запуска.\n\n## Запуск IPFS шлюза\n\n1. Клонировать репозиторий:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ngit clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git\n</LessonCodeWrapper>\n\n\n2. Настройте микросервис под ваши потребности, используя файл `docker-compose.yml`. Файл содержит переменные среды для подключения к MongoDB, Robonomics и Pinata. Полный список переменных доступен в репозитории шлюза [repository](https://github.com/Multi-Agent-io/feecc-ipfs-gateway).\n\n3. Запустите микросервис:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n## Запуск рабочего стола Workbench\n\n1. Клонировать репозиторий:\n\n<LessonCodeWrapper language=\"bash\">\ngit clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git\n</LessonCodeWrapper>\n\n2. Перейдите в каталог `configs` и настройте службу фронтенда под ваши потребности, используя файл `config.json`. Особенно важны следующие параметры:\n    - `socket` — вставьте здесь адрес демона Workbench;\n    - `interface_language` — язык интерфейса, доступные варианты `en` и `ru`;\n    - `dev_show_reducers` — включение/отключение режима разработчика;\n    - `pulling_period` — период получения данных с бэкенда в миллисекундах;\n\n3. Запустите контейнер фронтенда:\n\n<LessonCodeWrapper language=\"bash\">\nsudo docker-compose up -d --build\n</LessonCodeWrapper>\n\n4. Проверьте его функциональность. Перейдите в браузер и откройте страницу `http://localhost:3000`, вы должны увидеть страницу авторизации.\n\n<RoboAcademyText fWeight=\"500\">\nНа следующем уроке мы рассмотрим сервис аналитики Feecc.\n</RoboAcademyText>","fileInfo":{"path":"ru/learn/feecc-course/feecc-workbench-deployment.md","name":"feecc-workbench-deployment"},"defaultName":"Getting Used to Feecc","lastUpdate":null}},"context":{}}