{"hash":"f0f5c02be608963a98931b1ff3d7b952f1efb26f","data":{"course":{"id":"4ff000eb0e49bf75c4395cd48ae81d1e","title":"Урок №4, Модуль подключения датчиков","description":"МОДУЛЬ ПОДКЛЮЧЕНИЯ ДАТЧИКОВ","content":"\nВ следующих статьях вы узнаете больше о модуле подключения датчиков. После этого вы сможете присоединиться к нашей децентрализованной сети датчиков или создать свою собственную карту датчиков.\n\n## О модуле подключения датчиков\n\nДецентрализованная сеть датчиков использует модуль `sensors-connectivity` на Python ([исходный код](https://github.com/airalab/sensors-connectivity)). Этот модуль позволяет любому пользователю запустить свой собственный сервер для получения данных от датчиков и их дальнейшей обработки. На данный момент разработчики запустили несколько таких серверов, и любой датчик может отправлять данные на них. Запуск нескольких серверов позволяет избежать потери данных в случае проблем с одним из них, так как датчики переключатся с неработающего сервера на работающий. В основном, вы можете представить модуль подключения датчиков как черный ящик с одним входом (данные датчика) и множеством выходов.\n\n<LessonImages  figure figureCaption=\"Module architecture\" src=\"sensors-connectivity-course/lesson-4-1.png\" alt=\"Module architecture\"/>\n\nМодуль подключения датчиков представляет собой набор станций (станция_1, станция_2 ... станция_n), которые получают различные данные, включая данные от датчиков через протокол HTTP. Также это могут быть датчики, подключенные к компьютеру через USB или любой другой источник данных. Полученные данные от станций обрабатываются модулем и передаются кормушкам (кормушка_1, кормушка_2 ... кормушка_n). Кормушки отправляют обработанные данные пользователю; в нашем случае данные отправляются в децентрализованный канал IPFS. \n\nКарта [Децентрализованной сети датчиков](https://sensors.robonomics.network/#/) - это децентрализованное приложение (dapp), работающее на компьютере. Оно считывает данные из канала IPFS и отображает их на карте. Нет прямого соединения между сервером, который собирает данные от датчиков, и картой, которую видит пользователь; данные передаются между ними через IPFS pubsub, что снижает нагрузку на серверы. \n\nКроме того, время от времени файл с данными за последний период времени хранится в IPFS, а хэш этих данных записывается на блокчейн. Поскольку IPFS является сетью с адресацией по содержимому, хранение данных в нем гарантирует, что любое изменение данных не останется незамеченным, потому что адрес нужного файла содержит хэш его содержимого, который изменится при любом изменении данных. Блокчейн используется для передачи хэша пользователю, который может использовать его для получения нужных данных из IPFS (это происходит, когда запрашивается история карты).\n\n## Установка модуля для Linux\n\n**Предварительные требования и установка**\n\n<List type=\"numbers\">\n\n<li>\n\nДля сборки модуля `sensors-connectivity` необходимо установить демон IPFS с версией не выше `0.8.x`. Предполагая, что вы работаете на Linux, выполните следующее (для версии `0.8.0`):\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">wget https://dist.ipfs.io/go-ipfs/v0.8.0/go-ipfs_v0.8.0_linux-amd64.tar.gz\ntar -xzf go-ipfs_v0.8.0_linux-amd64.tar.gz\ncd go-ipfs\nsudo bash install.sh\nipfs init</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nУстановите пакет с инструментами разработки `python3-dev` и установщик пакетов для Python `pip`:\n\n<LessonCodeWrapper codeClass=\"long-code\" language=\"bash\">sudo apt install python3-dev python3-pip</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nУстановите модуль как пакет PyPI:\n\n<LessonCodeWrapper codeClass=\"long-code\" language=\"bash\">pip3 install sensors-connectivity</LessonCodeWrapper>\n\nЕсли вы видите следующее предупреждение: \n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">WARNING: The script sensors_connectivity is installed in '/home/test2/.local/bin' which is not on PATH.\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.</LessonCodeWrapper>\n\nЗапустите следующую команду:\n\n<LessonCodeWrapper  language=\"bash\">cd ~\nexport PATH=\"/usr/local/bin:$PATH\"\nsource .profile</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## Конфигурация\n\n<List type=\"numbers\">\n\n<li>\n\nСоздайте каталог для файла конфигурации и файла базы данных в любом месте. Эта база данных будет сохранять хеши IPFS датчиков, временную метку и статус службы:\n\n<LessonCodeWrapper language=\"bash\">cd ~\nmkdir sensors_connectivity\ncd sensors_connectivity\ntouch database.db</LessonCodeWrapper>\n\n<RoboAcademyNote type=\"okay\" title=\"INFO\">\nИмя файла базы данных может быть любым, но расширение должно быть <code>.db</code>\n</RoboAcademyNote>\n\n</li>\n\n\n<li>\n\nСоздайте файл конфигурации в том же каталоге:\n\n<LessonCodeWrapper language=\"bash\">touch my_config.json</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nСкопируйте следующее в файл и вставьте полный путь к файлу базы данных в поле db_path. Этой конфигурации будет достаточно для получения данных датчиков через HTTP и отправки их на карту Robonomics:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"json\">{\n   \"general\": {\n      \"publish_interval\": 30,\n      \"db_path\": \"<YOUR/PATH/TO/DATABASE>\"\n   },\n   \"comstation\": {\n      \"enable\": false,\n      \"port\": \"/dev/<YOUR/PATH/TO/BOARD>\",\n      \"work_period\": 300,\n      \"geo\": \"00.000000,00.000000\",\n      \"public_key\": \"\"\n   },\n   \"httpstation\": {\n      \"enable\": true,\n      \"port\": 8001\n   },\n   \"mqttstation\": {\n      \"enable\": false,\n      \"host\": \"localhost\",\n      \"port\": 1883,\n      \"topic\": \"/freertos_mqtt_robonomics_example/#\",\n      \"username\": \"\",\n      \"password\": \"\"\n   },\n   \"robonomics\": {\n      \"enable\": true,\n      \"ipfs_provider\": \"/ip4/127.0.0.1/tcp/5001/http\",\n      \"ipfs_topic\": \"airalab.lighthouse.5.robonomics.eth\"\n   },\n   \"datalog\": {\n      \"enable\": false,\n      \"suri\": \"\",\n      \"dump_interval\": 60,\n      \"temporal_username\": \"\",\n      \"temporal_password\": \"\",\n      \"pinata_api\": \"\",\n      \"pinata_secret\": \"\"\n   },\n   \"dev\": {\n      \"sentry\": \"\"\n   },\n   \"frontier\": {\n      \"enable\": false,\n      \"suri\": \"\"\n   },\n   \"trackagro\": {\n      \"enable\": false,\n      \"token\": \"\"\n   }\n}</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## Запуск\n\n\n<List type=\"numbers\">\n\n<li>\n\nЗапуск демона IPFS:\n\n<LessonCodeWrapper codeCLass=\"big-code\" language=\"bash\">ipfs daemon --enable-pubsub-experiment</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nПосле установки конфигурации запустите службу с путем к файлу конфигурации в другом терминале:\n\n<LessonCodeWrapper language=\"bash\">sensors_connectivity \"path/to/your/config/file”</LessonCodeWrapper>\n\n</li>\n\n\n<li>\n\nВы увидите логи в терминале (также они будут добавлены в `~/.logs`). Пример:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">$ sensors_connectivity test.json\n2022-09-02 14:08:48,408 - INFO - Getting data from the stations...\n2022-09-02 14:08:48,409 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:08:48,409 - INFO - Sending result to the feeders...\n2022-09-02 14:08:48,411 - INFO - Checking data base...\n2022-09-02 14:09:18,410 - INFO - Sending result to the feeders...\n2022-09-02 14:09:18,410 - INFO - Getting data from the stations...\n2022-09-02 14:09:18,411 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:09:48,411 - INFO - Sending result to the feeders...\n2022-09-02 14:09:48,412 - INFO - Getting data from the stations...\n2022-09-02 14:09:48,413 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:10:18,413 - INFO - Sending result to the feeders...\n2022-09-02 14:10:18,413 - INFO - Getting data from the stations...</LessonCodeWrapper>\n\n</li>\n\n</List>\n\n## После установки\n\nЧтобы подключить ваш модуль `sensors-connectivity` к нашей Децентрализованной Сети Датчиков и увидеть ваши данные на карте, вам нужно отправить ваш IPFS ID на [vm@multi-agent.io](mailto:vm@multi-agent.io) или [ping@airalab.org](mailto:ping@airalab.org). Мы добавим ваш ID в список контроля доступа.\n\nПолучите свой IPFS `ID` с помощью следующей команды после запуска демона IPFS:\n\n<LessonCodeWrapper codeClass=\"big-code\" language=\"bash\">$ ipfs id\n{\n\t\"ID\": \"QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP\",\n\t\"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/uMV3rLM/C+LOh2DGPo3chr+VM+vyYMKi...\n    ...</LessonCodeWrapper>","fileInfo":{"path":"ru/learn/sensors-connectivity-course/sensors-connectivity-module.md","name":"sensors-connectivity-module"},"defaultName":"Sensors Connectivity & Decentralized Sensors Network","lastUpdate":null}},"context":{}}