{"hash":"cc71bf47aafce049dec68b910ec43100bf99e437","data":{"course":{"id":"702d0055dfc4911d663ace432c5a862f","title":"连接Kuka机械手","description":"连接机械手","content":"\n这里可以找到工作示例视频:\n\nhttps://youtu.be/z55HepXbHr8\n\n<br/>\n\n***\n\n<br/>\n\n## 要求\n\n<List>\n\n<li class=\"flex\">\n\nROS melodic，Gazebo（安装指南[在这里](http://wiki.ros.org/melodic/安装/Ubuntu)）\n</li>\n\n<li>一些额外的软件包\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li> IPFS 0.4.22 \n\n（从[这里](https://www.npackd.org/p/ipfs/0.4.22)下载并安装）\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\ntar -xvzf go-ipfs_v0.4.22_linux-386.tar.gz\ncd go-ipfs/\nsudo bash install.sh\nipfs init\n</LessonCodeWrapper>\n\n</li>\n\n<li>pip3\n\n<LessonCodeWrapper language=\"bash\">\nsudo apt-get install python3-pip\n</LessonCodeWrapper>\n\n</li>\n\n<li>ipfshttpclient\n\n<LessonCodeWrapper language=\"bash\">\npip3 install ipfshttpclient\n</LessonCodeWrapper>\n\n</li>\n\n<li>substrate-interface\n\n<LessonCodeWrapper language=\"bash\">\npip3 install substrate-interface\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nRobonomics节点（二进制文件）（从[这里](https://github.com/airalab/robonomics/releases)下载最新版本）\n\n</li>\n\n<li>IPFS浏览器扩展（非必需）</li>\n\n</List>\n\n<br/>\n\n***\n\n<br/>\n\n## 安装\n安装Kuka机械手和控制软件包\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">cd catkin_wc/src/\ngit clone https://github.com/orsalmon/kuka_manipulator_gazebo\ngit clone https://github.com/LoSk-p/kuka_controller\ncd ..\ncatkin_make</LessonCodeWrapper>\n\n***\n\n<br/>\n\n## 运行gazebo模型\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\nsource ~/catkin_ws/devel/setup.bash\nroslaunch manipulator_gazebo manipulator_empty_world.launch\n</LessonCodeWrapper>\n\n在新窗口中\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun manipulator_gazebo move_arm_server\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/1.png\" alt=\"model\"/>\n\n***\n\n<br/>\n\n## 运行robonomics\n转到带有robonomics文件的文件夹并创建本地robonomics网络:\n\n<LessonCodeWrapper language=\"bash\">\n./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/robonomics.png\" alt=\"robonomics\"/>\n\n转到[Robonomics Parachain门户](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/)并切换到本地节点\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/local.png\" alt=\"local\"/>\n\n然后转到帐户并创建`KUKA`帐户。保存帐户的助记词密钥，稍后会用到。 \n\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/create_acc.png\" alt=\"acc\"/>\n\n从默认帐户中向新帐户发送一些单位。\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/send_money.png\" alt=\"accs\"/>\n\n***\n<br/>\n\n## 运行ipfs\n运行 ipfs daemon:\n\n<LessonCodeWrapper language=\"bash\">\nipfs daemon\n</LessonCodeWrapper>\n\n***\n\n</br>\n\n## 运行控制软件包\n在kuka_control软件包的配置目录中，您需要创建带有以下行的配置文件，其中`<your_mnemonic>`是保存的助记词种子:\n\n<LessonCodeWrapper language=\"bash\">\n{\n    \"kuka_mnemonic\": \"[your_mnemonic]\",\n    \"node\": \"ws://127.0.0.1:9944\"\n}\n</LessonCodeWrapper>\n\n\n现在您可以运行控制脚本:\n\n<LessonCodeWrapper language=\"bash\">\nsource ~/catkin_ws/devel/setup.bash\nrosrun kuka_controller move_arm_client.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/run.png\" alt=\"control\"/>\n\n## 发送交易\n在[Robonomics Parachain门户](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/)中转到`Developer/Extrinsics`，将`extrinsic`更改为`launch`。在`robot`中选择您的`KUKA`帐户，并将`param`更改为`Yes`。然后按`提交交易`\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/launch.png\" alt=\"transaction\"/>\n\n在kuka_control软件包的窗口中，您将看到:\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/res.png\" alt=\"done\"/>\n\n然后在Robonomics门户上转到`Developer/Chain State`，选择`datalog`和`datalogItem((AccountId,u64)): RingBufferItem`，并使用按钮'+'添加`KUKA`数据日志:\n\n<LessonImages imageClasses=\"mb\" src=\"kuka/datalog.png\" alt=\"datalog\"/>\n\n现在您可以通过此链接在IPFS中找到机器人的遥测数据，其中包含您的哈希`https://gateway.ipfs.io/ipfs/<hash>`。\n\n## 故障排除\n\n如果`catkin_make`无法找到MoveArm.h并显示消息，则尝试在kuka_manipulator_gazebo软件包的CMakeLists.txt中删除最后四行:\n\n<LessonCodeWrapper language=\"yaml\">\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(move_arm_server src/move_arm_server.cpp)\ntarget_link_libraries(move_arm_server ${catkin_LIBRARIES})\nadd_dependencies(move_arm_server beginner_tutorials_gencpp)\n</LessonCodeWrapper>\n\n在没有这些行的情况下进行`catkin_make`，然后将它们恢复并再次进行`catkin_make`。","fileInfo":{"path":"zh/learn/kuka/overview.md","name":"overview"},"defaultName":"Connect Kuka manipulator","lastUpdate":null}},"context":{}}