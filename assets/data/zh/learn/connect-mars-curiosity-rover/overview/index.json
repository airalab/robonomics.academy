{"hash":"f0f5c02be608963a98931b1ff3d7b952f1efb26f","data":{"course":{"id":"ae531a693651f9cdd00b5aa226c4a188","title":"连接火星好奇号探测器","description":"将火星好奇号探测器连接到Robonomics空投控制下。","content":"\n**让我们看看Robonomics Parachain控制如何使火星好奇号探测器移动。要求:**\n\n<List>\n\n<li class=\"flex\">\n\nROS Melodic + Gazebo + RViz（安装手册[在这里](http://wiki.ros.org/melodic/安装)）\n\n</li>\n\n\n<li>额外软件包:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"big-code\">\n  sudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n</LessonCodeWrapper>\n\n</li>\n\n<li class=\"flex\">\n\nIPFS 高达 [0.6.0](https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz)\n\n</li>\n\n<li class=\"flex\">\n\n[IPFS 配套扩展](https://github.com/ipfs/ipfs-companion)\n\n</li>\n\n<li class=\"flex\">\n\nRobonomics节点（二进制文件）（在此处下载最新版本[here](https://github.com/airalab/robonomics/releases)。本教程在v1.1上测试通过）\n\n</li>\n\n</List>\n\n<br/>\n\n这是显示成功启动的视频:\n\nhttps://www.youtube.com/watch?v=6BSOyRbmac8\n\n\n<br/>\n\n### 1. 设置模拟\n\n下载好奇号探测器软件包:\n<LessonCodeWrapper language=\"bash\">\n  mkdir -p robonomics_ws/src\n  cd robonomics_ws/src\n  git clone https://bitbucket.org/theconstructcore/curiosity_mars_rover/src/master/\n  cd ..\n  catkin build\n</LessonCodeWrapper>\n\n我们需要调整起始条件，使我们的探测器平稳生成:\n\n<List>\n\n<li>前往\n\n`src/master/curiosity_mars_rover_description/worlds` and change line 14 of the file` mars_curiosity.world` to \n`<pose>0 0 8 0 0 0</pose>`\n\n</li>\n\n<li>前往\n\n`src/master/curiosity_mars_rover_description/launch`并更改文件`mars_curiosity_world.launch`的第4行 \n`<arg name=\"paused\" default=\"false\"/>`\n\n不要忘记添加源命令 `~/.bashrc`\n`source /home/$USER/robonomics_ws/devel/setup.bash`\n\n</li>\n\n<li> 重新启动控制台并启动模拟:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\n  roslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/rover.jpg\" alt=\"Mars rover\"/>\n\n</li>\n\n</List>\n\n注意: 如果图像很暗，例如有阴影，请在Gazebo工具栏中将`Camera`更改为`Orthorgraphic`。\n模拟可以暂时关闭。\n\n------------\n\n<br/>\n\n### 2. 下载Robonomics控制器软件包\n要在终端中下载Rover的控制器软件包:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\ncd ~/robonomics_ws/src\ngit clone https://github.com/PaTara43/robonomics_sample_controller\ncd robonomics_sample_controller\npip3 install -r requirements.txt\npip3 install rospkg\ncd ..\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 # The controller supports python3\n</LessonCodeWrapper>\n\n\n------------\n\n<br/>\n\n### 3. 在DAPP中管理帐户\n由于我们正在测试，让我们使用robonomics二进制文件在本地创建一个robonomics网络:\n\n<LessonCodeWrapper language=\"bash\">\n  ./robonomics --dev --tmp\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/robonomics.jpg\" alt=\"运行ning node\"/>\n\n\n转到[Robonomics Parachain门户](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/)并切换到本地节点 \n\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/local_node.jpg\" alt=\"Local node\"/>\n\n\n转到帐户并创建**CURIOSITY**和**EMPLOYER**帐户。\n\n**重要**！复制每个帐户的地址（单击帐户图标即可复制地址）和Curiosity的帐户**助记词种子**（在创建帐户时获得）\n向这些帐户转账一些资金（单位）。您可以在Robonomics [here](https://wiki.robonomics.network/docs/en/create-account-in-dapp/)中阅读有关帐户的更多信息\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/account_creation.jpg\" alt=\"Account creation\"/>\n\n\n在`robonomics_ws/src/robonomics_sample_controller/src`的`config.config`中添加这些地址、种子和节点地址（默认为`ws://127.0.0.1:9944`，用于开发节点）。不带引号。\n\n------------\n\n<br/>\n\n### 4. 启动Robonomics\n\n在继续之前，请确保您已安装[IPFS Companion Extension](https://github.com/ipfs/ipfs-companion)。\n\n在单独的终端中启动IPFS:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nifps init #每次IPFS安装只需执行一次\nipfs daemon\n</LessonCodeWrapper>\n\n在另一个单独的终端中启动好奇号模拟（如果尚未启动）:\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nroslaunch curiosity_mars_rover_description main_real_mars.launch\n</LessonCodeWrapper>\n\n等待直到它保持静止\n\n在另一个终端中启动控制器:\n\n<LessonCodeWrapper language=\"bash\" codeClass=\"long-code\">\nrosrun robonomics_sample_controller sample_controller.py\n</LessonCodeWrapper>\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/controller.jpg\" alt=\"Controller\"/>\n\n现在，您可以发送一个交易来触发Rover开始移动和收集数据。为此，您可以使用相同的[Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/).\n转到`Developer->Extrinsics`并选择Curiosity的雇主帐户，`launch`外部，Curiosity的帐户作为目标帐户，`yes`作为参数。\n提交外部。\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/extrinsic.jpg\" alt=\"Extrinsic\"/>\n\n机器人应该开始移动。它不会接受来自其他帐户的命令，也不会接受带有`no`参数的命令。探测器将在周围移动并收集数据约一分钟。\n稍后，当工作完成时:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/job_done.jpg\" alt=\"Job done\"/>\n\n\n在Robonomics门户网站上转到`Developer -> Chain state`并使用“+”按钮获取`CURIOSITY`数据日志，选择`datalog -> RingBufferItem`作为查询: \n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/datalog.jpg\" alt=\"Datalog\"/>\n\n\n现在，遥测的IPFS哈希已保存在区块链中。要查看数据，只需复制哈希并在网关上查找:\n\n<LessonImages imageClasses=\"mb\" src=\"connect-mars-curiosity-rover/data_in_ipfs.jpg\" alt=\"Data in IPFS\"/>\n\n\n这些遥测数据保存在分散存储中，其哈希存储在区块链中！\n","fileInfo":{"path":"zh/learn/connect-mars-curiosity-rover/overview.md","name":"overview"},"defaultName":"Connect Mars Curiosity Rover","lastUpdate":"Thu May 18 2023 10:41:00 GMT+0400 (Samara Standard Time)"}},"context":{}}