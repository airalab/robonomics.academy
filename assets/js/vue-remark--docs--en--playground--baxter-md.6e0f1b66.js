(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{"Gy/V":function(e,o,t){"use strict";t.r(o);var a=t("7uw+"),s=t("UQSp"),n=t("Kw5r");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.a.config.optionMergeStrategies;var i={VueRemarkRoot:s.a},c=function(e){var o=e.options.components=e.options.components||{},t=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===r(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?o[e]=i[e]:t[e]=function(){return i[e]}}))},l=n.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",d={excerpt:null,title:"Control Baxter robot",description:"Control Baxter robot",docId:5,metaOptions:["Playground"]};var g=function(e){e.options[p]&&(e.options[p]=d),n.a.util.defineReactive(e.options,p,d),e.options.computed=l.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},u=Object(a.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("VueRemarkRoot",[t("p",[e._v("Example of how it works:")]),t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/JivTDhDJLHo",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),t("br"),t("h2",{attrs:{id:"requirements"}},[t("a",{attrs:{href:"#requirements","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Requirements:")]),t("List",[t("li",{staticClass:"flex"},[t("p",[e._v("ROS Melodic + Gazebo (installation manual "),t("a",{attrs:{href:"http://wiki.ros.org/melodic/Installation",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(")  ")])]),t("li",[e._v("extra packages:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller python-catkin-tools python3-dev python3-catkin-pkg-modules python3-numpy python3-yaml ros-melodic-cv-bridge\n")])],1),t("li",{staticClass:"flex"},[t("p",[e._v("IPFS up to 0.6.0 (download from "),t("a",{attrs:{href:"https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(" and install)")])]),t("li",[e._v(" python packages:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nsudo apt-get -y install python3-pip\npip3 install --upgrade pip\n")])],1),t("li",{staticClass:"flex"},[t("p",[e._v("Robonomics node download latest "),t("a",{attrs:{href:"https://github.com/airalab/robonomics/releases",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("release")]),e._v(" here (last tested release v1.1)")])]),t("li",[e._v("IPFS browser extension (not necessary)")])]),t("br"),t("h2",{attrs:{id:"0-install-cv-bridge-extension-for-python3"}},[t("a",{attrs:{href:"#0-install-cv-bridge-extension-for-python3","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("0. install CV Bridge extension for python3")]),t("List",[t("li",[e._v(" Create catkin workspace\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nmkdir -p catkin_workspace/src\ncd catkin_workspace\ncatkin init\n")])],1),t("li",[e._v(" Instruct catkin to set cmake variables. Use your current version of `python`. For me, it is `python3.6`:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncatkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so\ncatkin config --install\n")])],1),t("li",[e._v(" Clone cv_bridge src:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ngit clone https://github.com/ros-perception/vision_opencv.git src/vision_opencv\n")])],1),t("li",[e._v(" Find version of cv_bridge in your repository:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\napt-cache show ros-melodic-cv-bridge | grep Version\n    Version: 1.12.8-0xenial-20180416-143935-0800\n")])],1),t("li",[e._v(" Checkout right version in git repo. In our case it is 1.12.8:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncd src/vision_opencv/\ngit checkout 1.12.8\ncd ../../\n")])],1),t("li",[e._v(" Build:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncatkin build cv_bridge\n")])],1),t("li",[e._v(" Extend environment with new package:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nsource install/setup.bash --extend\n")])],1),t("li",[e._v(" Test:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v('\n$ python3\nPython 3.6.9 (default, Jan 26 2021, 15:33:00) \n[GCC 8.4.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> from cv_bridge.boost.cv_bridge_boost import getCvType\n>>>\n\n')])],1)]),t("h2",{attrs:{id:"1-download-simulation-and-controller-packages"}},[t("a",{attrs:{href:"#1-download-simulation-and-controller-packages","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("1. Download simulation and controller packages")]),t("p",[e._v("Download packages:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncd ~\nmkdir -p robot_ws/src\ncd robot_ws/src\ngit clone https://github.com/nakata5321/Baxter_simulation_controller.git\ncd Baxter_simulation_controller\ngit checkout old_version\npip3 install -r requirements.txt\ncd ../..\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3\n")]),t("p",[e._v("Don't forget to add source command:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v('\necho "source /home/$USER/robot_ws/devel/setup.bash" >> ~/.bashrc\nsource ~/.bashrc\n')]),t("h2",{attrs:{id:"2-start-simulation"}},[t("a",{attrs:{href:"#2-start-simulation","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("2. Start simulation")]),t("p",[e._v("Let's start gazebo world and put our baxter in it:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nroslaunch gazebo_ros empty_world.launch\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/empty_world.jpg",alt:"empty_world"}}),t("p",[e._v("Open one more window in terminal:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nrosrun gazebo_ros spawn_model -file `rospack find baxter_description`/urdf/baxter.urdf -urdf -z 1 -model baxter\n")]),t("p",[e._v("You can put some models in front of our baxter. It will be more interesting.")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/baxter_simulation.jpg",alt:"baxter"}}),t("h2",{attrs:{id:"3manage-accounts-in-dapp"}},[t("a",{attrs:{href:"#3manage-accounts-in-dapp","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("3.Manage accounts in DAPP")]),t("p",[e._v("Since we are testing, let us create a local robonomics network with robonomics binary file. Go to folder with robonomics file and run:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\n./robonomics --dev --tmp --rpc-cors all\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/robonomics.jpg",alt:"robonomics"}}),t("p",[e._v("Go to "),t("a",{attrs:{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Robonomics Parachain portal")]),e._v(" and switch to local node")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/local_node.jpg",alt:"local_node"}}),t("p",[e._v("Go to Accounts and create "),t("strong",[e._v("Baxter")]),e._v(" and "),t("strong",[e._v("Employer")]),e._v(" accounts ("),t("strong",[e._v("Robot")]),e._v(" is not necessary)")]),t("p",[t("strong",[e._v("Important!")]),e._v(" Copy each account's "),t("strong",[e._v("Mnemonic")]),e._v(" and "),t("strong",[e._v("address")]),e._v(" (to copy address click on account's icon). "),t("strong",[e._v("Mnemonic")]),e._v(" is the private key for account.\nTransfer some money (units) to these accounts:")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/create_account.jpg",alt:"create account"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/create_account2.jpg",alt:"create account2"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/accounts.jpg",alt:"accounts"}}),t("p",[e._v("Add Baxter's "),t("strong",[e._v("Mnemonic")]),e._v(" and "),t("strong",[e._v("address")]),e._v(" to "),t("code",{pre:!0},[e._v("config.yaml")]),e._v(" in "),t("code",{pre:!0},[e._v("robot_ws/src/Baxter_simulation_controller/config/")])]),t("h2",{attrs:{id:"4start-simulation"}},[t("a",{attrs:{href:"#4start-simulation","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("4.Start simulation")]),t("p",[e._v("In new window run:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nifps init #you only need to do this once\nipfs daemon\n")]),t("p",[e._v("Open separate terminal and start "),t("em",[e._v("controller package")]),e._v(":")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nrosrun robot_controller robot_control.py\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/waiting.jpg",alt:"waiting"}}),t("p",[e._v("Now you can send a transaction triggering the Baxter to start moving and collecting data. To do so, you can use the same "),t("a",{attrs:{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Robonomics Parachain portal")]),e._v(". Go to "),t("strong",[e._v("Developer->Extrinsics")]),e._v(" and select Baxter's employer account, "),t("code",{pre:!0},[e._v("launch")]),e._v(" extrinsic, Baxter's account as a target account and "),t("code",{pre:!0},[e._v("yes")]),e._v(" as a parameter. Submit the extrinsic.")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/rob_message.jpg",alt:"rob_message"}}),t("p",[e._v("The robot should start moving. It won't accept commands from other accounts neither commands with "),t("code",{pre:!0},[e._v("no")]),e._v(" parameter.\nYou should see the following:")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/working.jpg",alt:"working"}}),t("p",[e._v("when the work is over go to the Robonomics Portal to "),t("code",{pre:!0},[e._v("Developer > Chain state")]),e._v(". Choose "),t("code",{pre:!0},[e._v("datalog.datalogItem(AccountId,u64)")]),e._v(" in "),t("strong",[e._v("state query")]),e._v(".If you want to show all datalog's, then turn off "),t("code",{pre:!0},[e._v("include option")]),e._v(' add view Baxter\'s datalog message using "+" button.')]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/datalog.jpg",alt:"datalog"}}),t("p",[e._v("Now the IPFS hash of the telemetry and photos is saved in the blockchain. To see the data simply copy the hash and insert it in the search bar with URL: gateway.ipfs.io/ipfs/"),t("br",{attrs:{put:"",your:"",hash:"",here:""}})]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/ipfs.jpg",alt:"ipfs"}}),t("p",[e._v("Click  "),t("strong",[e._v("View on Gateway")]),e._v(" and that's all!")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/result1.jpg",alt:"result1"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/result2.jpg",alt:"result2"}}),t("h2",{attrs:{id:"baxter-simulation-v20"}},[t("a",{attrs:{href:"#baxter-simulation-v20","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Baxter simulation v2.0")]),t("p",[e._v("Example of how it works:")]),t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/2Dvuv0ZE2Bw",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),t("br"),t("h2",{attrs:{id:"requirements-1"}},[t("a",{attrs:{href:"#requirements-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Requirements:")]),t("List",[t("li",{staticClass:"flex"},[t("p",[e._v("ROS Melodic + Gazebo (installation manual "),t("a",{attrs:{href:"http://wiki.ros.org/melodic/Installation",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(")  ")])]),t("li",[e._v("extra packages:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nsudo apt-get install ros-melodic-qt-build ros-melodic-driver-common ros-melodic-gazebo-ros-control ros-melodic-gazebo-ros-pkgs ros-melodic-ros-control ros-melodic-control-toolbox ros-melodic-realtime-tools ros-melodic-ros-controllers ros-melodic-xacro python-wstool ros-melodic-tf-conversions ros-melodic-kdl-parser python-wstool python-catkin-tools qt4-default\n")])],1),t("li",{staticClass:"flex"},[t("p",[e._v("IPFS up to 0.6.0 (download from "),t("a",{attrs:{href:"https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(" and install)")])]),t("li",[e._v(" python packages:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nsudo apt-get -y install python3-pip\npip3 install --upgrade pip\n")])],1),t("li",{staticClass:"flex"},[t("p",[e._v("Robonomics node (binary file) (download latest "),t("a",{attrs:{href:"https://github.com/airalab/robonomics/releases",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("release")]),e._v(" here)")])]),t("li",{staticClass:"flex"},[t("p",[e._v("Create "),t("strong",[e._v("Baxter")]),e._v(" and "),t("strong",[e._v("Employer")]),e._v(" accounts  on "),t("strong",[e._v("Robonomics Portal")]),e._v(" (you can find tutorial "),t("a",{attrs:{href:"https://wiki.robonomics.network/docs/create-account-in-dapp/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v('"Create an Account on Robonomics Portal"')]),e._v(" here).")])]),t("li",[e._v("IPFS browser extension (not necessary)")])]),t("br"),t("h2",{attrs:{id:"0-install-cv-bridge-extension-for-python3-1"}},[t("a",{attrs:{href:"#0-install-cv-bridge-extension-for-python3-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("0. install CV Bridge extension for python3")]),t("List",[t("li",[e._v(" Create catkin workspace\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\nmkdir -p catkin_workspace/src\ncd catkin_workspace\ncatkin init\n")])],1),t("li",[e._v(" Instruct catkin to set cmake variables. Use your current version of `python`. For me, it is `python3.6`:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncatkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so\ncatkin config --install\n")])],1),t("li",[e._v(" Clone cv_bridge src:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ngit clone https://github.com/ros-perception/vision_opencv.git src/vision_opencv\n")])],1),t("li",[e._v(" Find version of cv_bridge in your repository:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\napt-cache show ros-melodic-cv-bridge | grep Version\n    Version: 1.12.8-0xenial-20180416-143935-0800\n")])],1),t("li",[e._v(" Checkout right version in git repo. In our case it is 1.12.8:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncd src/vision_opencv/\ngit checkout 1.12.8\ncd ../../\n")])],1),t("li",[e._v(" Build:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncatkin build cv_bridge\n")])],1),t("li",[e._v(" Extend environment with new package:\n"),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nsource install/setup.bash --extend\n")])],1),t("li",[e._v(" Test:\n"),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v('\n$ python3\nPython 3.6.9 (default, Jan 26 2021, 15:33:00) \n[GCC 8.4.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> from cv_bridge.boost.cv_bridge_boost import getCvType\n>>>\n\n')])],1)]),t("br"),t("h2",{attrs:{id:"1-download-simulation-and-controller-packages-1"}},[t("a",{attrs:{href:"#1-download-simulation-and-controller-packages-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("1. Download simulation and controller packages")]),t("p",[e._v("We will need to create 2 workspaces - one for main Baxter's packages and other for main control programme.\nFirst workspace. It's main control programme. It will run under python3.")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncd ~\nmkdir -p robonomics_ws/src\ncd robonomics_ws/src/\ngit clone https://github.com/nakata5321/Baxter_simulation_controller.git\ncd Baxter_simulation_controller\npip3 install -r requirements.txt\n")]),t("p",[e._v("Second workspace. There will be all Baxter's packages. Simulation is very old, so it could run only under python2.")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncd ~\nmkdir -p robot_ws/src\ncd robot_ws/src/\nwstool init .\nwstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter_simulator/master/baxter_simulator.rosinstall\nwstool update\n")]),t("p",[e._v("These packages were created for ROS indigo. We have to change some files to run them on ROS melodic.\nWe will use "),t("strong",[e._v("patch")]),e._v(" files.")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\npatch ./baxter_simulator/baxter_sim_io/include/baxter_sim_io/qnode.hpp ~/robonomics_ws/src/Baxter_simulation_controller/patch/qnode_patch\npatch ./baxter_simulator/baxter_sim_kinematics/src/arm_kinematics.cpp ~/robonomics_ws/src/Baxter_simulation_controller/patch/arm_patch\npatch ./baxter_interface/src/baxter_interface/robot_enable.py ~/robonomics_ws/src/Baxter_simulation_controller/patch/interface_patch\n")]),t("p",[e._v("And let's build  all our packages:"),t("br"),e._v("\nFirst build Baxter's packages")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncd ../\ncatkin build\n")]),t("p",[e._v("Then return to first workspace and build it too:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\ncd ~/Baxter_simulation_controller/\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3\n")]),t("p",[e._v("Don't forget to add source command:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v('\necho "source /home/$USER/robot_ws/devel/setup.bash" >> ~/.bashrc\necho "source /home/$USER/robonomics_ws/devel/setup.bash" >> ~/.bashrc\nsource ~/.bashrc\n')]),t("h2",{attrs:{id:"2-start-simulation-1"}},[t("a",{attrs:{href:"#2-start-simulation-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("2. Start simulation")]),t("h3",{attrs:{id:"lets-start-our-simulation"}},[t("a",{attrs:{href:"#lets-start-our-simulation","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Let's start our simulation:")]),t("p",[e._v("At first go to "),t("code",{pre:!0},[e._v("robot_ws")]),e._v(" and copy and edit baxter.sh")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\ncd ~/robot_ws/\ncp src/baxter/baxter.sh .\n")]),t("p",[e._v("Find your local ip address with command:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nip a\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/ip_a.png",alt:"ip_a"}}),t("p",[e._v("Edit the following values in "),t("code",{pre:!0},[e._v("baxter.sh")]),e._v(" :")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nnano baxter.sh\n")]),t("ul",[t("li",[e._v("your_ip - put your local ip address. See "),t("code",{pre:!0},[e._v("ip a")])]),t("li",[e._v('ros_version - for example "melodic"')])]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/baxter_sh.jpg",alt:"baxtersh"}}),t("p",[e._v("Run the baxter shell script with sim specified:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code"}},[e._v("\n./baxter.sh sim\nroslaunch baxter_gazebo baxter_world.launch\n")]),t("p",[e._v("You can put some models in front of our baxter. It will be more interesting.")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/baxter_simulation.jpg",alt:"baxter"}}),t("h2",{attrs:{id:"3manage-accounts-in-dapp-1"}},[t("a",{attrs:{href:"#3manage-accounts-in-dapp-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("3.Manage accounts in DAPP")]),t("p",[e._v("Since we are testing, let us create a local robonomics network with robonomics binary file. Go to folder with robonomics file and run:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\n./robonomics --dev --tmp\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/robonomics.jpg",alt:"robonomics"}}),t("p",[e._v("Go to "),t("a",{attrs:{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Robonomics Parachain portal")]),e._v(" and switch to local node")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/local_node.jpg",alt:"local_node"}}),t("p",[e._v("Go to Accounts and create "),t("strong",[e._v("Baxter")]),e._v(" and "),t("strong",[e._v("Employer")]),e._v(" accounts.")]),t("p",[e._v('You can find The manual "Create an Account on Robonomics Portal" '),t("a",{attrs:{href:"https://wiki.robonomics.network/docs/create-account-in-dapp/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")])]),t("p",[t("strong",[e._v("Important!")]),e._v(" Copy each account's "),t("strong",[e._v("Mnemonic")]),e._v(" and "),t("strong",[e._v("address")]),e._v(" (to copy address click on account's icon). "),t("strong",[e._v("Mnemonic")]),e._v(" is the private key for account.")]),t("p",[e._v("Transfer some money (units) to these accounts:")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/create_account.jpg",alt:"create_account"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/create_account2.jpg",alt:"create_account2"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/accounts.jpg",alt:"accounts"}}),t("p",[e._v("Add Baxter's "),t("strong",[e._v("Mnemonic")]),e._v(" and "),t("strong",[e._v("address")]),e._v(" to "),t("code",{pre:!0},[e._v("config.yaml")]),e._v(" in "),t("code",{pre:!0},[e._v("robonomics_ws/src/Baxter_simulation_controller/config/")])]),t("h2",{attrs:{id:"4start-simulation-1"}},[t("a",{attrs:{href:"#4start-simulation-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("4.Start simulation")]),t("p",[e._v("In new window run:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nifps init #you only need to do this once\nipfs daemon\n")]),t("p",[e._v("Open separate terminal and start "),t("em",[e._v("controller package")]),e._v(":")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("\nrosrun robot_controller robot_control.py\n")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/waiting.jpg",alt:"waiting"}}),t("p",[e._v("Now you can send a transaction triggering the Baxter to start moving and collecting data. To do so, you can use the same portal "),t("a",{attrs:{href:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Robonomics Parachain portal")]),e._v(". Go to "),t("strong",[e._v("Developer->Extrinsics")]),e._v(" and select Baxter's employer account, "),t("code",{pre:!0},[e._v("launch")]),e._v(" extrinsic, Baxter's account as a target account and "),t("code",{pre:!0},[e._v("yes")]),e._v(" as a parameter. Submit the extrinsic.")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/rob_message.jpg",alt:"rob_message"}}),t("p",[e._v("The robot should start moving. It won't accept commands from other accounts neither commands with "),t("code",{pre:!0},[e._v("no")]),e._v(" parameter.\nYou should see the following:")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/working.jpg",alt:"working"}}),t("p",[e._v("When the work is over go to the Robonomics Portal to "),t("code",{pre:!0},[e._v("Developer > Chain state")]),e._v(". Choose "),t("code",{pre:!0},[e._v("datalog.datalogItem(AccountId,u64)")]),e._v(" in "),t("strong",[e._v("state query")]),e._v(".If you want to show all datalog's, then turn off "),t("code",{pre:!0},[e._v("include option")]),e._v(' add view Baxter\'s datalog message using "+" button.')]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/datalog.jpg",alt:"datalog"}}),t("p",[e._v("Now the IPFS hash of the telemetry and photos is saved in the blockchain. To see the data simply copy the hash and insert it in the search bar with URL:  ")]),t("h4",{attrs:{id:"gatewayipfsioipfs-put-your-hash-here"}},[t("a",{attrs:{href:"#gatewayipfsioipfs-put-your-hash-here","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("gateway.ipfs.io/ipfs/< put your hash here>")]),t("p",[e._v("That's all!")]),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/result1.jpg",alt:"result1"}}),t("LessonImages",{attrs:{imageClasses:"mb",src:"baxter/result2.jpg",alt:"result2"}})],1)}),[],!1,null,null,null);"function"==typeof c&&c(u),"function"==typeof g&&g(u);o.default=u.exports},UQSp:function(e,o,t){"use strict";o.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);