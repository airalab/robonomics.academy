(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{YKXY:function(s,t,e){"use strict";e.r(t);e("07d7"),e("PKPk"),e("3bBZ");var i={components:{MetaInfo:function(){return e.e(1).then(e.bind(null,"9qaU"))}}},a=(e("oet6"),e("KHd+")),n=Object(a.a)(i,(function(){var s=this,t=s.$createElement,i=s._self._c||t;return i("LayoutCourse",{attrs:{courseId:"3",lessonId:"2"}},[i("MetaInfo",{attrs:{pageTitle:"Lesson #2, Raspberry Pi Setup",pageDescription:"lesson description",pageImage:"/og/smart-home-course/2-raspberry-pi-setup"}}),i("section",{staticClass:"text__hyphened"},[i("section",{staticClass:"container__narrow"},[i("h2",[s._v(s._s(s.$ts("What's this about")))]),i("p",[s._v(s._s(s.$ts("In this lesson, you'll prepare your Raspberry Pi to become an IoT hub. You will sequentially install and configure all the necessary components, namely:"))+"\n        ")]),i("List",[i("li",[s._v("\n            "+s._s(s.$ts("Ubuntu Linux distribution for Raspberry Pi as a server operating system;"))+"\n          ")]),i("li",[s._v("\n            "+s._s(s.$ts("Home Assistant packages;"))+"\n          ")]),i("li",[s._v("\n            "+s._s(s.$ts("IPFS packages;"))+"\n          ")]),i("li",[s._v("\n            "+s._s(s.$ts("Zigbee2MQTT bridge (for Zigbee adapter scenario);"))+"\n          ")]),i("li",[s._v("\n            "+s._s(s.$ts("robonomics-interface library."))+"\n          ")])])],1),i("section",{staticClass:"container__reg"},[i("h2",[s._v(s._s(s.$ts("Instructions")))]),i("List",{attrs:{type:"numbers"}},[i("li",[i("p",[s._v(s._s(s.$ts("Preparing and Configuring the Raspberry Pi")))]),i("List",[i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Download the image of"))+" "),i("g-link",{attrs:{to:"https://ubuntu.com/download/raspberry-pi"}},[s._v(s._s(s.$ts("64-bit Ubuntu Server 22.04 LTS")))]),s._v(" "+s._s(s.$ts("or newer for Raspberry Pi."))+"\n                ")],1)]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Download and install a tool for writing image files called"))+" "),i("g-link",{attrs:{to:"https://www.balena.io/etcher/"}},[s._v(s._s(s.$ts("balenaEtcher")))]),s._v(" "+s._s(s.$ts("on your computer."))+"\n                ")],1),i("p",[s._v("\n                  "+s._s(s.$ts("Then, insert the SD card and run the balenaEtcher Imager program. Select the required image (which you just downloaded) as the operating system and ensure to select your SD card from the storage dropdown, and then select"))+" "),i("code",{staticClass:"nowb"},[s._v("flash")]),s._v(" "+s._s(s.$ts("image."))+"\n                ")]),i("g-image",{attrs:{src:e("aKtq"),alt:"balena"}})],1),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Open the SD card's storage and navigate inside the root folder of the card. The name of the folder should be something similar to"))+" "),i("code",[s._v("system-boot")]),s._v(".\n                ")]),i("p",[s._v("\n                  "+s._s(s.$ts("Find the file named"))+" "),i("code",[s._v("network-config")]),s._v(" "+s._s(s.$ts("and open it in a text editor. Copy the text below, paste it into the file and insert your"))+" "),i("span",{staticClass:"bold"},[s._v(s._s(s.$ts("Wi-Fi name")))]),s._v(" "+s._s(s.$ts("(SSID) and"))+" "),i("span",{staticClass:"bold"},[s._v(s._s(s.$ts("Wi-Fi password")))]),s._v(" "+s._s(s.$ts("(with quote marks)."))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[s._v("              "),i("code",{staticClass:"json"},[s._v('\nversion: 2\nethernets: \n  eth0:\n    dhcp4: true\n    optional: true\nwifis:\n  wlan0:\n    dhcp4: true\n    optional: true\n    access-points:\n      "YOUR_WIFI_NAME":\n        password: "YOUR_WIFI_PASSWORD"\n')]),s._v("\n                ")]),i("span",{staticClass:"italic"},[s._v("> "+s._s(s.$ts("Make sure that you input your actual Wi-Fi name and your Wi-Fi password.")))]),i("p",[s._v(s._s(s.$ts("Save the file, insert the SD card into the Raspberry Pi and turn it on. It should connect to your Wi-Fi network, which will take some time. It should be noted that making changes to this file later will not change the connection, and the config is valid only on the first launch of the device. If later you need to change settings, please edit the configuration file in"))+" "),i("code",[s._v("/etc/netplan/")]),s._v(" "+s._s(s.$ts("folder.")))])]),i("li",[i("p",[s._v(s._s(s.$ts("Now you need to find an address of the device. To do it you can use various methods for network scanning, like"))+" "),i("g-link",{attrs:{to:"https://www.fing.com/products"}},[s._v(s._s(s.$ts("Fing App")))]),s._v(", "),i("code",[s._v("arp -a")]),s._v(" "+s._s(s.$ts("command or"))+" "),i("g-link",{attrs:{to:"https://nmap.org/download.html"}},[s._v("nmap")]),s._v(", "+s._s(s.$ts("the latter will be used next.")))],1),i("p",[s._v(s._s(s.$ts("Install nmap with a command")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo apt-get install nmap")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("Then find your address in your local network. It should look like"))+" "),i("code",[s._v("192.168.xxx.xxx")]),s._v(" "+s._s(s.$ts("or"))+" "),i("code",[s._v("172.xxx.xxx.xxx.")]),s._v(" "+s._s(s.$ts("Pay attention as nmap can find many addresses on your local network.")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("ip a")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("Then scan your network as shown below replacing the last octet of the address with"))+" "),i("code",[s._v("0:")])]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("$ sudo nmap -sP 192.168.xxx.0/24")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("The output of the command will be something like this:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("Standard hostname for freshly installed Raspberry Pi should be"))+" "),i("code",{staticClass:"nowb"},[s._v("ubuntu")]),s._v(", "+s._s(s.$ts("so in this example the address is"))+" "),i("code",[s._v("192.168.43.56.")])])]),i("li",[i("p",[s._v(s._s(s.$ts("Connect to the Raspberry Pi via SSH with found IP. User is"))+" "),i("code",{staticClass:"nowb"},[s._v('"ubuntu"')]),s._v(", "+s._s(s.$ts("the password is"))+" "),i("code",{staticClass:"bold"},[s._v('"ubuntu"')]),s._v(".")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("ssh ubuntu@192.168.43.56")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("The system will ask you to change the password to a more secure one, make sure you don't lose it.")))]),i("p",[s._v(s._s(s.$ts("Further instructions are executed via SSH on the Raspberry Pi itself.")))])])])],1),i("li",[i("p",[s._v(s._s(s.$ts("Home Assistant Installation")))]),i("List",[i("li",[i("p",[s._v(s._s(s.$ts("Before starting, update the Raspberry Pi system and install necessary packages.  During installation you will see a window with service restart request. Just choose"))+" "),i("span",{staticClass:"accent"},[s._v("ok")]),s._v(" "+s._s(s.$ts("with the"))+" "),i("code",[s._v("tab")]),s._v(" "+s._s(s.$ts("button and press enter.")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get install -y python3 python3-dev python3-venv python3-pip \nlibffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf \nbuild-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev \nsubversion\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Create user"))+" "),i("code",[s._v("homeassistant")]),s._v(" "+s._s(s.$ts("and the directory for Home Assistant Core:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo useradd -rm homeassistant\nsudo mkdir /srv/homeassistant\nsudo chown homeassistant:homeassistant /srv/homeassistant\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Create a virtual environment for Home Assistant Core and switch to it. This should be done as the"))+" "),i("code",[s._v("homeassistant")]),s._v(" "+s._s(s.$ts("user, so after executing the commands your user will look like"))+" "),i("code",[s._v("(homeassistant) homeassistant@ubuntu")]),s._v(":")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo -u homeassistant -H -s\ncd /srv/homeassistant\npython3 -m venv .\nsource bin/activate\n")]),s._v("\n                ")]),i("p",[s._v("\n                  "+s._s(s.$ts("As the result, you will find a name of the virtual environment in the brackets:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ ")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Install required Python packages:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("python3 -m pip install wheel~=0.37\npip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11\npip3 install homeassistant==2022.8.2\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Start Home Assistant Core for the first time. This will complete the installation by automatically creating the"))+"\n                "),i("code",[s._v(".homeassistant")]),s._v(" "+s._s(s.$ts("configuration directory in the"))+" "),i("code",[s._v("/home/homeassistant")]),s._v(" "+s._s(s.$ts("directory, and installing any basic dependencies:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("hass")]),s._v("\n                ")])]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("While the initial setup is in progress, сheck your installation via the web interface on"))+" "),i("code",[s._v("http://%RASPBERRY_IP_ADDRESS%:8123")]),s._v(" "+s._s(s.$ts("In this example:"))+" "),i("code",[s._v("http://192.168.43.56:8123.")]),s._v(" "+s._s(s.$ts("You can open a web UI from any computer connected to your local network."))+"\n                ")]),i("p",[s._v(s._s(s.$ts("Wait until you will get the welcome windows with login / password creation and then stop Home Assistant with"))+" "),i("code",[s._v("Ctrl+C.")])])])])],1),i("li",[i("p",[s._v(s._s(s.$ts("IPFS Installation")))]),i("List",[i("li",[i("p",[s._v(s._s(s.$ts("For IPFS installation you can use our script to download IPFS and create systemd service with it. First, exit the virtual environment for Home Assistant:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("exit")]),s._v("\n                ")]),i("p",[s._v(s._s(s.$ts("Then execute:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("cd ~\nwget \nhttps://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh\nsudo chmod +x install_ipfs.sh\n./install_ipfs.sh\n")]),s._v("\n                ")])])])],1),i("li",[i("p",[s._v(s._s(s.$ts("Zigbee2MQTT Setup (Only for Zigbee Adapter)")))]),i("List",[i("li",[i("p",[s._v(s._s(s.$ts("Set up Node.js runtime environment repository and install it with required dependencies:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs git make g++ gcc\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Verify that the correct versions of Node.js (v14.X, V16.x, V17.x or V18.X) and package manager"))+" "),i("code",{staticClass:"nowb"},[s._v("npm")]),s._v(" "+s._s(s.$ts("(6.X, 7.X or 8.X) automatically installed with Node.js, have been installed:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("node --version\nnpm --version\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Create a directory for Zigbee2MQTT and set your user as owner of it:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo mkdir /opt/zigbee2mqtt\nsudo chown -R ${USER}: /opt/zigbee2mqtt\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Clone Zigbee2MQTT repository:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("git clone --depth 1 --branch 1.28.0 \nhttps://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v("\n                  "+s._s(s.$ts("Install dependencies (as user"))+" "),i("code",[s._v("pi")]),s._v("). "+s._s(s.$ts("Note that the"))+" "),i("code",[s._v("npm ci")]),s._v(" "+s._s(s.$ts("could produce some warning which can be ignored."))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("cd /opt/zigbee2mqtt\nnpm ci\n")]),s._v("\n                ")])])])],1),i("li",[i("p",[s._v(s._s(s.$ts("Systemd Services")))]),i("List",[i("li",[i("p",[s._v(s._s(s.$ts("Systemd service is useful for automating the launch of Home Assistant. Create new service for Home Assistant:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo nano /etc/systemd/system/home-assistant@homeassistant.service")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Paste the following")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v('[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\n\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c "/home/%i/.homeassistant"\nEnvironment="PATH=/srv/%i/bin"\n\n[Install]\nWantedBy=multi-user.target\n')]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Enable and start the service:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo systemctl enable home-assistant@homeassistant.service\nsudo systemctl start home-assistant@homeassistant.service\n")]),s._v("\n                ")])])])],1),i("li",[i("p",[s._v(s._s(s.$ts("Robonomics Integration")))]),i("List",[i("li",[i("p",[s._v(s._s(s.$ts("Log in with"))+" "),i("code",[s._v("homeassistant")]),s._v(" "+s._s(s.$ts("user on your Raspberry Pi:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("sudo -u homeassistant -H -s")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Source virtual environment and install required Python packages:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("source /srv/homeassistant/bin/activate\npip install robonomics-interface~=1.3\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("Then go to"))+" "),i("code",[s._v(".homeassistant")]),s._v(" "+s._s(s.$ts("directory, create folder"))+" "),i("code",{staticClass:"nowb"},[s._v("custom_components")]),s._v(" "+s._s(s.$ts("and clone in there the repository with the integration:"))+"\n                ")]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("cd /home/homeassistant/.homeassistant\nmkdir custom_components\ncd custom_components\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n")]),s._v("\n                ")])]),i("li",[i("p",[s._v(s._s(s.$ts("After that exit homeassistant user and restart service:")))]),i("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[i("code",{staticClass:"bash"},[s._v("exit\nsudo systemctl restart home-assistant@homeassistant.service\n")]),s._v("\n                ")])])])],1)])],1)])],1)}),[],!1,null,"9986077e",null);t.default=n.exports},aKtq:function(s,t){s.exports={type:"image",mimeType:"image/jpeg",src:"/assets/static/lesson-2-1.b569929.db460708d93e9eb82f580c5f773ac023.jpeg",size:{width:802,height:519},sizes:"(max-width: 802px) 100vw, 802px",srcset:["/assets/static/lesson-2-1.82a2fbd.db460708d93e9eb82f580c5f773ac023.jpeg 480w","/assets/static/lesson-2-1.b569929.db460708d93e9eb82f580c5f773ac023.jpeg 802w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 802 519' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-634ac1b9c83348e76dfbb2ee1d9d782f'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-634ac1b9c83348e76dfbb2ee1d9d782f)' width='802' height='519' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAApAEADASIAAhEBAxEB/8QAGwAAAwADAQEAAAAAAAAAAAAAAAQFAQIDBgf/xAAtEAABBAEDAQgBBAMAAAAAAAABAAIDBBEFEiExExVBUVKRktEGIiNCoWFxgf/EABkBAQEBAQEBAAAAAAAAAAAAAAABAwQCBf/EAB0RAAIDAAMBAQAAAAAAAAAAAAACAQMRBBJRoTH/2gAMAwEAAhEDEQA/APlJ0KsTkyTEnkkuH0juGr65vkPpVh0TDaNp1F91taY02PEbpww7GuPgT5rTIPOkHuGr65vkPpP0NFoRQucbZZI52CySuJeAODkg454TG13pd7LrUq2LluKrUhkmsyuDI4mDLnHyAUlQTr%2bj05nNd25eRx%2b3E2Lj/g5SncNX1zfIfSuWqs9S1LWtQyQ2InFkkTxhzXDqCFy2u9LvZIUEjuGr65vkPpUx%2bO6RFDI6LVZTIyBsjG9gQXSO4dHnHG0c7unkmZK08VeGeSGRkM%2b7spHNw1%2b04OD44K4q5A0zG0vc1oIBPmcD3VWPUNSj0iTSGXGDT5X9q%2bHezBcMHr1HIBxnBIHkpI6Lbd%2bjbyqQ3e%2bWM7TK7gfxkyP6KZ0%2be5UtRX6dkRWYjuZJ2oD2keIzykVlpwcoUcvz27VmW/bsCWxM7c%2bTtQXuJ8Tg5XbTKU%2boiTbZLAzAIcSc5/wprjkkrAJHQkf6WlTIrxLxsefhhelr1ytTdW9zfh6WT8ftvrQskvNdDHkRsIJ2ZOTgZ4yo2p0XUJmxvka/c3dkDH9JTc71O91gknqcra22hlyuvJ92ZOXjcfmVv2uu7L51iPsAOiEDohcp9EEIQgBCEIAQhCA//9k=' /%3e%3c/svg%3e"}},d4KH:function(s,t,e){},oet6:function(s,t,e){"use strict";e("d4KH")}}]);