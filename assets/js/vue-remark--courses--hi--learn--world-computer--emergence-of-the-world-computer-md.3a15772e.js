(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vue-remark--courses--hi--learn--world-computer--emergence-of-the-world-computer-md"],{

/***/ "7pjQ":
/*!********************************************************************************************************************************!*\
  !*** ./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--15-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./emergence-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"rmJj\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?");

/***/ }),

/***/ "DOt3":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/gridsome","cacheIdentifier":"3ec475f9-vue-loader-template"}!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=template&id=03ec80e6& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('VueRemarkRoot',[_c('p',[_vm._v(\"तीसरे भाग में, \\\"विश्व कंप्यूटर का उद्भव\\\" शीर्षक के तहत, हम परत दर परत उदाहरण के रूप में Ethereum और Polkadot का उपयोग करके विश्व कंप्यूटर की इंजीनियरिंग कार्यान्वयन को पुनः बनाने का प्रयास करेंगे।\")]),_c('p',[_vm._v(\"चलो Ethereum से शुरू करते हैं। Ethereum ने 2015 में उस अवस्था के साथ शुरुआत की, जिसे प्रूफ-ऑफ-वर्क सहमति एल्गोरिदम के संयोजन के रूप में वर्णित किया जा सकता है, जिससे विश्व कंप्यूटर विकेंद्रीकृत अवस्था में अस्तित्व में आ सका (जैसा कि भाग 2 में चर्चा की गई है)। इसके अतिरिक्त, Ethereum वर्चुअल मशीन (EVM) को पेश किया गया, जो एक Turing-complete कंप्यूटेशनल मशीन के रूप में कार्य करता है। इन दो तत्वों ने मिलकर विश्व कंप्यूटर के पहले संस्करण का निर्माण किया, जिसे कभी-कभी अग्रदूत के रूप में संदर्भित किया जाता है। इस संदर्भ में, विकेंद्रीकृत एप्लिकेशन, या स्मार्ट अनुबंध, उभरने लगे।\")]),_c('p',[_vm._v(\"अगले 5 वर्षों में, Ethereum ने कुछ इंजीनियरिंग ट्यूनिंग, जैसे गैस सीमा में निरंतर वृद्धि के अलावा, शंघाई कांटे जैसी घटनाओं को छोड़कर, तुलनात्मक रूप से अपरिवर्तित जीवन व्यतीत किया। विशेष रूप से, शंघाई में आयोजित दूसरे DEFCON के दौरान, एक सेवा-से-इन्कार हमले ने वर्चुअल मशीन में एक फ़ंक्शन का फायदा उठाया जो न्यूनतम गैस खपत करता था लेकिन Ethereum नेटवर्क पर महत्वपूर्ण गणनाएं उत्पन्न करता था। इससे मेमोरी ओवरफ्लो हुआ, जिसने प्रभावी रूप से एक पूरा Ethereum नोड बाधित कर दिया। यह घटना उस जटिलता को उजागर करती है जो एक वर्चुअल मशीन बनाने जैसे बड़े और अमूर्त समाधान के साथ आती है।\")]),_c('p',[_vm._v(\"आगे बढ़ते हुए, दशक के अंत के आसपास, विशेष रूप से 2020 में, Ethereum 2.0 के आगमन के साथ एक महत्वपूर्ण बदलाव हुआ। हालांकि, Ethereum 2.0 को अब निरस्त कर दिया गया है, और मैं वास्तविक सफलता को 2019-2020 के आसपास मानूंगा। इस अवधि के दौरान, Ethereum में तकनीकी सफलता की दिशा में एक वास्तविक प्रगति हुई, जो Ethereum 2.0 की अवधारणा की ओर बढ़ रही थी। Ethereum के वास्तुकला में इंजीनियरिंग परिवर्तन की क्षण को \\\"द मर्ज\\\" के रूप में जाना जाने वाला घटना माना जा सकता है, जहां बीकन चेन की कार्यक्षमताओं को जोड़ा गया था। मर्ज ने Ethereum के प्रतिमान में एक महत्वपूर्ण बदलाव को चिह्नित किया, इसे एक अलग स्थिति में परिवर्तित किया। अधिक विवरण के लिए, आप ethereum.org वेबसाइट देख सकते हैं, जहां पारंपरिक Ethereum ब्लॉकचेन और 2015 में लॉन्च की गई समानांतर ब्लॉकचेन और Ethereum वर्चुअल मशीन की सहअस्तित्व पर एक उत्कृष्ट लेख उपलब्ध है।\")]),_c('p',[_vm._v(\"जब मर्ज हुआ, तो हमने नेटवर्क स्तर पर और Ethereum नेटवर्क के साथ इंटरैक्ट करने वाले व्यक्तिगत नोड्स के लिए एक नई वास्तुकला प्रतिनिधित्व देखा। वास्तविक परिवर्तन क्या था? कई लोगों के लिए, मर्ज प्रूफ-ऑफ-वर्क से प्रूफ-ऑफ-स्टेक में संक्रमण को इंगित करता है, जो वास्तव में महत्वपूर्ण है। यह बढ़ी हुई दक्षता और ट्यूनिंग को इंगित करता है, लेकिन यह अभी भी एक पैरामीटर के सापेक्ष एक ट्यूनिंग है। हालांकि, प्रत्येक नेटवर्क क्लाइंट के लिए अधिक उल्लेखनीय आंतरिक इंजीनियरिंग परिवर्तन विभाजन था। अब कोई विशिष्ट नेटवर्क क्लाइंट या मोनोलिथिक आर्किटेक्चर नहीं था। इसके बजाय, हमें एकल नोड के दो घटक मिले जो Ethereum नेटवर्क के साथ इंटरैक्ट करते हैं।\")]),_c('p',[_vm._v(\"पहला भाग, जिसे मैंने आरेख में \\\"बीकन चेन\\\" लेबल किया है, वास्तव में उन सभी नवाचारों का सामूहिक चित्रण करता है जो मर्ज के समय Ethereum क्लाइंट में आए। दूसरा भाग संरक्षित वर्चुअल मशीन है। फिर भी, यहां कुछ जोड़ना भी महत्वपूर्ण है। वर्चुअल मशीन को बदलने की बातचीत वास्तव में शुरू हो गई, जो विशेष रूप से स्मार्ट अनुबंधों और विशेष भाषा—Solidity में स्मार्ट अनुबंधों के साथ काम करने के लिए तैयार की गई थी। 2015 तक, Solidity के अलावा अन्य भाषाओं में स्मार्ट अनुबंधों के लिए लगभग कोई इंटरप्रेटर नहीं बचे थे, और वास्तुकला एक Ethereum प्रोग्रामर के दृष्टिकोण से कुछ हद तक एकतरफा दिखाई दी। आप Solidity के रूप में JavaScript का एक स्निपेट सीखते हैं, उस पर स्मार्ट अनुबंध कोड लिखते हैं, और अपना DApp प्राप्त करते हैं, उदाहरण के लिए, Uniswap।\")]),_c('p',[_vm._v(\"एक अधिक जटिल Ethereum वास्तुकला के उद्भव के बाद से, बातचीत इस विचार के इर्द-गिर्द घूमती है कि वर्चुअल मशीन, जो 2015 से एक कुछ हद तक मोनोलिथिक तत्व के रूप में मौजूद थी, को भी नई वास्तुकला में बदला जा सकता है। बातचीत इसे WebAssembly (Wasm) या एक अधिक रोचक समाधान जैसे किसी चीज़ से बदलने की दिशा में स्थानांतरित हो गई। Wasm के दृष्टिकोण से, यह एक प्रश्न चिह्न के साथ हो सकता है।\")]),_c('p',[_vm._v(\"बीकन चेन के दृष्टिकोण से, यह वास्तव में प्रूफ-ऑफ-स्टेक पर काम करता है, लेकिन अधिक रोचक बात यह है कि इसमें Gasper का समावेश है। यह मूल Casper के विचारों में एक संशोधन का प्रतिनिधित्व करता है। Casper, जिसे अक्सर मैत्रीपूर्ण भूत अंतिमता गैजेट के रूप में संदर्भित किया जाता है, को DEFCON 3 या 4 में, और शायद DEFCON 2 में भी चर्चा की गई—मुझे सटीक याद नहीं है, लेकिन पेरिस में EthCC सम्मेलन में, जो निश्चित रूप से 2018 में हुआ, Vlad Zamfir और Vitalik ने अलग-अलग कमरों से Casper के उद्भव की चर्चा की, जिसे एक मैत्रीपूर्ण भूत के रूप में देखा गया, जो प्रूफ-ऑफ-स्टेक में प्रतिभागियों की निगरानी करता है और जब कोई नोड गलत व्यवहार करता है तो नेटवर्क की मदद करता है। Casper के इस विचार से Gasper निकलता है। टर्मिनोलॉजी में ज्यादा नहीं घुसते हुए, सहमति एल्गोरिदम में एक बदलाव होता है, जो केवल सादगी में ही नहीं बल्कि जटिलता में भी बदलता है, Polkadot की तरह। जैसा कि मैंने पहले उल्लेख किया, Polkadot में दो सहमति एल्गोरिदम हैं, Babe और Grandpa। इसी प्रकार, Ethereum की बीकन चेन की कार्यक्षमता के साथ, सहमति और अंतिमता प्राप्त करना उतना त्वरित नहीं है। इसमें एपोच शामिल होते हैं, और नेटवर्क अधिक जटिल परिदृश्य पर काम करता है, जो पहले से ही कुछ हद तक गतिशील है, स्थिर नहीं है, और यह मूलतः पत्थर में तराशा गया है।\")]),_c('p',[_vm._v(\"2024 के संदर्भ में क्या जोड़ा जा सकता है? मेरे लिए, यह एक दीर्घकालिक अवलोकन और समझने का प्रयास था कि क्या Ethereum अंततः शार्डिंग को लागू करेगा या नहीं। शार्डिंग एकल ब्लॉकचेन के बजाय एक नेटवर्क के भीतर कई ब्लॉकचेन के साथ अस्तित्व की क्षमता है। मर्ज और लेयर 2 (L2) नेटवर्क के उभार के साथ, मेरे मन में सवाल उठे कि क्या शार्डिंग वास्तव में साकार होगा। शार्डिंग मुझे अपनी समानता के कारण रुचिकर लगा—ऐसी कई श्रृंखलाएं जो लगभग समान होती हैं, जिनमें कोई विशिष्ट विशेषता नहीं होती। यह एक दिलचस्प दृष्टिकोण प्रतीत हुआ, लेकिन यह एक विषम दृष्टिकोण जितना लचीला नहीं था। L2 नेटवर्क में, यहां तक कि कुछ साल पहले, मैं Ethereum की विषमता देख सकता था, इसकी क्षमता विभिन्न प्रकार के अधिक विशिष्ट ब्लॉकचेन के साथ काम करने की। मैं यह देखने के लिए उत्सुक था कि यह किस दिशा में जाएगा—क्या शार्डिंग, अपनी समानता के साथ, L2 समाधानों को विस्थापित करेगा या क्या L2 समाधान एक विषम दृष्टिकोण के साथ बीकन चेन और Ethereum नेटवर्क के मुख्य नोड्स को संतृप्त करेंगे।\")]),_c('p',[_vm._v(\"आज, 2024 में, ethereum.org पर लेखों के आधार पर, ऐसा लगता है कि शार्डिंग की अवधारणा को पीछे धकेल दिया गया है, और ध्यान विभिन्न L2 नेटवर्क को बीकन चेन के साथ एकीकृत करने और मुख्य श्रृंखला की कार्यक्षमता के साथ संरेखित करने पर है, जो अब Ethereum नेटवर्क की वास्तुकला में दो तत्वों में विभाजित है।\")]),_c('p',[_vm._v(\"इसलिए, बिना यह समझाए कि L2 नेटवर्क कैसे संरचित हैं - हालाँकि हम इस पर बोर्ड के दूसरे हिस्से को भरते समय चर्चा करेंगे - हमें यह कल्पना करनी चाहिए कि एथेरियम अब एक प्रकार की बीकन चेन, एक मार्गदर्शक सितारा है, जो कई L2 नेटवर्क के लिए दिशा दिखाता है। ये L2 नेटवर्क अधिक विशिष्ट कार्यक्षमता रख सकते हैं, अपने व्यक्तिगत कार्यों के अनुसार अपनी लॉजिक को निष्पादित कर सकते हैं। यह कुछ हद तक स्विस आर्मी नाइफ के विचार के समान है - एथेरियम को स्विस आर्मी नाइफ नहीं बना रहे हैं, लेकिन L2 नेटवर्क वास्तुकला में भिन्नता शुरू कर रहे हैं। वे एथेरियम की अमूर्त कंप्यूटिंग मशीन की कार्यक्षमता को दोहराते हैं लेकिन इसे कम गैस लागत पर या अपने विशिष्ट खंड में करते हैं। कुछ पहले से ही अपने L2 लेयर को अधिक कुशल बनाने, विशिष्ट कार्यात्मक क्षमताओं पर ध्यान केंद्रित करने के बारे में सोच रहे हैं। इस प्रकार, मेरी राय में, हम उस विश्व कंप्यूटर में विषमता के उद्भव का सामना कर रहे हैं जो समानता का लक्ष्य रखता था। साथ ही, यह न भूलना महत्वपूर्ण है कि विकेंद्रीकृत एप्लिकेशन (dApps) अभी भी मुख्य ब्लॉकचेन में मौजूद हैं, उसी ब्लॉकचेन में जो 2015 में शुरू हुआ था। इसका मतलब है कि मर्ज के दौरान, नए वास्तुकला राज्य में संक्रमण के दौरान, कोई वाइपआउट नहीं हुआ, कोई पिछली इतिहास की मिट्टी नहीं हुई। सभी विकेंद्रीकृत एप्लिकेशन और इन एप्लिकेशन के अंतर्निहित स्मार्ट कॉन्ट्रैक्ट्स जारी रहे, और वे आज भी मौजूद हैं और शायद कल भी रहेंगे। यह एक सवाल है जिसे हम पोलकाडॉट का उदाहरण लेकर खोजेंगे, लेकिन अभी भी यह महसूस हो रहा है कि बीकन चेन में एक विकेंद्रीकृत एप्लिकेशन को स्थापित करना संभव होगा - dApps।\")]),_c('p',[_vm._v(\"सारांश में, आइए आज के एथेरियम को एक विश्व कंप्यूटर के रूप में इंजीनियरिंग कार्यान्वयन की कल्पना करें। हमारे पास प्रत्येक नेटवर्क नोड दो भागों में विभाजित है। पहली परत एथेरियम वर्चुअल मशीन (EVM) के लिए जिम्मेदार है, वर्चुअल मशीन की वास्तविक कार्यक्षमता या यदि हम सैद्धांतिक शब्दों में बात करें तो ट्यूरिंग पूर्ण मशीन। शायद हम 2015 में डिज़ाइन की गई वर्चुअल मशीन के विकल्पों का उदय देखेंगे। ये विकल्प सॉलिडिटी में स्मार्ट कॉन्ट्रैक्ट्स लिखने की तुलना में अधिक अमूर्त प्रोग्रामिंग संभावनाओं के मामले में इसे पार कर जाएंगे। इस बीच, सॉलिडिटी में स्मार्ट कॉन्ट्रैक्ट्स अभी भी सहज महसूस करते हैं। यदि आप एथेरियम मुख्य चेन के लिए कार्यक्षमता लिखना चाहते हैं बिना एथेरियम के ऊपर कोई बुनियादी ढांचा बनाए, बिना किसी गणना को सस्ता बनाने के लिए ऑफलोड किए, आदि, तो विकेंद्रीकृत एप्लिकेशन जो आप स्मार्ट कॉन्ट्रैक्ट्स के रूप में लिख सकते हैं, वे अभी भी एथेरियम के मुख्य ब्लॉकचेन में रखे जा सकते हैं। साथ ही, बीकन चेन की कार्यक्षमता उभरी है, जो मुख्य प्रोटोकॉल से सत्यापनकर्ताओं के बीच सर्वसम्मति लॉजिक को अलग करती है। यह इस बात में अधिक लचीलापन प्रदान करता है कि सर्वसम्मति कैसे काम करनी चाहिए और इसे वर्चुअल मशीन को प्रभावित किए बिना कैसे और संशोधित किया जाना चाहिए। शंघाई और Defcon 2 के उदाहरण से, जहां एक छोटे से ऑपकोड त्रुटि के कारण बुनियादी ढांचे का एक हिस्सा बंद हो गया, यह संकेत मिलता है कि ऐसी जटिल कार्यक्षमताओं को दो भागों में विभाजित करना अच्छा होगा।\")]),_c('p',[_vm._v(\"बीकन चेन के बारे में क्या दिलचस्प है? यह नेटवर्क सिंक्रोनिकिटी और अंतिमता प्राप्त करने के लिए एक अधिक जटिल, व्यापक एल्गोरिदम है जिसमें \\\"एपोक\\\" जैसे अवधारणाओं का परिचय है, और नेटवर्क के भीतर एक भूत की उपस्थिति है।\")]),_c('p',[_vm._v(\"अंत में, अब विचार करने के लिए महत्वपूर्ण बात यह है कि एथेरियम प्रभावी रूप से समरूपता को समाप्त कर रहा है, सौ एक जैसे ब्लॉकचेन प्राप्त करने के विचार को समाप्त कर रहा है जो एक ही वर्चुअल मशीन के साथ काम करते हैं, जहां सॉलिडिटी में लिखे गए स्मार्ट कॉन्ट्रैक्ट्स निवास कर सकते हैं। इसके बजाय, विभिन्न परियोजनाएं अपनी स्वयं की आर्किटेक्चर या मुख्य ब्लॉकचेन की सीमाओं से परे ली गई वही वर्चुअल मशीन का प्रस्ताव दे रही हैं। वैकल्पिक रूप से, वे अपनी अधिक विशिष्ट एप्लिकेशन बनाने की कोशिश कर रहे हैं, जो बीकन चेन की मुख्य चेन के स्तर पर, सॉलिडिटी में लिखा गया एक स्मार्ट कॉन्ट्रैक्ट है। यह वर्तमान में एथेरियम का प्रतिनिधित्व है, जो एथेरियम 2.0 नहीं बना। यह वही एथेरियम बना रहा - एक परियोजना जो एक बार काम का प्रमाण + ट्यूरिंग पूर्ण मशीन के साथ शुरू हुई, इस वास्तुकला में परिवर्तित हो रही है।\")]),_c('p',[_vm._v(\"अब, आइए देखें कि पोलकाडॉट पिछले 5 वर्षों में कैसे उभरा और विकसित हुआ। पोलकाडॉट एथेरियम के पांच साल बाद अस्तित्व में आया, जो टीम से निकला जिसने एथेरियम के लिए सबसे अच्छे क्लाइंट्स में से एक - पैरिटी - को विकसित किया। कई लोग उनके वेब क्लाइंट को याद कर सकते हैं, जो Geth और अन्य कार्यान्वयनों की तुलना में काम करने में शायद अधिक सुखद था, कम से कम व्यक्तिगत अनुभव और सहयोगियों के अनुभव से।\")]),_c('p',[_vm._v(\"दूसरे, पोलकाडॉट, मेरी राय में, उन विचारों का विस्तार था जिन्हें गेविन वुड एथेरियम के विकास में शामिल करना चाहते थे। परिणामस्वरूप, कोई कह सकता है कि एथेरियम ने किसी बिंदु पर दो अवधारणाओं में विभाजित हो गया।\\nजब पोलकाडॉट लॉन्च हुआ तो हमारे पास क्या था? रिले चेन लॉन्च की गई थी। दिलचस्प है, है ना? बीकन चेन और रिले चेन। रिले चेन का क्या प्रतिनिधित्व था? प्रारंभ में, वहां एक विकेंद्रीकृत एप्लिकेशन रखने, इसके लिए स्मार्ट कॉन्ट्रैक्ट लिखने, या अपने कोड को WASM या सॉलिडिटी में अपलोड करने की कोई संभावना नहीं थी। पहले ब्लॉक या पहले कुछ दिनों के दौरान पोलकाडॉट रिले चेन के अस्तित्व के दौरान इनमें से कोई भी उपलब्ध नहीं था। वहाँ अपना रनटाइम जोड़ने का कोई तरीका नहीं था, जिसकी हम शीघ्र ही बात करेंगे, और यह प्रूफ ऑफ स्टेक पर आधारित नहीं था; इसके बजाय, यह प्रूफ ऑफ अथॉरिटी का उपयोग करता था। इसने पोलकाडॉट डेवलपर्स द्वारा लॉन्च किए गए कुछ नोड्स को पहले कुछ महीनों या हफ्तों में जीवित रहने की अनुमति दी, जबकि श्रृंखला पर हमले किए जा सकते थे या यदि यह गलत व्यवहार कर रहा था। हालांकि, इसे जल्दी से बदल दिया गया, और रिले चेन प्रूफ ऑफ स्टेक में बदल गई।\")]),_c('p',[_vm._v(\"अंततः, कुछ महीनों तक रिले चेन के अस्तित्व के बिना किसी विकेंद्रीकृत एप्लिकेशन कार्यक्षमता के, बिना अपने पैराचेन या L2 नेटवर्क को जोड़ने की क्षमता के, बिना उपयोगकर्ता क्षमताओं के, नेटवर्क ने एक प्राधिकरण राज्य से प्रूफ ऑफ स्टेक में संक्रमण किया। इसने डेवलपर्स को अपने रनटाइम अपलोड करने की क्षमता दी।\")]),_c('p',[_vm._v(\"इस बिंदु पर, आज के एथेरियम और पोलकाडॉट के केंद्रीय हिस्से की संरचना के बीच के अंतर पर चर्चा करना भी दिलचस्प है। दिल की दृष्टि से, जो हमने पहले ही चर्चा की है, चित्र केवल एथेरियम और पोलकाडॉट के लिए ही नहीं बल्कि किसी भी परियोजना के लिए बिल्कुल समान होगा जो एक अमूर्त कंप्यूटिंग मशीन के रूप में प्रस्तुत होना चाहता है। हालाँकि, इंजीनियरिंग और वास्तुकला के दृष्टिकोण से, बीकन चेन और रिले चेन को देखना आकर्षक है। यहाँ, हमारे पास एक वर्चुअल मशीन है, जो 2015 से विरासत में मिली है, लेकिन विकल्प प्रस्तावित किए जा रहे हैं। रिले चेन में, आपके रनटाइम को अपलोड करने की क्षमता है। रनटाइम, वास्तव में, आपकी वर्चुअल मशीन है। उदाहरण के लिए, कुछ पैराचेन पूरी तरह से एथेरियम वर्चुअल मशीन का अनुकरण करते हैं। इसे एक रनटाइम के रूप में लिखा जाता है, जिसका अर्थ है कि आप वास्तव में एथेरियम वर्चुअल मशीन के समकक्ष को पोलकाडॉट में पैराचेन स्तर पर अपलोड कर सकते हैं या अधिक विशिष्ट लॉजिक लिख सकते हैं जो चार या पांच कार्यों के साथ काम करती है। पहले भाग की याद करें, आप अपना स्विस आर्मी नाइफ लिख सकते हैं, लेकिन इसके लिए पूरी संरचना बनाने की आवश्यकता नहीं होगी। आप रनटाइम स्तर पर कुछ कार्यों के साथ विशिष्ट कार्यक्षमता को लागू कर सकते हैं, इसे पोलकाडॉट रिले चेन में डाल सकते हैं, और इस रनटाइम की अपरिवर्तनीयता पोलकाडॉट सत्यापनकर्ताओं द्वारा सुनिश्चित की जाएगी।\")]),_c('p',[_vm._v(\"आगे क्या होता है? लगभग एक साल के दौरान, रिले चेन के चारों ओर पैराचेन की एक परत बनने लगती है। एथेरियम के कार्यान्वयन के संदर्भ में, आप कह सकते हैं कि L2 नेटवर्क पैराचेन के समान हैं। हालाँकि, पोलकाडॉट में मुझे एक दिलचस्प क्रॉस-नेटवर्क अंतर मिलता है, और मैं इसे और अधिक समझने की कोशिश कर रहा हूँ कि यह कैसे विकसित होगा—यानी, दूसरा परत सत्यापन और डेटा उपलब्धता जांच की। कुछ वर्षों के बाद, पोलकाडॉट इस प्रकार का आकार लेता है। यह केवल एक रिले चेन नहीं है जहाँ प्रूफ ऑफ स्टेक सत्यापनकर्ता भविष्य के पैराचेन के रनटाइम की रक्षा करते हैं; पैराचेन से डेटा सत्यापन और उपलब्धता जांच की एक अतिरिक्त और महत्वपूर्ण परत उभरती है।\")]),_c('p',[_vm._v(\"जैसा कि आप इस आरेख को देखते हैं, उन समानताओं को नोट करने की कोशिश करें जो उत्पन्न होती हैं और इंजीनियरिंग कार्यान्वयन विवरणों में अंतर को। तो, यह क्या दर्शाता है, और यह योजना एथेरियम के साथ कैसे तुलना करती है? हमारे पास एक L2 परियोजना है, इस मामले में, पोलकाडॉट के साथ, यह एक पैराचेन है। एक पैराचेन भी सूचना ब्लॉक उत्पन्न करता है, जो फिर रिले चेन में जाते हैं ताकि सभी हेडर, हेडर, और अधिक हेडर के योग के रूप में एक रिले चेन ब्लॉक जारी किया जा सके। पैराचेन कॉललेटर का उपयोग करके एक ब्लॉक में लेनदेन एकत्र करता है, जो सत्यापन में शामिल नहीं होते हैं। वे रिले चेन में कुछ भी दांव नहीं लगाते; वे केवल रनटाइम का उपयोग करते हैं, जो रिले चेन में है। वे इसे प्राप्त करते हैं, इसे लेनदेन पर लागू करते हैं, आवश्यक राज्य संक्रमण करते हैं, एक ब्लॉक बनाते हैं, और, महत्वपूर्ण रूप से, वैधता का प्रमाण प्रदान करते हैं—एक स्टैंप जिसमें क्रिप्टोग्राफिक प्रमाण होते हैं कि कॉललेटर ने सही ढंग से ब्लॉक को संकलित किया। यह जानकारी रिले चेन के बाहरी सत्यापन रिंग में जाती है। इस रिंग में, पोलकाडॉट के आंतरिक सत्यापनकर्ता होते हैं—पैराचेन कॉललेटर। फिर से, वे रिले चेन के दृष्टिकोण से सीधे कुछ भी दांव नहीं लगाते हैं। कुछ कॉललेटर के बीच अपना सर्वसम्मति पेश करते हैं, और कुछ नहीं। उदाहरण के लिए, रोबोनॉमिक्स में, एक पैराचेन को लागू करते समय, हमें यह प्रतिमान अधिक दिलचस्प, कम बोझिल लगता है, और यह नेटवर्क को सरल बनाता है जबकि यह कार्यात्मक रूप से पर्याप्त रहता है। कोई भी कॉललेटर, किसी के साथ सर्वसम्मति तक पहुंचे बिना—हमारे द्वारा सत्यापित—एक ब्लॉक और कुछ प्रमाण बाहरी परत को प्रस्तावित कर सकता है। यही कारण है कि ब्लॉक प्रस्तावित किए जाते हैं, ब्लॉक असेंबली की वैधता के प्रमाण पेश किए जाते हैं, और एक बाहरी रिंग होती है। हमें पैराचेन सत्यापनकर्ताओं से कोई सर्वसम्मति की आवश्यकता नहीं है। कोई भी ब्लॉक उत्पन्न कर सकता है और इसे भेज सकता है, और यदि कॉललेटर का यह नोड बाहरी रिंग पर पैराचेन सत्यापनकर्ताओं को गलत जानकारी भेजता है, तो इस स्तर पर सत्यापनकर्ता इसे अस्वीकार कर देंगे। यह केंद्रीय भाग में प्रवेश नहीं करेगा। लेकिन मान लें कि कॉललेटर द्वारा ब्लॉक सही ढंग से प्रदान किया गया था। हमारे लेनदेन अंदर आ गए; कॉललेटर ने उन्हें गणना की, रिले चेन में संग्रहीत रनटाइम को लागू किया, सभी राज्य संक्रमण किए, वैधता के कुछ प्रमाण—संकलित ब्लॉक की वैधता—एकत्र किए और इसे रिले चेन की बाहरी रिंग को सौंप दिया। यहाँ, हर युग में, जो अंतिमता का भी हिस्सा है, हर युग में रिले चेन के सत्यापनकर्ता पैराचेन में बदलते हैं। उनमें से कुछ केंद्र में रहते हैं, और बाकी पैराचेन में जाते हैं। उनकी संख्या 16 से 64 सत्यापनकर्ताओं तक होती है, और मुझे विश्वास है कि यह आंकड़ा विनिर्देश में बदलेगा—कहीं अधिक, कहीं कम। हालाँकि, पैराचेन सत्यापनकर्ता कॉललेटर से आने वाली हर चीज़ के बारे में एक चयनित समूह के सत्यापनकर्ताओं से जानकारी को फिर से सत्यापित करते हैं, कि रनटाइम के अनुसार काम किया गया है, और वैधता का प्रमाण वास्तव में वैध है। रिले चेन सत्यापनकर्ताओं के चयनित खंड, जिन्होंने पहले ही कुछ दांव लगा रखा है, प्रतिक्रिया करते हैं, या बल्कि, आपस में चहकते हैं। वे पैराचेन के चुने हुए मुख्य ब्लॉक उत्पादक से सहमति जताते हैं, जैसे कह रहे हैं, \\\"हाँ, हम सहमत हैं। कोई समस्या नहीं है। आप इसे पूरे बाहरी रिंग के अंदर ले जा सकते हैं।\\\"\")]),_c('p',[_vm._v(\"इस प्रकार, पैराचेन कॉललेटर पर निर्मित लगभग सभी जानकारी, बाहरी रिंग पर सत्यापन के साथ, आंतरिक रिंग में प्रवेश करती है। निचला भाग, यह शारीरिक रूप से नीचे नहीं है, फिर भी बाहरी रिंग का गठन करता है—डेटा उपलब्धता। इस चरण में डेटा की जांच शुरू होती है, जिसका मतलब है कि बाहरी रिंग पर न केवल ब्लॉक असेंबली की शुद्धता सत्यापित होती है, बल्कि पोलकाडॉट नेटवर्क के भीतर वितरण की तैयारी भी शुरू होती है, यह सुनिश्चित करते हुए कि भविष्य में ब्लॉक जानकारी खो नहीं जाएगी। यहाँ, ठीक वही है जो मैंने दूसरे भाग में टुकड़ों के बारे में कहा था, जैसे CD RW। ब्लॉक को आंतरिक रिंग में स्थानांतरित करने की तैयारी के इस चरण में, डेटा उपलब्धता परत एक सेवा के रूप में बनाई जाती है, कुछ ऐसा जो वर्तमान में एथेरियम में भी कुछ परियोजनाओं द्वारा प्रयास किया जा रहा है। कुछ परियोजनाएँ अतिरिक्त अतिरिक्त जानकारी सीधे स्मार्ट अनुबंधों में डालती हैं, जो यह जांचने के लिए आवश्यक होती है कि L2 परत पर क्या हो रहा है और, यदि आवश्यक हो, तो उन लोगों को दंडित करें जिन्होंने इसे गलत तरीके से किया है। बाहरी रिंग को ब्लॉक जानकारी वितरित किए बिना और दांव लगाए गए दर्जनों नोड्स को पुनः जाँच के बिना पार करना असंभव है, यह मानते हुए कि रनटाइम सही ढंग से काम करना चाहिए।\")]),_c('p',[_vm._v(\"इस प्रकार, जो जानकारी बाहरी रिंग से गुजर चुकी है वह पहले से ही काफी विश्वसनीय है, शायद हाँ, आप यह कह सकते हैं, और आंतरिक रिंग पर, मुख्य रूप से पैराचेन ब्लॉकों के साथ नहीं, बल्कि उनके ब्लॉक हेडर को एक बड़े हेडर में एकत्रित करने का कार्य किया जाता है। यानी, कई हेडर से, एक रिले चेन ब्लॉक का हेडर एकत्र किया जाता है—शेयर्ड सिक्योरिटी में लिंकिंग का एक तंत्र, जैसा कि पोलकाडॉट में कहा गया है, जो पैराचेन की सुरक्षा सुनिश्चित करता है। आप कह सकते हैं कि पैराचेन सत्यापित होते हैं और एक ऐसी अवस्था तक पहुँचते हैं जहाँ सेवा बाहरी रिंग पर वितरित विकेंद्रीकृत रूप में मौजूद होती है। आंतरिक रिंग में, जो जानकारी प्रवेश करती है, वह एक हाइपरब्लॉक में एकत्र होने का प्रयास करती है, जो सभी चीजों को एक साथ जोड़ना चाहिए। वहाँ कोई गणना नहीं हो रही है; सब कुछ का पुनः गणना नहीं हो रहा है। अंतिम ब्लॉक का असेंबली, इस प्रकार, दुनिया के कंप्यूटर के वर्तमान पुनरावृत्ति में होती है, यह तय करने के लिए कि क्या किसी विशेष पैराचेन में लेन-देन हुआ है। हमें एक हाइपरब्लॉक को इकट्ठा करना चाहिए जो पैराचेन से सभी जानकारी नहीं बल्कि पैराचेन की बाहरी रिंग पर सत्यापित सभी हेडर को एक बड़े ब्लॉक में एकत्रित करता है। और इस प्रकार, हमारा दुनिया का कंप्यूटर पोलकाडॉट में काम करता है।\")]),_c('p',[_vm._v(\"आइए इन दोनों योजनाओं को एक साथ फिर से देखें: रिले चेन, बीकन चेन, रनटाइम, प्रूफ ऑफ स्टेक द्वारा सुरक्षित, जहाँ कोई अपने फंड को दांव पर लगाता है यह सत्यापित करने के लिए कि वे हमेशा अपना कार्य सही ढंग से करेंगे। वहाँ एक वर्चुअल मशीन है जहाँ आप भी अपने फंड को दांव पर लगा सकते हैं, और यदि आप किसी भी गणना या राज्य संक्रमण को एथेरियम वर्चुअल मशीन की विशिष्टता के अनुसार नहीं करते हैं, तो आपको दंडित किया जाएगा।\")]),_c('p',[_vm._v(\"पोलकाडॉट में, एक अतिरिक्त बाहरी परत है, जो प्रतीत होता है कि एक मुख्य लाभ है, इंजीनियरिंग कार्यान्वयन की सुखद सुविधाओं में से एक है, जो मेरी राय में, यहाँ मौजूद होनी चाहिए। यह L2 नेटवर्क और एथेरियम में मौजूद बीकन चेन के बीच दिखाई देनी चाहिए। वैसे, कुछ लोग कहते हैं कि \\\"बीकन चेन\\\" शब्द फिर से खत्म हो रहा है और गलत समझा जा रहा है, लेकिन मुझे इसे \\\"रिले चेन\\\" के साथ तुलना में उपयोग करना बहुत पसंद है, जो एथेरियम के रोडमैप से एक शब्द है।\")]),_c('p',[_vm._v(\"पोलकाडॉट में एक बाहरी परत है जो, या शायद इसे इसलिए आविष्कार किया गया था कि कई समस्याओं को हल किया जा सके जो तब उत्पन्न होती हैं जब आपके पास L2 या ब्लॉकचेन का एक सेट होता है जिन्हें कनेक्ट करने की आवश्यकता होती है। इस परत पर, जानकारी के वितरण के लिए एक इंजीनियरिंग तंत्र लागू किया गया है ताकि यह विकेंद्रीकृत नेटवर्क में उपलब्ध हो सके। अतिरिक्त एल्गोरिदम की शुरुआत की गई है जो न केवल वैधता की जांच करते हैं बल्कि जानकारी की उपलब्धता की भी पुष्टि करते हैं। इसके अलावा, हर एपोक में पोलकाडॉट के वेलिडेटर्स को विशिष्ट पैराचेन पर यादृच्छिक रूप से सौंपने का एक तंत्र है। इसलिए, हर एपोक में वही वेलिडेटर्स पैराचेन की सेवा नहीं करते; उन्हें हर एपोक में अलग-अलग पैराचेन पर भेजा जाता है। बाहरी रिंग से आंतरिक रिंग में ब्लॉक ट्रांसफर करते समय, रास्ते में वेलिडेटर्स की दोबारा जांच होती है और उन्हें पैराचेन के लिए सौंपा गया होता है। वर्तमान में, यह प्रक्रिया मौजूद नहीं है, लेकिन मुझे लगता है कि यह किसी समय प्रकट होगी।\")]),_c('p',[_vm._v(\"और शायद अंतिम बिंदु कॉललेटर के बारे में है, जो आज पैराचेन में काफी दिलचस्प तरीके से लागू किए गए हैं। वे सहमति (कन्सेन्सस) के साथ हो सकते हैं या बिना सहमति के मौजूद हो सकते हैं, लेकिन वास्तव में, यह काम करता है। L2 नेटवर्क में विकेंद्रीकृत सिक्वेंसर या ब्लॉक कैसे उत्पन्न होंगे और वर्चुअल मशीन में बसने से पहले उनकी पुष्टि कैसे की जाएगी - ये एथेरियम के एक विषम प्रारूप में कार्यान्वयन के लिए अलग-अलग सवाल हैं। आज के दिन में, यह पोलकाडॉट में काफी अच्छी तरह से लागू है, मेरी राय में। हालांकि, इसका मतलब यह नहीं है कि पोलकाडॉट पूरी दुनिया से आगे है और कभी एथेरियम को नहीं पकड़ पाएगा। हालांकि, यह वास्तुकला मुझे आकर्षित करती है कि मैं काम करता रहूं और उम्मीद करता रहूं कि पोलकाडॉट प्रौद्योगिकियों के मामले में अच्छा विकास करता रहेगा क्योंकि मैंने इस तरह के सभी जुड़े पहलुओं में कुछ भी नहीं देखा है।\")]),_c('p',[_vm._v(\"और शायद इस व्याख्यान के हिस्से में एक और दिलचस्प कहानी: अब तक, हम एथेरियम में L2 नेटवर्क के बीच सही क्रॉस-चेन संदेश की कल्पना नहीं कर सकते। हो सकता है कि मैंने कागजात में कुछ छूट गया हो, लेकिन जब आपके पास बाहरी रिंग नहीं है और कॉललेटर्स, पैरावलिडेटर्स और डेटा उपलब्धता सेवाओं जैसी समस्याएं हल नहीं हुई हैं, तो यह सोचना मुश्किल है कि दो L2 परतें कैसे संवाद कर सकती हैं। फिर भी, पोलकाडॉट में यह मौजूद है। यहां तक कि क्षैतिज रूप से, रिले चेन के माध्यम से, जिसका मतलब है कि सीधे, एक पैराचेन से दूसरे पैराचेन में सुरक्षित रूप से एक लेन-देन भेजा जा सकता है, बिना इन दोनों पैराचेन के बीच किसी पुल पर भरोसा किए। यह एक और महत्वपूर्ण कार्यक्षमता है जिसे शायद L2 नेटवर्क को जोड़ने के स्तर पर लागू करने की आवश्यकता होगी। एथेरियम में स्मार्ट अनुबंध अच्छी तरह से संवाद करते हैं। हमने कई लिंक किए गए स्मार्ट अनुबंधों की श्रृंखला बनाई है, जहां एक दूसरे को ट्रिगर करता है। इसमें कोई समस्या नहीं है। लेकिन जब हम कहते हैं कि लगभग सभी एप्लिकेशन विषम नेटवर्क में L2 परत पर जा रहे हैं, तो मुझे सुनाई देता है कि यदि आप एक विशिष्ट क्षेत्र में रहते हैं, तो आप बाहर नहीं निकल पाएंगे। यह पोलकाडॉट में पैराचेन और कार्यान्वयन के स्तर पर नहीं है। दोनों आर्किटेक्चर देखने लायक हैं, क्योंकि मेरी राय में, इंजीनियरिंग कार्यान्वयन वैश्विक कंप्यूटर बनने के मुख्यधारा के मार्ग का अनुसरण करता है। वे थोड़े भिन्न होते हैं, लेकिन कई समानताएं हैं। हर जगह इंजीनियरिंग कार्य का एक विशाल मात्रा है। जैसा कि हम देखते हैं, मानव सभ्यता, शोधकर्ताओं, इंजीनियरों और विकासशील डेवलपर्स की एक बड़ी संख्या के रूप में, आगे के विकास के लिए महत्वपूर्ण संसाधनों के साथ, छोटे प्रारंभिक चरण से लगभग एक ही दिशा में बढ़ रही है, शायद भविष्य में दुनिया के कंप्यूटर की स्थापना तक, सभी एक ही ट्रैक पर।\")])])}\nvar staticRenderFns = []\n\n\n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/gridsome%22,%22cacheIdentifier%22:%223ec475f9-vue-loader-template%22%7D!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "Ozab":
/*!***********************************************************************************************************!*\
  !*** ./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=template&id=03ec80e6& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/gridsome\",\"cacheIdentifier\":\"3ec475f9-vue-loader-template\"}!../../../../node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./emergence-of-the-world-computer.md?vue&type=template&id=03ec80e6& */ \"DOt3\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?");

/***/ }),

/***/ "UQSp":
/*!****************************************************************!*\
  !*** ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// @vue/component\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VueRemarkRoot',\n  render: function render(h) {\n    return h('div', null, this.$slots[\"default\"]);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js?");

/***/ }),

/***/ "XfrU":
/*!****************************************************************************!*\
  !*** ./courses/hi/learn/world-computer/emergence-of-the-world-computer.md ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emergence-of-the-world-computer.md?vue&type=template&id=03ec80e6& */ \"Ozab\");\n/* harmony import */ var _node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/gridsome/node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"7uw+\");\n/* harmony import */ var _emergence_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emergence-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"7pjQ\");\n/* harmony import */ var _emergence_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emergence-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"vnYO\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _emergence_of_the_world_computer_md_vue_type_template_id_03ec80e6___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\n\nif (typeof _emergence_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === 'function') Object(_emergence_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(component)\n\nif (typeof _emergence_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === 'function') Object(_emergence_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(component)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?");

/***/ }),

/***/ "rmJj":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js */ \"UQSp\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"Kw5r\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].config.optionMergeStrategies;\nvar imported = {\n  VueRemarkRoot: _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Component) {\n  var components = Component.options.components = Component.options.components || {};\n  var computed = Component.options.computed = Component.options.computed || {};\n  Object.keys(imported).forEach(function (key) {\n    if (_typeof(imported[key]) === 'object' && typeof imported[key].render === 'function') {\n      components[key] = imported[key];\n    } else if (typeof imported[key] === 'function' && typeof imported[key].options.render === 'function') {\n      components[key] = imported[key];\n    } else {\n      computed[key] = function () {\n        return imported[key];\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "sa1W":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initFrontMatter; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"Kw5r\");\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].config.optionMergeStrategies;\nvar key = '__vueRemarkFrontMatter';\nvar data = {\n  \"excerpt\": null,\n  \"title\": \"भाग 3: विश्व कंप्यूटर का उद्भव\",\n  \"description\": \"\\\"विश्व कंप्यूटर का उद्भव\\\" शीर्षक वाले तीसरे भाग में, हम पहले की तरह, एथेरियम और पोलकाडॉट के उदाहरणों का उपयोग करके विश्व कंप्यूटर के इंजीनियरिंग कार्यान्वयन को परत दर परत फिर से बनाने का प्रयास करेंगे।\",\n  \"metaOptions\": [\"सीखना\"],\n  \"defaultName\": \"World computer in your home\"\n};\nfunction initFrontMatter(Component) {\n  if (Component.options[key]) {\n    Component.options[key] = data;\n  }\n\n  vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].util.defineReactive(Component.options, key, data);\n  Component.options.computed = strats.computed({\n    $frontmatter: function $frontmatter() {\n      return Component.options[key];\n    }\n  }, Component.options.computed);\n}\n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "vnYO":
/*!*************************************************************************************************************************************!*\
  !*** ./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \*************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--16-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./emergence-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"sa1W\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_emergence_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/hi/learn/world-computer/emergence-of-the-world-computer.md?");

/***/ })

}]);