(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{RvCt:function(e,s,t){"use strict";t.r(s);var n=t("7uw+"),o=t("UQSp"),a=t("Kw5r");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}a.a.config.optionMergeStrategies;var i={VueRemarkRoot:o.a},l=function(e){var s=e.options.components=e.options.components||{},t=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===r(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?s[e]=i[e]:t[e]=function(){return i[e]}}))},p=a.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",u={excerpt:null,title:"Lesson #2, Raspberry Pi Setup",description:"home assistant course",lessonNumber:2,courseID:3,metaOptions:["Online Courses","Sovereign Smart Home with Robonomics and Home Assistant"]};var d=function(e){e.options[c]&&(e.options[c]=u),a.a.util.defineReactive(e.options,c,u),e.options.computed=p.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},h=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("VueRemarkRoot",[t("section",{staticClass:"container__reg"},[t("h2",{attrs:{id:"intro"}},[t("a",{attrs:{href:"#intro","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Intro")]),t("p",[e._v("In this lesson, you'll prepare your Raspberry Pi to become an IoT hub. You will sequentially install and configure all the necessary components, namely:")]),t("List",[t("ul",[t("li",[e._v("Ubuntu Linux distribution for Raspberry Pi as a server operating system;")]),t("li",[e._v("Home Assistant packages;")]),t("li",[e._v("IPFS packages;")]),t("li",[e._v("robonomics-interface library.")])])])],1),t("section",{staticClass:"container__reg"},[t("h2",{attrs:{id:"instructions"}},[t("a",{attrs:{href:"#instructions","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Instructions")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Preparing and Configuring the Raspberry Pi")]),t("List",[t("li",[t("p",[e._v("  Download the image of "),t("a",{attrs:{href:"https://ubuntu.com/download/raspberry-pi",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("64-bit Ubuntu Server 22.04 LTS")]),e._v(" or newer for Raspberry Pi.")])]),t("li",[t("p",[e._v("  Download and install a tool for writing image files called "),t("a",{attrs:{href:"https://www.raspberrypi.com/software/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Raspberry Pi Imager")]),e._v(" on your computer.")])]),t("li",[t("p",[e._v("  Insert the SD card and run the Raspberry Pi Imager. Select the required image (which you just downloaded) as the operating system and ensure to select your SD card from the storage dropdown menu.")])]),t("li",[t("p",[e._v("  Open settings and check the "),t("code",[e._v("Enable SSH")]),e._v(" option with the "),t("code",[e._v("Use password authentication")]),e._v(" parameter.")]),t("p",[e._v("  - In "),t("code",[e._v("Set username and password")]),e._v(" add username and password for your Raspberry Pi user.")]),t("p",[e._v("  - In "),t("code",[e._v("Configure wireless LAN")]),e._v(" provide your Wi-Fi with its password and choose your country from drop-down list. Then "),t("code",[e._v("Write")]),e._v(" image.")]),t("robo-academy-note",{attrs:{type:"okay"}},[e._v("\n  Make sure that you input your actual Wi-Fi name and your Wi-Fi password.\n  ")]),t("LessonVideo",{attrs:{controls:"",loop:"",src:"https://crustipfs.live/ipfs/QmY3mEGvUNDT9bKhVhR21JY8RaWp3CB8JNAX1VDHMnwjxw"}})],1),t("li",[t("p",[e._v("  Wait until it finish the writing, then insert the SD card into the Raspberry Pi and turn it on. It should connect to your Wi-Fi network, which will take some time.")])]),t("li",[t("p",[e._v("  Now you need to find an address of the device. To do it you can use various methods for network scanning, like "),t("a",{attrs:{href:"https://www.fing.com/products",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Fing App")]),e._v(", "),t("code",[e._v("arp -a")]),e._v(" command or "),t("a",{attrs:{href:"https://nmap.org/download.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("nmap")]),e._v(". The latter will be used next.")]),t("p",[e._v("  Install nmap with a command")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo apt-get install nmap\n")]),t("p",[e._v("  Then find your address in your local network. It should look like "),t("code",[e._v("192.168.xxx.xxx")]),e._v(" or "),t("code",[e._v("172.xxx.xxx.xxx.")]),e._v(" Pay attention as nmap can find many addresses on your local network.")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("ip a\n")]),t("p",[e._v("  Then scan your network as shown below replacing the last octet of the address with "),t("code",[e._v("0")]),e._v(":")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo nmap -sP 192.168.xxx.0/24\n")]),t("p",[e._v("  The output of the command will be something like this:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noCopyIcon:"",noLines:""}},[e._v("\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:02:24 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:04:45:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-NO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B3:7D:9E:94:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n")]),t("p",[e._v("  In this example the address is "),t("code",[e._v("192.168.43.56.")])])],1),t("li",[e._v("\n  Connect to the Raspberry Pi via SSH with found IP. Use the username and password, that you created earlier.\n  \n  "),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("ssh ubuntu@192.168.43.56\n")]),t("p",[e._v("  Further instructions are executed via SSH on the Raspberry Pi itself.")])],1)])],1),t("li",[t("p",[e._v("Home Assistant Installation")]),t("List",[t("li",[t("robo-academy-note",{attrs:{type:"okay"}},[e._v("\n  Some software versions shown below may be out of date. For the latest versions, you can refer to the [installation repository for Robonomics Home Assistant image](https://github.com/airalab/Robonomics-HomeAssistant-image/tree/main/robonomics-stage).\n  ")]),t("p",[e._v("  Before starting, update the Raspberry Pi system and install necessary packages.  During installation you will see a window with service restart request. Just choose "),t("span",{staticClass:"accent"},[e._v("ok")]),e._v(" with the "),t("code",[e._v("tab")]),e._v(" button and press enter.")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo apt-get update\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo apt-get upgrade -y\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("sudo apt-get install -y python3 python3-dev python3-venv python3-pip bluez libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion libturbojpeg0-dev python3-serial curl\n")])],1),t("li",[e._v("\n  \n  Create user "),t("code",[e._v("homeassistant")]),e._v(" and the directory for Home Assistant Core:\n  "),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo useradd -rm homeassistant\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo mkdir /srv/homeassistant\n")]),t("p",[t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("sudo chown homeassistant:homeassistant /srv/homeassistant")])],1)],1),t("li",[t("p",[e._v("  Create a virtual environment for Home Assistant Core and switch to it. This should be done as the "),t("code",[e._v("homeassistant")]),e._v(" user, so after executing the commands your user will look like "),t("code",[e._v("(homeassistant) homeassistant@ubuntu")]),e._v(":")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo -u homeassistant -H -s\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("cd /srv/homeassistant\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("python3 -m venv .\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("source bin/activate\n")]),t("p",[e._v("  As the result, you will find a name of the virtual environment in the brackets:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:"",noCopyIcon:""}},[e._v("\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$\n")])],1),t("li",[t("p",[e._v("  Install required Python packages:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("python3 -m pip install wheel~=0.37\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11\n")]),t("p",[t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("pip3 install homeassistant~=2023.3.6 psutil-home-assistant~=0.0")])],1)],1),t("li",[e._v("\n  \n  Start Home Assistant Core for the first time. This will complete the installation by automatically creating the "),t("code",{staticClass:"nowb"},[e._v(".homeassistant")]),e._v(" configuration directory in the "),t("code",[e._v("/home/homeassistant")]),e._v(" directory, and installing any basic dependencies:\n  \n"),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("hass")])],1),t("li",[t("p",[e._v("  While the initial setup is in progress, —Åheck your installation via the web interface on "),t("code",[t("a",{attrs:{href:"http://%25RASPBERRY_IP_ADDRESS%25:8123",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("http://%RASPBERRY_IP_ADDRESS%:8123")])]),e._v(". In this example: "),t("code",[t("a",{attrs:{href:"http://192.168.43.56:8123",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("http://192.168.43.56:8123")])]),e._v(". You can open a web UI from any computer connected to your local network.")]),t("p",[e._v("  Wait until you will get the welcome windows with login / password creation and then stop Home Assistant with "),t("code",[e._v("Ctrl+C")]),e._v(".")])])])],1),t("li",[t("p",[e._v("IPFS Installation")]),t("List",[t("li",[t("p",[e._v("  For IPFS installation you can use our script to download IPFS and create systemd service with it. First, exit the virtual environment for Home Assistant:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("exit")]),t("p",[e._v("  Then execute:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("cd ~")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("wget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("sudo chmod +x install_ipfs.sh")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("./install_ipfs.sh\n")])],1)])],1),t("li",[t("p",[e._v("Systemd Services")]),t("List",[t("li",[t("p",[e._v("Systemd service is useful for automating the launch of Home Assistant. Create new service for Home Assistant:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("\nsudo nano /etc/systemd/system/home-assistant@homeassistant.service\n")])],1),t("li",[t("p",[e._v("Paste the following")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v('\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c "/home/%i/.homeassistant"\nEnvironment="PATH=/srv/%i/bin"\n[Install]\nWantedBy=multi-user.target\n')])],1),t("li",[t("p",[e._v("Enable and start the service:")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("\nsudo systemctl enable home-assistant@homeassistant.service\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("\nsudo systemctl start home-assistant@homeassistant.service\n")])],1)])],1),t("li",[t("p",[e._v("Robonomics Integration")]),t("List",[t("li",[t("p",[e._v("Log in with "),t("code",[e._v("homeassistant")]),e._v(" user on your Raspberry Pi:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\nsudo -u homeassistant -H -s\n")])],1),t("li",[t("p",[e._v("Source virtual environment and install required Python packages:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\nsource /srv/homeassistant/bin/activate\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\npip3 install robonomics-interface~=1.6.0\n")])],1),t("li",[t("p",[e._v("Then go to "),t("code",[e._v(".homeassistant")]),e._v(" directory, create folder "),t("code",{staticClass:"nowb"},[e._v("custom_components")]),e._v(" and clone in there the repository with the integration:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\ncd /home/homeassistant/.homeassistant\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\nmkdir custom_components\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\ncd custom_components\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n")])],1),t("li",[t("p",[e._v("After that exit homeassistant user and restart service:")]),t("LessonCodeWrapper",{attrs:{language:"bash",noLines:""}},[e._v("\nexit\n")]),t("LessonCodeWrapper",{attrs:{language:"bash",codeClass:"big-code",noLines:""}},[e._v("\nsudo systemctl restart home-assistant@homeassistant.service\n")])],1)])],1)])],1)])}),[],!1,null,null,null);"function"==typeof l&&l(h),"function"==typeof d&&d(h);s.default=h.exports},UQSp:function(e,s,t){"use strict";s.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);