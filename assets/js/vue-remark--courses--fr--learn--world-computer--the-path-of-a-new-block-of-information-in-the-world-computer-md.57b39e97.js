(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vue-remark--courses--fr--learn--world-computer--the-path-of-a-new-block-of-information-in-the-world-computer-md"],{

/***/ "AkEI":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js */ \"UQSp\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"Kw5r\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].config.optionMergeStrategies;\nvar imported = {\n  VueRemarkRoot: _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Component) {\n  var components = Component.options.components = Component.options.components || {};\n  var computed = Component.options.computed = Component.options.computed || {};\n  Object.keys(imported).forEach(function (key) {\n    if (_typeof(imported[key]) === 'object' && typeof imported[key].render === 'function') {\n      components[key] = imported[key];\n    } else if (typeof imported[key] === 'function' && typeof imported[key].options.render === 'function') {\n      components[key] = imported[key];\n    } else {\n      computed[key] = function () {\n        return imported[key];\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "D3Ek":

  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/gridsome","cacheIdentifier":"3ec475f9-vue-loader-template"}!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=781c5e90& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('VueRemarkRoot',[_c('p',[_vm._v(\"La quatrième et dernière partie de notre cours est \\\"L'Ordinateur Mondial dans Votre Maison.\\\" Après cela, je commencerai à enregistrer des screencasts pour la partie pratique des sessions.\")]),_c('p',[_vm._v(\"Maintenant, nous allons essayer de résumer presque toute la théorie que nous avons couverte jusqu'à présent en termes d'un processus. Le processus qui décrit le chemin d'un bloc d'information dans l'ordinateur mondial. Commençons à nouveau en revenant sur le thème de web3 et le concept de blockchain. Le terme \\\"bloc\\\" ou \\\"bloc d'information\\\" peut être considéré comme identique en s'éloignant des dix dernières années et en adoptant une théorie plus générale, comme exploré dans les parties précédentes des cours. Le concept d'un \\\"bloc d'information\\\" est en accord avec web3, mais pas nécessairement avec la blockchain. Même sans aucun projet crypto, nous devons comprendre que lors de la formation de la théorie de l'ordinateur mondial sans faire référence à la formation de blocs d'information, il est actuellement difficile d'envisager d'autres modèles. Ainsi, nous allons considérer le chemin d'un bloc d'information à travers l'ensemble de l'ordinateur mondial, non pas parce que c'est de la blockchain, mais parce que, pour l'instant, il n'y a pas d'autres moyens de conceptualiser l'existence de l'ordinateur mondial autre que par le traitement de l'information en portions spécifiques.\")]),_c('p',[_vm._v(\"Bloc d'information = bloc dans web3, mais sans blockchain et sans aucune influence de projet crypto. Nous devons actuellement considérer la formation de blocs d'information lors de la discussion de la théorie de l'ordinateur mondial. Maintenant, passons au premier point. J'ai essayé de trouver des analogies proches de la vie quotidienne pour aider à illustrer le chemin d'un bloc d'information dans l'ordinateur mondial. L'analogie que j'ai choisie est le mouvement d'un bus sur un itinéraire. Notre premier point de rencontre est la gare routière.\")]),_c('p',[_vm._v(\"J'ai marqué les transactions en rose comme de petits points. Imaginons un arrêt de bus typique où les gens se rassemblent, attendant un bus qui fonctionne selon un horaire. Si nous ne considérons pas l'agitation des grandes villes, où les bus sont toujours en retard, tout le monde dans le monde sait généralement que le train du village A au village B arrive toujours vers 7h15. Les transactions que les utilisateurs veulent envoyer à l'ordinateur mondial se rassemblent à un certain arrêt de bus et attendent que le bus arrive.\")]),_c('p',[_vm._v(\"C'est ainsi que notre bloc est formé. Imaginez : le bus arrive, et chaque personne commence à monter un par un, prenant leur place. Le bus suit ensuite son itinéraire. Dans notre cas, le bloc d'informations surmonte la première frontière. Nos transactions, sous une forme quelconque, se sont installées dans le bus et ont surmonté la barrière initiale. Je vais utiliser principalement la terminologie de Polkadot, et la troisième partie aurait dû mieux expliquer le concept de l'ordinateur mondial dans la comparaison entre Ethereum et Polkadot. Mon opinion personnelle, et probablement la majorité des ingénieurs aujourd'hui seraient d'accord, est que la représentation d'un ordinateur mondial multicentrique hétérogène est mieux mise en œuvre dans Polkadot. Cependant, nous passerons toujours par les termes hérités d'Ethereum, mais vers la fin de cette partie du cours.\")]),_c('p',[_vm._v(\"Quelle est la ligne qui sépare l'arrêt de bus du mouvement ultérieur du bus ? Cette ligne représente les collecteurs du réseau - les participants aux nœuds du réseau qui collectent les transactions. Vous pouvez penser à un collecteur non pas comme un chauffeur de bus mais comme un contrôleur qui reste à l'arrêt de bus. En d'autres termes, ce contrôleur vérifie si vous avez un billet lorsque vous montez dans le bus. Il ne vérifie pas dans la base de données la validité du billet mais regarde les paramètres de base du billet et vérifie si tout semble en ordre. En réalité, les collecteurs effectuent presque tous les calculs nécessaires, vérifiant le numéro de billet et d'autres données, mais ils ne sont pas tenus de garantir que la vérification est effectuée correctement. Par conséquent, les collecteurs sont des contrôleurs qui restent à l'arrêt de bus, assurant principalement l'embarquement des passagers, l'attribution des places et l'envoi du bus plus loin le long de l'itinéraire.\")]),_c('p',[_vm._v(\"Au-delà de la frontière dessinée, nous entrons dans la première zone de validation où se trouvent les paravalidateurs. Ce sont des validateurs de l'ensemble de l'écosystème, de l'ensemble du réseau, spécifiquement assignés pour un certain temps pour vérifier chaque transaction et ainsi effectuer des calculs réels dans l'ordinateur mondial. Notre bloc d'informations pas encore entièrement formé est marqué d'une ligne en pointillés. C'est toujours un bloc d'informations candidat car il n'a subi aucune vérification réelle. Le collecteur, qui a collecté le bloc d'informations et vérifié les transactions à l'entrée, ne participe en aucune manière à la sécurisation de la cybersécurité des calculs effectués. Sa tâche est seulement de placer toutes les transactions et de former le premier bloc. À ce stade, la transformation d'un candidat en un vrai bloc d'informations commence.\")]),_c('p',[_vm._v(\"Je l'ai divisé en trois parties, mais j'en ai oublié une autre. Considérons donc quatre parties de ce bloc candidat. La partie supérieure, connue des utilisateurs de diverses applications web3 sous le nom d'en-tête ou d'en-tête de bloc, est la quintessence, la pièce d'information la plus populaire circulant et reflétée depuis l'explorateur de blocs jusqu'aux clients de console de tous les nœuds miniers, de mise en jeu, et ainsi de suite. L'en-tête est un élément clé du bloc, mais il est pratiquement formé à la dernière étape à ce stade.\")]),_c('p',[_vm._v(\"Tout d'abord, nous avons nos demandes réelles de transitions d'état ou de calculs. Il y a une liste de changements à apporter : convertir A en A', B en B', C en C', en appliquant une série d'algorithmes à ceux-ci. Pour cela, nous allons maintenant construire une autre frontière immédiatement et aller au-delà pour effectuer cette partie du travail, et ensuite seulement procéder au-delà. Déjà à l'étape de préparation du bloc, nous devons franchir la deuxième frontière à l'intérieur de l'ordinateur mondial pour aller aux algorithmes qui doivent être appliqués pour préparer le bloc. Comme je l'ai mentionné précédemment, théoriquement, le contrôleur à l'arrêt de bus fait la même chose ici, mais je ne prêterais pas beaucoup d'attention à cela. L'étape de préparation du bloc, surtout lorsque nous parlons d'exemples simultanément de Polkadot et d'Ethereum en tant qu'ordinateur mondial, diffèrent légèrement et nous montrent l'insignifiance des vérifications à cette étape car c'est précisément à la deuxième étape, après avoir franchi la première frontière et reçu le bloc d'informations des collecteurs, que les calculs dignes d'attention de cet ordinateur mondial commencent.\")]),_c('p',[_vm._v(\"Pour effectuer ces calculs, le validateur, à ce stade, ne peut le faire qu'en se tournant vers la chaîne de relais, la base de données centrale, et en prenant de là les algorithmes du runtime. Dans le cas d'Ethereum, il s'agissait des mêmes machines virtuelles dans le concept architectural précédent, qui pouvaient être appliquées, donc il n'était pas nécessaire d'aller ailleurs. Presque chaque nœud avait une copie complète des algorithmes qui pouvaient être appliqués. Mais en termes de réseau hétérogène, où chaque segment ou chaque chaîne individuelle peut avoir son propre ensemble d'algorithmes, un validateur, avant d'exécuter réellement toutes les transitions, les calculs obtenus sous forme de candidat de bloc du collator, doit consulter. Il doit consulter la chaîne de relais, consulter la blockchain principale dans le réseau et prendre de là les algorithmes nécessaires, les appliquer et effectuer des transitions d'état.\")]),_c('p',[_vm._v(\"Pendant l'exécution des calculs, un arbre de Merkle est formé simultanément, et nous n'allons pas nous attarder dessus car les arbres de Merkle ne sont pas si compliqués du point de vue de l'informatique. Cependant, je remarque que pour comprendre comment les appliquer en ingénierie et dans l'architecture d'un projet, comment ils sont appliqués, pas seulement en lisant sur Wikipedia, vous devez vous creuser un peu la tête, imaginer des exemples. Dans cet exemple, nous n'allons pas trop nous attarder dessus, mais je pense que pour ceux qui sont déjà familiers avec certaines définitions de base, ont lu sur les arbres de Merkle, il deviendra un peu plus clair sur comment et à quels moments un autre arbre de Merkle est assemblé. L'arbre de Merkle est formé lorsque nous effectuons réellement des calculs et que des valeurs de sortie apparaissent. Ces valeurs de sortie sont emballées dans un format d'arbre binaire, puis l'addition est effectuée entre elles en langage informatique, et le nœud supérieur atteint l'en-tête. Notons-le avec une grande lettre \\\"H.\\\" C'est un aspect petit et agréable de considérer de tels schémas.\")]),_c('p',[_vm._v(\"Dans ce schéma, nous pouvons noter comment l'en-tête de bloc est en fait lié aux calculs effectués à l'intérieur. Regardons à nouveau - notre candidat de bloc est venu du collator. Il y a un ensemble de transactions qui doivent être exécutées, effectuer des calculs. Le validateur a traversé une autre frontière interne, une de plus, derrière les algorithmes, les a appliqués, et a enregistré tous les résultats au niveau le plus bas de l'arbre de Merkle. Les autres nœuds sont essentiellement systémiques. Ils ne proviennent d'aucune donnée; ils ne viennent de nulle part. Au deuxième niveau, le nœud ne provient d'aucune information. Il est obtenu en additionnant les valeurs dans ces deux feuilles, et lorsque nous remontons avec vous, nous n'obtenons que la racine de cet arbre, qui est suffisante pour protéger toutes les valeurs de sortie. Nous n'obtiendrons pas le même en-tête si nous changeons l'un de ces calculs. Et c'est l'une des fonctionnalités magiques et simples, comme le stockage orienté hachage, de comment nous pouvons protéger un bloc entier d'informations en ne parlant que d'un seul en-tête. Par conséquent, les en-têtes sont si importants et jouent un rôle fondamental même dans les architectures lorsque nous passons d'une chaîne ou d'une machine virtuelle à plusieurs combinées dans le réseau. Il nous suffit de nous assurer de la sécurité du stockage des en-têtes pour être sûr que toutes les transactions qui ont été exécutées à l'étape de préparation du bloc ont été exécutées correctement, et qu'elles ne peuvent pas être remplacées.\")]),_c('p',[_vm._v(\"Et un champ est encore laissé vide. Dans le processus de préparation du bloc d'informations, c'est le champ de l'auteur, c'est-à-dire le validateur qui a réellement effectué tous les changements, préparé l'arbre de Merkle et enregistré l'en-tête. Comme nous considérons un exemple avec le bus se déplaçant le long de l'itinéraire depuis l'arrêt, appelons le validateur un \\\"contrôleur\\\" qui monte directement dans le bus, passe devant chaque siège, approche chaque personne, vérifie réellement ce qui est écrit sur leurs billets, fait une marque, le valide, et, en conséquence, appose leur signature. Le contrôleur, par exemple, le numéro 134, signifiant, naturellement, chaque validateur a un identifiant unique, leur adresse, et nous l'avons également renommé de manière unique ici.\")]),_c('p',[_vm._v(\"Et il semble qu'à ce stade, nous aurions pu ombrer et rendre nos limites de bloc plus audacieuses, mais non, et c'est l'un des changements intéressants qui se sont produits au cours des 5 dernières années en termes d'écosystèmes décentralisés, à savoir le passage de la preuve de travail. Lorsque les validateurs du réseau, à l'époque mineurs, n'avaient jamais à coordonner quoi que ce soit entre eux. Vous produisiez un bloc et l'envoyiez au rseau et passiez à autre chose. En fait, ce n'était pas un consensus de consentement convenu. C'était un consensus d'accord évident avec le fait qui s'était produit. Ce qui est intéressant, ce sont les changements lorsque l'architecture devient plus complexe, et nous nous sommes rapprochés d'un simple calculateur comme Bitcoin avec un grand livre vers un véritable ordinateur virtuel, c'est qu'à chaque étape, la connectivité des participants qui garantissent la sécurité et la production de blocs a augmenté. Parce que, en fait, personne ne risque leur mise, celui qui garantit cette sécurité et veut gagner en traitant vos transactions, n'a rien à perdre, contrairement à la preuve de travail. En preuve de travail, vous avez acheté l'équipement, oui, vous y avez investi de l'argent, vous avez dépensé de l'électricité, mais il n'y a en fait aucune protection contre le fait que vous pouvez attaquer le réseau avec votre puissance, la même attaque à 51%, où quelqu'un avec beaucoup de mineurs peut essayer de réécrire la chaîne.\")]),_c('p',[_vm._v(\"Maintenant, nous parlons de la preuve d'enjeu, où un dépôt est déjà effectué, et si vous faites quelque chose de mal, une partie en sera retirée, comme une pénalité. Tous les nœuds, absolument, dans toutes les architectures que j'observe actuellement, des mécanismes de messagerie entre les validateurs ont commencé à apparaître rapidement à l'étape de préparation du bloc. Dans Polkadot, c'est pareil. Tout validateur d'une parachain séparée qui collecte un bloc connaît les adresses ou a déjà établi un contact avec 15 à 63 autres validateurs qui sont avec vous sur cette époque, sur une période temporaire, en tant que validateurs, et chacun d'eux devient aléatoirement un producteur de bloc à un moment donné. Mais être désigné comme producteur ne nie pas un composant très important de ce processus. Vous ne cessez pas d'interagir avec les autres participants. Il y a toujours un pool de validateurs assignés à une époque spécifique, à un créneau horaire spécifique, pour valider une parachain particulière ou un segment de l'ordinateur mondial. Peu importe que vous soyez un validateur-contrôleur spécifiquement assigné pour produire le prochain bloc dans l'ordinateur mondial de ce segment, vous restez en contact avec les autres validateurs, et vous avez un contact constant avec eux.\")]),_c('p',[_vm._v(\"Pourquoi ce contact constant est-il nécessaire? Il s'avère être assez simple. Nous ne voulons pas, lorsque nous passons à la partie interne, avoir peur ou nous inquiéter que nous ayons mal exécuté l'une des opérations. Aussi surprenant que cela puisse paraître, il est bénéfique pour tout validateur, avant de passer à l'étape suivante, de d'abord se tourner vers ses collègues assignés à la validation et leur demander de vérifier à nouveau les calculs. Cette vérification est informelle, donc même si nous n'utilisons pas de journalisation dans une base de données immuable des demandes de vérification et des résultats de cette vérification, le contrôleur désigné, après avoir parlé au groupe de validateurs, recueille quand même des réponses supplémentaires de tous les validateurs assignés à cette parachain ou segment de réseau. Avec des confirmations supplémentaires, le contrôleur passe à l'étape suivante. Mais même ici, ce n'est pas tout à fait aussi simple. À cette étape, un autre processus doit être effectué. Il est important de noter qu'à cette étape, notre bloc d'informations est toujours un bloc candidat, et le règlement des informations se fait déjà dans le stockage. Ni à la toute fin, ni après avoir créé et scellé le bloc et l'avoir attaché avec un archiviste dans la partie finale, c'est-à-dire ici, dans cette partie intermédiaire où tous les calculs sont effectivement effectués, les informations ne sont enregistrées dans le stockage. Par conséquent, notre contrôleur, en plus de parler à ses collègues, s'assure également du stockage des données dans un certain stockage, ce qui est aussi assez métaphysique car au moment où vous communiquez avec d'autres validateurs, ce stockage se remplit. Comment est-ce vérifié? Nous devrons passer à l'étape suivante.\")]),_c('p',[_vm._v(\"En résumé, pour compléter la partie centrale, regardons à nouveau. Nous n'avons toujours qu'un bloc candidat au tout début. Oui, toutes les transactions sont approximativement calculées quelque part à l'arrêt de bus, tout le monde a pris place selon son billet. Nous avons franchi la première frontière, qui est essentiellement le contact direct établi entre les validateurs et les collecteurs de blocs. Dans Ethereum et Polkadot, ce sont maintenant des schémas légèrement différents. Mais tout ce qui se passe du côté gauche au tout début ne garantit pas la cybersécurité des données et des calculs. C'est juste une préparation. Une fois que nous avons passé et sommes entrés dans l'environnement de l'attention des validateurs, le travail avec le bloc d'informations dans l'ordinateur mondial commence. Un validateur sélectionné de manière aléatoire, dans notre cas, avec un itinéraire de bus - un contrôleur, passe effectivement par chacun des sièges, vérifie le billet, vérifie et effectue tous les calculs qui ont été faits, rassemble toutes les informations dans un arbre. Le nœud racine résultant de cet arbre devient l'en-tête du bloc proposé. Le validateur qui effectue réellement tous les calculs avec ce bloc d'informations communique avec les autres participants qui exécutent une fonction similaire pour le même itinéraire dans une plage horaire indéfinie. Et tout en communiquant avec eux et en leur demandant de vérifier tous les calculs, nous remplissons en fait un certain stockage de données dans le réseau. Ce n'est pas un stockage physique spécifique; il n'y a pas d'adresse IP spécifique, pas de disque dur spécifique sur lequel ils chargent tous à travers un VPN ou un schéma de connexion et de mot de passe, bien sûr. Au cours de la communication avec d'autres validateurs, les données restent sur leurs machines locales, et ces données participeront ensuite à la transformation de ce candidat en un nouveau bloc d'informations. En essence, le bloc scellé qui sera installé dans la chaîne de relais est collecté. Nous avons assemblé un bloc. Toutes les métadonnées autour des calculs sont déjà remplies, ce qui signifie que nous pouvons essayer de passer à la prochaine frontière.\")]),_c('p',[_vm._v(\"En ce moment, plongeons dans le passage de la prochaine frontière. L'aspect le plus crucial à la dernière étape devient l'en-tête de bloc. Nous sommes moins préoccupés par l'exécution des calculs; nous pouvons simplifier notre perspective ici, car les calculs peuvent varier en fonction de l'architecture, qu'il s'agisse d'Ethereum ou de Polkadot. Le point clé est que, à l'étape intermédiaire, d'après ce que j'observe dans la théorie et la pratique de la mise en œuvre du concept d'ordinateur mondial, la plupart des calculs se produisent à un niveau intermédiaire. Le dernier niveau ne sert qu'à exécuter des vérifications essentielles. Presque toutes ces vérifications dans une architecture multi-chaîne sont liées à la concaténation ou à la fusion des en-têtes de bloc en un seul bloc.\")]),_c('p',[_vm._v(\"Dans la dernière partie de notre voyage, l'élément le plus important dans le bloc d'informations de l'ordinateur mondial devient la pierre angulaire - l'en-tête. Le deuxième composant concerne davantage les métadonnées. Si l'en-tête est le résultat réel de tous les calculs, les métadonnées supplémentaires transmises se composent des reçus et des signatures des validateurs qui ont participé à l'étape intermédiaire de ce processus. À la dernière étape, nous pouvons visualiser l'ensemble de l'image uniquement comme l'assemblage du même arbre, pas comme une liste de transactions. Dans la dernière partie de la chaîne de relais, l'aspect crucial est l'assemblage des en-têtes de nombreux processus similaires, mais liés à différents segments de l'ordinateur mondial, différentes parachaines.\")]),_c('p',[_vm._v(\"Chaque parachaine, chaque ensemble de validateurs - nous avons discuté d'un exemple, mais en réalité, de telles préparations de blocs pour les parachaines se produisent 30 à 40 fois. Le nombre de slots de parachaine ou le nombre de réseaux L2 dans Ethereum entraînera un nombre similaire de processus avec une architecture similaire. Cependant, à la dernière étape, nous verrons une image approximativement identique partout - comment l'en-tête de bloc sera formé à partir d'une multitude d'en-têtes d'autres blocs. Dans ce processus, nous devons introduire une autre entité et revenir en arrière à travers la frontière vers la deuxième étape.\")]),_c('p',[_vm._v(\"Finaliseurs. En fait, ce sont aussi des validateurs, mais des validateurs de la chaîne de relais. Dans l'architecture Polkadot, nous avons mille validateurs divisés en deux groupes. Le premier, un très petit groupe, est responsable uniquement de la formation de l'en-tête de bloc et d'un nouveau bloc composé des en-têtes des blocs de l'État des blocs d'États. Le deuxième groupe - les validateurs de parachaine - est ensuite divisé en de nombreux sous-groupes, mais ce groupe est appelé les validateurs de parachaine. Dans les réseaux L2 au-dessus d'Ethereum, cette histoire finira par gagner plus de compréhension, plus de dénominateurs. Pour l'instant, concentrons-nous sur l'architecture Polkadot. Les finaliseurs, en plus de vérifier un ensemble supplémentaire de métadonnées et de re-vérifier un validateur avec un ID spécifique, choisi au hasard pour générer ce bloc de tous les blocs, aident également à re-vérifier les métadonnées, vérifier et assembler tous les en-têtes en un seul. C'est un peu complexe, oui, si nous le regardons du point de vue de l'assemblage de l'arbre.\")]),_c('p',[_vm._v(\"En plus de cela, dans l'architecture Polkadot et dans Ethereum avec les derniers changements, une vérification de la disponibilité des données a lieu. Pour cela, les finaliseurs visitent les validateurs de parachain et essaient de demander des informations réelles sur chaque bloc stocké dans le réseau. S'ils reçoivent des données d'au moins 1/3 des validateurs, en utilisant une technologie qui permet le stockage redondant des informations, et par la suite, si quelqu'un le perd, un, deux ou trois validateurs peuvent toujours le restaurer, il y a un seuil critique à 1/3. Si 1/3 des nœuds répondent et disent que nous avons des données sur le bloc en cours de production, les finaliseurs disent au bloc qu'il s'agit déjà d'un bloc d'informations entièrement formé, que tous les calculs ont été effectués correctement, que nous avons déjà pris l'en-tête de ce bloc et l'avons combiné avec les en-têtes de quelqu'un d'autre provenant d'autres segments du réseau. Nous avons déjà formé l'en-tête principal de l'ensemble du réseau. Après cela, les finaliseurs placent de nombreuses coches sur le bloc final, qui combine tous les calculs effectués.\")]),_c('p',[_vm._v(\"Actuellement, c'est la situation du point de vue de l'écosystème hétérogène multi-chanes le plus implémenté en ingénierie, qui est Polkadot. C'est l'écosystème hétérogène multi-chaînes le plus implémenté en ingénierie, pas trop loin d'Ethereum. J'aimerais me concentrer sur la comparaison, et si quelqu'un est intéressé à comprendre comment les blocs d'informations circulent dans Ethereum avec les réseaux L2, vous pouvez essayer de le faire maintenant. Je reviendrai sur cette question lorsque certains éléments d'Ethereum, en termes d'hétérogénéité et d'aspects multi-chaînes, seront terminés. Cela pourrait prendre 1 à 2 ans, et ensuite nous pourrons construire une telle image. Néanmoins, nous pouvons généralement accepter un schéma avec trois étapes principales:\")]),_c('p',[_c('strong',[_vm._v(\"1. Formation d'un candidat pour le bloc d'informations :\")])]),_c('ul',[_c('li',[_vm._v(\"À cette étape, le candidat initial pour le bloc d'informations est formé.\")])]),_c('p',[_c('strong',[_vm._v(\"2. Exécution de tous les calculs, stockage des données, disponibilité des données, re-vérification avec d'autres nœuds, en veillant à ce que toutes les transitions d'état soient effectuées correctement selon des algorithmes spécifiques, et stockage de ces algorithmes dans le citadelle principale :\")])]),_c('ul',[_c('li',[_vm._v(\"Cette étape implique l'exécution réelle des calculs, la sauvegarde des données à certaines couches, en veillant à la disponibilité des données, la re-vérification avec d'autres nœuds pour confirmer que toutes les transitions d'état sont conformes aux algorithmes stockés quelque part dans la citadelle principale.\")])]),_c('p',[_c('strong',[_vm._v(\"3. Finalisation, qui ne re-vérifiera pas les calculs mais vérifiera les méta-informations, comment ces méta-informations sont stockées. Elle assemblera ensuite le bloc final, qui est l'état des états, et le libérera en tant que bloc d'informations commun pour l'ensemble du réseau multi-chaînes segmenté :\")])]),_c('ul',[_c('li',[_vm._v(\"La dernière étape implique la vérification des méta-informations, la vérification de la manière dont ces méta-informations sont stockées, l'assemblage du bloc final (état des états) et sa libération en tant que bloc d'informations commun pour l'ensemble du réseau multi-chaînes segmenté.\")])]),_c('p',[_vm._v(\"À ce stade, nous pouvons dire que nos informations sont sauvegardées. Elles ont traversé le cœur, le cœur a exécuté correctement son transfert de données, et nous pouvons déjà utiliser les valeurs de sortie. Certains les utiliseront pour ouvrir un appartement acheté avec un contrat intelligent avec une serrure intelligente, tandis que d'autres pourraient montrer leur NFT, récemment reçu pour 10 ethers.\")]),_c('p',[_vm._v(\"En général, c'est à peu près ainsi que cela fonctionne. Cela conclut la partie théorique. Je pense que cela a pris environ 2 heures, et devant nous se trouvent des sessions pratiques que j'enregistrerai au cours des prochains mois. Elles nous aideront à comprendre les données observées depuis la fenêtre de la console, les applications décentralisées, les explorateurs de blocs, où nous comprendrons progressivement comment tous ces chiffres et lettres théoriques se présentent réellement dans la mise en œuvre en utilisant Polkadot comme exemple. Je commencerai également à mettre en pratique les implémentations au niveau L2 en utilisant l'un des cadres bien connus pour la construction de L2. Merci à tous ceux qui ont regardé.\")])])}\nvar staticRenderFns = []\n\n\n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/gridsome%22,%22cacheIdentifier%22:%223ec475f9-vue-loader-template%22%7D!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "Hton":
/*!*************************************************************************************************************************************************************!*\
  !*** ./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--15-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"AkEI\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "KbmS":
/*!****************************************************************************************************************************************!*\
  !*** ./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=781c5e90& ***!
  \****************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/gridsome\",\"cacheIdentifier\":\"3ec475f9-vue-loader-template\"}!../../../../node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=781c5e90& */ \"D3Ek\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "UQSp":
/*!****************************************************************!*\
  !*** ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// @vue/component\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VueRemarkRoot',\n  render: function render(h) {\n    return h('div', null, this.$slots[\"default\"]);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js?");

/***/ }),

/***/ "eI38":
/*!*********************************************************************************************************!*\
  !*** ./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=781c5e90& */ \"KbmS\");\n/* harmony import */ var _node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/gridsome/node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"7uw+\");\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"Hton\");\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"xUAp\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_781c5e90___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\n\nif (typeof _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === 'function') Object(_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(component)\n\nif (typeof _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === 'function') Object(_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(component)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "hiFM":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initFrontMatter; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"Kw5r\");\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].config.optionMergeStrategies;\nvar key = '__vueRemarkFrontMatter';\nvar data = {\n  \"excerpt\": null,\n  \"title\": \"Partie 4 : Le Chemin d'un Nouveau Bloc d'Information dans l'Ordinateur Mondial\",\n  \"description\": \"La quatrième et dernière partie de notre cours est \\\"L'Ordinateur Mondial dans Votre Maison.\\\" Après cela, je commencerai à enregistrer des screencasts pour la partie pratique des sessions.\",\n  \"metaOptions\": [\"Apprendre\"],\n  \"defaultName\": \"World computer in your home\"\n};\nfunction initFrontMatter(Component) {\n  if (Component.options[key]) {\n    Component.options[key] = data;\n  }\n\n  vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].util.defineReactive(Component.options, key, data);\n  Component.options.computed = strats.computed({\n    $frontmatter: function $frontmatter() {\n      return Component.options[key];\n    }\n  }, Component.options.computed);\n}\n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "xUAp":
/*!******************************************************************************************************************************************************************!*\
  !*** ./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--16-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"hiFM\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/fr/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ })

}]);