(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{"2bO6":function(e,o,t){"use strict";t.r(o);var n=t("7uw+"),a=t("UQSp"),r=t("Kw5r");function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var s={VueRemarkRoot:a.a},l=function(e){var o=e.options.components=e.options.components||{},t=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===i(s[e])&&"function"==typeof s[e].render||"function"==typeof s[e]&&"function"==typeof s[e].options.render?o[e]=s[e]:t[e]=function(){return s[e]}}))},p=r.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",d={excerpt:null,title:"Lesson #5, Sensors connectivity config options",description:"SENSORS CONNECTIVITY CONFIG OPTIONS",lessonNumber:5,courseID:4,metaOptions:["Learn","Sensors Connectivity & Decentralized Sensors Network"],defaultName:"Sensors Connectivity & Decentralized Sensors Network"};var _=function(e){e.options[c]&&(e.options[c]=d),r.a.util.defineReactive(e.options,c,d),e.options.computed=p.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},u=Object(n.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("VueRemarkRoot",[t("p",[e._v("For now only SDS011 sensor is supported out-of-box, but it quite easy to add other sensors as well and we has prepared a few ready-to-use configurations. Full overview of the configuration fields are available "),t("a",{attrs:{href:"https://github.com/airalab/sensors-connectivity/tree/master/connectivity/config",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("here")]),e._v(". Next we will take a look to several advanced configurations scenarios.")]),t("h2",{attrs:{id:"scenario-1-connect-sds011-to-serial-port"}},[t("a",{attrs:{href:"#scenario-1-connect-sds011-to-serial-port","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Scenario #1: Connect SDS011 to Serial Port")]),t("p",[e._v("The easiest and the most straightforward way to connect your sensor to the network is using the serial port. ")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Connect you board to a USB port, and find path to it. In this example it is "),t("code",{pre:!0},[e._v("ttyUSB0")])]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"bash"}},[e._v("$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 sep 5 14:01 usb-1a86_USB2.0-Ser_-if00-port0 -> ../../ttyUSB0")])],1),t("li",[t("p",[e._v("Create a new configuration file or edit the existing one with the following. Don't forget to insert your database path to "),t("code",{pre:!0},[e._v("db_path")]),e._v(", board path to "),t("code",{pre:!0},[e._v("port")]),e._v(" field and latitude / longitude of a sensor to "),t("code",{pre:!0},[e._v("geo")]),e._v(" field.")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"json"}},[e._v('{\n   "general": {\n      "publish_interval": 30,\n      "db_path": "'),e._v('/PATH/TO/DATABASE>"\n   },\n   "comstation":{\n      "enable":true,\n      "port":"/dev/'),e._v('/PATH/TO/BOARD>",\n      "work_period":300,\n      "geo":"00.000000,00.000000",\n      "public_key":""\n   },\n   "httpstation": {\n      "enable": false,\n      "port": 8001\n   },\n   "mqttstation": {\n      "enable": false,\n      "host": "localhost",\n      "port": 1883,\n      "topic": "/freertos_mqtt_robonomics_example/#",\n      "username": "",\n      "password": ""\n   },\n   "robonomics": {\n      "enable": true,\n      "ipfs_provider": "/ip4/127.0.0.1/tcp/5001/http",\n      "ipfs_topic": "airalab.lighthouse.5.robonomics.eth"\n   },\n   "datalog": {\n      "enable": false,\n      "suri": "",\n      "dump_interval": 60,\n      "temporal_username": "",\n      "temporal_password": "",\n      "pinata_api": "",\n      "pinata_secret": ""\n   },\n   "dev": {\n      "sentry": ""\n   },\n   "frontier": {\n      "enable": false,\n      "suri": ""\n   },\n   "trackagro": {\n      "enable": false,\n      "token": ""\n   }\n}')])],1),t("li",[e._v("Start Sensors Connectivity module.")])]),t("h2",{attrs:{id:"scenario-2-connect-sds011-via-mqtt"}},[t("a",{attrs:{href:"#scenario-2-connect-sds011-via-mqtt","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Scenario #2: Connect SDS011 via MQTT")]),t("RoboAcademyNote",{attrs:{type:"okay",title:"INFO"}},[e._v("Robonomics sensors firmware doesn't work with MQTT. These settings for additional sensors, which work through MQTT.\n")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Install and config MQTT broker (like "),t("a",{attrs:{href:"https://mosquitto.org/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Mosquitto")]),e._v(" or similar).")])]),t("li",[t("p",[e._v("Create a new configuration file or edit the existing one with the following. Insert:")]),t("ul",[t("li",[t("p",[e._v("your database path to "),t("code",{pre:!0},[e._v("db_path")]),e._v(" field")])]),t("li",[t("p",[e._v("a board path to "),t("code",{pre:!0},[e._v("port")]),e._v(" field in "),t("code",{pre:!0},[e._v("comstation")]),e._v(" section")])]),t("li",[t("p",[e._v("a latitude / longitude of a sensor to "),t("code",{pre:!0},[e._v("geo")]),e._v(" field")])]),t("li",[t("p",[e._v("an MQTT broker host in the "),t("code",{pre:!0},[e._v("host")]),e._v(" field in "),t("code",{pre:!0},[e._v("mqttstation")]),e._v(" section")])]),t("li",[t("p",[e._v("an MQTT broker port in the "),t("code",{pre:!0},[e._v("port")]),e._v(" field in "),t("code",{pre:!0},[e._v("mqttstation")]),e._v(" section")])]),t("li",[t("p",[e._v("a topic where your sensors sends data in the "),t("code",{pre:!0},[e._v("topic")]),e._v(" field")])]),t("li",[t("p",[t("code",{pre:!0},[e._v("username")]),e._v(" and "),t("code",{pre:!0},[e._v("password")]),e._v(" to connect to the broker if it is required.")])])]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"json"}},[e._v('{\n   "general": {\n      "publish_interval": 30,\n      "db_path": "'),e._v('/PATH/TO/DATABASE>"\n   },\n   "comstation":{\n      "enable":false,\n      "port":"/dev/'),e._v('/PATH/TO/BOARD>",\n      "work_period":300,\n      "geo":"00.000000,00.000000",\n      "public_key":""\n   },\n   "httpstation": {\n      "enable": false,\n      "port": 8001\n   },\n   "mqttstation": {\n      "enable": true,\n      "host": "[YOUR_MQTT_BROKER_HOST]",\n      "port": "[YOUR_MQTT_BROKER_PORT]",\n      "topic": "[MQTT_TOPIC_OF_SENSORS]",\n      "username": "YOUR_MQTT_USERNAME",\n      "password": "YOUR_MQTT_PASSWORD"\n   },\n   "robonomics": {\n      "enable": true,\n      "ipfs_provider": "/ip4/127.0.0.1/tcp/5001/http",\n      "ipfs_topic": "airalab.lighthouse.5.robonomics.eth"\n   },\n   "datalog": {\n      "enable": false,\n      "suri": "",\n      "dump_interval": 60,\n      "temporal_username": "",\n      "temporal_password": "",\n      "pinata_api": "",\n      "pinata_secret": ""\n   },\n   "dev": {\n      "sentry": ""\n   },\n   "frontier": {\n      "enable": false,\n      "suri": ""\n   },\n   "trackagro": {\n      "enable": false,\n      "token": ""\n   }\n}')])],1),t("li",[e._v("Start Sensors Connectivity module.")])]),t("h2",{attrs:{id:"scenario-3-publish-sensors-data-with-robonomics-datalog"}},[t("a",{attrs:{href:"#scenario-3-publish-sensors-data-with-robonomics-datalog","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Scenario #3: Publish Sensors Data with Robonomics Datalog")]),t("p",[e._v("This scenario shows how to upload your sensor's data to with datalog function Robonomics parachain. Datalog is analog of telemetry in web3 technologies. The function is meant to create a sensor's data snapshot each period of time, which increase reliability of data. It doesn't matter how data is being gathered: over HTTP, MQTT or COM.")]),t("RoboAcademyNote",{attrs:{type:"warning",title:"WARNING"}},[e._v("You have to have XRT tokens on your account\n")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Create a new configuration file or edit the existing one with the following. Insert:")]),t("ul",[t("li",[t("p",[e._v("your database path to "),t("code",{pre:!0},[e._v("db_path")]),e._v(" field")])]),t("li",[t("p",[e._v("a board path to "),t("code",{pre:!0},[e._v("port")]),e._v(" field in "),t("code",{pre:!0},[e._v("comstation")]),e._v(" section")])]),t("li",[t("p",[e._v("a latitude / longitude of a sensor to "),t("code",{pre:!0},[e._v("geo")]),e._v(" field")])]),t("li",[t("p",[e._v("a private key from Robonomics parachain account to "),t("code",{pre:!0},[e._v("suri")]),e._v(" field")])]),t("li",[t("p",[e._v("a period of time for collecting log in seconds to "),t("code",{pre:!0},[e._v("dump_interval")]),e._v(" field")])]),t("li",[t("p",[e._v("(optional) credentials to upload files to "),t("a",{attrs:{href:"http://Temporal.Cloud",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Temporal.Cloud")]),e._v(" in "),t("code",{pre:!0},[e._v("temporal_username")]),e._v(", "),t("code",{pre:!0},[e._v("temporal_password")]),e._v(" fields")])]),t("li",[t("p",[e._v("(optional) credentials to upload files to Pinata in "),t("code",{pre:!0},[e._v("pinata_api")]),e._v(", "),t("code",{pre:!0},[e._v("pinata_secret")]),e._v(" fields")])])]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"json"}},[e._v('{\n   "general": {\n      "publish_interval": 30,\n      "db_path": "[YOUR/PATH/TO/DATABASE]"\n   },\n   "comstation":{\n      "enable":false,\n      "port":"/dev/[YOUR/PATH/TO/BOARD]",\n      "work_period":300,\n      "geo":"00.000000,00.000000",\n      "public_key":""\n   },\n   "httpstation": {\n      "enable": true,\n      "port": 8001\n   },\n   "mqttstation": {\n      "enable": false,\n      "host": "localhost",\n      "port": 1883,\n      "topic": "/freertos_mqtt_robonomics_example/#",\n      "username": "",\n      "password": ""\n   },\n   "robonomics": {\n      "enable": true,\n      "ipfs_provider": "/ip4/127.0.0.1/tcp/5001/http",\n      "ipfs_topic": "airalab.lighthouse.5.robonomics.eth"\n   },\n   "datalog": {\n      "enable": true,\n      "suri": "[YOUR_PRIVATE_KEY]",\n      "dump_interval": TIME_PERIOD,\n      "temporal_username": "YOUR_TEMPORAL_USERNAME",\n      "temporal_password": "YOUR_TEMPORAL_PASSWORD",\n      "pinata_api": "YOUR_PINATA_API_KEY",\n      "pinata_secret": "YOUR_PINATA_SECRET"\n   },\n   "dev": {\n      "sentry": ""\n   },\n   "frontier": {\n      "enable": true,\n      "suri": ""\n   },\n   "trackagro": {\n      "enable": false,\n      "token": ""\n   }\n}')])],1),t("li",[e._v("Start Sensors Connectivity module.")])])],1)}),[],!1,null,null,null);"function"==typeof l&&l(u),"function"==typeof _&&_(u);o.default=u.exports},UQSp:function(e,o,t){"use strict";o.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);