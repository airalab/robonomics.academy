(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vue-remark--courses--de--learn--world-computer--the-path-of-a-new-block-of-information-in-the-world-computer-md"],{

/***/ "CbiQ":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/gridsome","cacheIdentifier":"3ec475f9-vue-loader-template"}!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=0327c631& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('VueRemarkRoot',[_c('p',[_vm._v(\"Der vierte und letzte Teil unserer Vorlesung ist \\\"Der Weltcomputer in Ihrem Zuhause.\\\" Danach werde ich mit der Aufzeichnung von Screencasts für den praktischen Teil der Sitzungen beginnen.\")]),_c('p',[_vm._v(\"Jetzt werden wir versuchen, fast die gesamte Theorie, die wir bisher behandelt haben, in Bezug auf einen Prozess zusammenzufassen. Der Prozess, der den Weg eines Informationsblocks im Weltcomputer beschreibt. Lassen Sie uns erneut damit beginnen, zum Thema Web3 und dem Konzept der Blockchain zurückzukehren. Der Begriff \\\"Block\\\" oder \\\"Informationsblock\\\" kann als identisch angesehen werden, wenn man sich von den letzten 10 Jahren entfernt und eine allgemeinere Theorie betrachtet, wie sie in den vorherigen Teilen der Vorlesungen erkundet wurde. Das Konzept eines \\\"Informationsblocks\\\" stimmt mit Web3 überein, aber nicht unbedingt mit der Blockchain. Selbst ohne Kryptoprojekte müssen wir verstehen, dass es derzeit schwierig ist, sich andere Modelle vorzustellen, wenn man die Theorie des Weltcomputers ohne Bezugnahme auf die Bildung von Informationsblöcken bildet. Daher werden wir den Weg eines Informationsblocks im gesamten Weltcomputer betrachten, nicht weil es sich um Blockchain handelt, sondern weil es derzeit keine anderen Möglichkeiten gibt, die Existenz des Weltcomputers anders als durch die Verarbeitung von Informationen in spezifischen Teilen zu konzeptualisieren.\")]),_c('p',[_vm._v(\"Informationsblock = Block in Web3, aber ohne Blockchain und ohne Einfluss von Kryptoprojekten. Wir müssen derzeit die Bildung von Informationsblöcken in Betracht ziehen, wenn wir die Theorie des Weltcomputers diskutieren. Nun gehen wir zum ersten Punkt über. Ich habe versucht, nahe Analogien aus dem täglichen Leben zu finden, um den Weg eines Informationsblocks im Weltcomputer zu veranschaulichen. Die von mir gewählte Analogie ist die Bewegung eines Busses auf einer Route. Unser erster Treffpunkt ist die Bushaltestelle.\")]),_c('p',[_vm._v(\"Ich habe Transaktionen in Pink als kleine Punkte markiert. Stellen Sie sich eine typische Bushaltestelle vor, an der Menschen sich versammeln und auf einen Bus warten, der nach einem Fahrplan fährt. Wenn wir das Gedränge großer Städte außer Acht lassen, wo Busse immer zu spät kommen, weiß im Allgemeinen jeder auf der Welt, dass der Zug von Dorf A nach Dorf B immer gegen 7:15 Uhr ankommt. Transaktionen, die Benutzer an den Weltcomputer senden möchten, sammeln sich an einer bestimmten Bushaltestelle und warten darauf, dass der Bus ankommt.\")]),_c('p',[_vm._v(\"So wird unser Block gebildet. Stellen Sie sich vor: Der Bus kommt an, und jede Person steigt nacheinander ein und nimmt ihren Platz ein. Der Bus folgt dann seiner Route. In unserem Fall überwindet der Informationsblock die erste Grenze. Unsere Transaktionen haben sich in gewisser Weise in den Bus eingelebt und die anfängliche Barriere überwunden. Ich werde hauptsächlich Begriffe aus Polkadot verwenden, und der dritte Teil sollte das Konzept des Weltcomputers im Vergleich zwischen Ethereum und Polkadot besser erklärt haben. Meine persönliche Meinung, und wahrscheinlich würden die meisten Ingenieure heute zustimmen, ist, dass die Darstellung eines heterogenen multizentrischen Weltcomputers in Polkadot besser umgesetzt ist. Wir werden jedoch immer noch die Begriffe durchgehen, die von Ethereum übernommen wurden, aber gegen Ende dieses Teils der Vorlesung.\")]),_c('p',[_vm._v(\"Was ist die Linie, die die Bushaltestelle von der weiteren Bewegung des Busses trennt? Diese Linie repräsentiert die Collators des Netzwerks - Teilnehmer an den Netzwerkknoten, die Transaktionen sammeln. Sie können sich einen Collator nicht als Busfahrer, sondern als Kontrolleur vorstellen, der an der Bushaltestelle bleibt. Mit anderen Worten, dieser Kontrolleur überprüft, ob Sie ein Ticket haben, wenn Sie in den Bus einsteigen. Er überprüft nicht erneut in der Datenbank, wie gültig das Ticket ist, sondern betrachtet die grundlegenden Parameter des Tickets und prüft, ob alles in Ordnung zu sein scheint. In der Realität führen Collators fast alle erforderlichen Berechnungen durch, überprüfen die Ticketnummer und andere Daten, sind jedoch nicht verpflichtet, zu garantieren, dass die Überprüfung korrekt durchgeführt wird. Daher sind Collators Kontrolleure, die an der Bushaltestelle bleiben und hauptsächlich das Einsteigen der Passagiere, das Platznehmen und das Weiterfahren des Busses entlang der Route sicherstellen.\")]),_c('p',[_vm._v(\"Jenseits der gezogenen Grenze betreten wir den ersten Validierungsbereich, in dem sich Paravalidatoren befinden. Dies sind Validatoren des gesamten Ökosystems, des gesamten Netzwerks, die speziell für eine bestimmte Zeit damit beauftragt sind, jede Transaktion zu überprüfen und somit tatsächliche Berechnungen im Weltcomputer durchzuführen. Unser noch nicht vollständig geformter Informationsblock ist mit einer gestrichelten Linie markiert. Es handelt sich immer noch um einen Kandidaten-Informationsblock, da er noch keiner tatsächlichen Überprüfung unterzogen wurde. Der Collator, der den Informationsblock gesammelt und die Transaktionen am Eingang überprüft hat, beteiligt sich in keiner Weise an der Sicherung der Cybersicherheit der durchgeführten Berechnungen. Seine Aufgabe besteht nur darin, alle Transaktionen zu platzieren und den ersten Block zu bilden. In diesem Stadium beginnt die Transformation von einem Kandidaten zu einem echten Informationsblock.\")]),_c('p',[_vm._v(\"Ich habe es in drei Teile unterteilt, aber einen vergessen. Lassen Sie uns vier Teile dieses Kandidatenblocks betrachten. Der obere Teil, bekannt bei Benutzern verschiedener Web3-Anwendungen als Header oder Block-Header, ist die Quintessenz, das beliebteste Stück Information, das im Block Explorer zirkuliert und von den Konsolenclients aller Knoten, die Mining, Staking usw. betreiben, reflektiert wird. Der Header ist ein Schlüsselelement des Blocks, wird aber praktisch erst in der letzten Phase an diesem Punkt gebildet.\")]),_c('p',[_vm._v(\"Zunächst haben wir unsere tatsächlichen Anfragen für Zustandsübergänge oder Berechnungen. Es gibt eine Liste von Änderungen, die vorgenommen werden müssen: A in A', B in B', C in C', wobei eine Reihe von Algorithmen auf sie angewendet werden müssen. Dafür werden wir jetzt sofort eine weitere Grenze ziehen und sie überschreiten, um diesen Teil der Arbeit zu erledigen, und dann erst weitergehen. Schon in der Blockvorbereitungsphase müssen wir die zweite Grenze innerhalb des Weltcomputers überschreiten, um die Algorithmen anzuwenden, die zur Vorbereitung des Blocks erforderlich sind. Wie ich bereits erwähnt habe, führt der Kontrolleur an der Bushaltestelle theoretisch dasselbe durch, aber ich würde dem nicht viel Aufmerksamkeit schenken. Die Blockvorbereitungsphase, insbesondere wenn wir gleichzeitig Beispiele von Polkadot und Ethereum als Weltcomputer betrachten, unterscheiden sich geringfügig und zeigen uns die Bedeutungslosigkeit von Überprüfungen in diesem Stadium, da es genau im zweiten Schritt, nachdem die erste Grenze überschritten und der Informationsblock von den Collators erhalten wurde, beginnen die beachtenswerten Berechnungen dieses Weltcomputers.\")]),_c('p',[_vm._v(\"Um diese Berechnungen durchzuführen, kann der Validator in diesem Stadium nur auf die Relay-Kette, die zentrale Datenbank, zugreifen und von dort die Algorithmen aus der Laufzeit übernehmen. Im Fall von Ethereum waren es die gleichen virtuellen Maschinen im vorherigen architektonischen Konzept, die angewendet werden konnten, daher war es nicht notwendig, irgendwohin zu gehen. Fast jeder Knoten hatte eine vollständige Kopie der anwendbaren Algorithmen. Aber in Bezug auf ein heterogenes Netzwerk, in dem jedes Segment oder jede einzelne Kette über einen eigenen Satz von Algorithmen verfügen kann, muss ein Validator, bevor tatsächlich alle Übergänge ausgeführt werden, die in Form eines Blockkandidaten vom Collator erhaltenen Berechnungen konsultieren. Er muss die Relay-Kette konsultieren, die Haupt-Blockchain im Netzwerk konsultieren und von dort die notwendigen Algorithmen übernehmen, anwenden und Zustandsübergänge durchführen.\")]),_c('p',[_vm._v(\"Während der Ausführung von Berechnungen wird gleichzeitig ein Merkle-Baum gebildet, und wir werden nicht näher darauf eingehen, da Merkle-Bäume aus der Perspektive der Informatik nicht so kompliziert sind. Dennoch bemerke ich, dass man, um zu verstehen, wie man sie in der Technik und in der Architektur eines Projekts anwendet, wie sie angewendet werden, nicht nur durch Lesen auf Wikipedia, ein wenig nachdenken und Beispiele vorstellen muss. In diesem Beispiel werden wir nicht allzu sehr darauf eingehen, aber ich denke, für diejenigen, die bereits mit einigen grundlegenden Definitionen vertraut sind, über Merkle-Bäume gelesen haben, wird es etwas klarer, wie und zu welchen Zeitpunkten ein weiterer Merkle-Baum zusammengesetzt wird. Der Merkle-Baum wird gebildet, wenn wir tatsächlich Berechnungen durchführen und Ausgabewerte erscheinen. Diese Ausgabewerte werden in einem binären Baumformat verpackt, dann wird die Addition zwischen ihnen in der Sprache der Informatik durchgeführt, und der oberste Knoten erreicht den Header. Lassen Sie uns ihn mit einem großen Buchstaben \\\"H\\\" bezeichnen. Es ist ein kleiner und angenehmer Aspekt, solche Schemata zu betrachten.\")]),_c('p',[_vm._v(\"In diesem Schema können wir feststellen, wie der Blockheader tatsächlich mit den innerhalb durchgeführten Berechnungen zusammenhängt. Schauen wir noch einmal - unser Blockkandidat kam vom Collator. Es gibt eine Reihe von Transaktionen, die ausgeführt werden müssen, Berechnungen durchführen. Der Validator ging durch eine weitere interne Grenze, eine weitere, hinter den angewendeten Algorithmen, wandte sie an und protokollierte alle Ergebnisse auf der untersten Ebene des Merkle-Baums. Die anderen Knoten sind im Wesentlichen systemisch. Sie stammen nicht von Daten ab; sie kommen nicht von irgendwoher. Auf der zweiten Ebene stammt der Knoten nicht von Informationen ab. Er wird erhalten, indem Werte in diesen beiden Blättern summiert werden, und wenn wir mit Ihnen nach oben gehen, erhalten wir nur die Wurzel dieses Baums, die ausreicht, um alle Ausgabewerte zu schützen. Wenn wir eine dieser Berechnungen ändern, erhalten wir nicht denselben Header. Und dies ist eine der magischen und einfachen Funktionen, wie die hashorientierte Speicherung, wie wir einen ganzen Block von Informationen schützen können, indem wir nur über einen Header sprechen. Daher sind Header so wichtig und spielen selbst in Architekturen eine Schlüsselrolle, wenn wir von einer Kette oder einer virtuellen Maschine zu vielen kombinierten im Netzwerk übergehen. Es reicht aus, die Sicherheit der Speicherung von Headern zu gewährleisten, um sicherzustellen, dass alle Transaktionen, die in der Blockvorbereitungsphase ausgeführt wurden, korrekt ausgeführt wurden und nicht ersetzt werden können.\")]),_c('p',[_vm._v(\"Und ein Feld ist immer noch leer. Im Prozess der Vorbereitung des Informationsblocks ist es das Feld des Autors, das heißt des Validierers, der tatsächlich alle Änderungen vorgenommen, den Merkle-Baum vorbereitet und den Header aufgezeichnet hat. Da wir ein Beispiel mit dem Bus betrachten, der entlang der Route von der Haltestelle fährt, nennen wir den Validierer einen \\\"Controller\\\", der direkt in den Bus steigt, jeden Sitzplatz passiert, sich jedem nähert Person, überprüft, was auf ihren Tickets steht, macht eine Markierung, validiert es und setzt entsprechend ihre Unterschrift. Der Controller, zum Beispiel Nummer 134, bedeutet natürlich, dass jeder Validierer eine eindeutige Kennung hat, ihre Adresse, und wir haben sie auch hier irgendwie eindeutig umbenannt.\")]),_c('p',[_vm._v(\"Und es scheint, dass wir zu diesem Zeitpunkt unsere Blockgrenzen schattiert und fett gedruckt haben könnten, aber nein, und dies ist eine der interessanten Änderungen, die sich in den letzten 5 Jahren in Bezug auf dezentrale Ökosysteme ergeben haben, nämlich der Wechsel von Proof of Work. Als die Validierer des Netzwerks, damals Bergleute, nie etwas miteinander koordinieren mussten. Sie haben einen Block produziert und ihn an das Netzwerk gesendet und sind weitergezogen. Tatsächlich war es kein Konsens über vereinbarte Zustimmung. Es war ein Konsens über offensichtliche Zustimmung zu dem, was passiert war. Was interessante Änderungen sind, wenn die Architektur komplexer wird und wir uns von einem einfachen Taschenrechner wie Bitcoin mit einem Hauptbuch zu einem tatsächlichen virtuellen Computer nähern, ist, dass in jedem Stadium die Konnektivität der Teilnehmer, die Sicherheit und Blockproduktion gewährleisten, zugenommen hat. Denn tatsächlich hat niemand, der sein Risiko eingegangen ist, derjenige, der diese Sicherheit gewährleistet und durch die Verarbeitung Ihrer Transaktionen verdienen möchte, etwas zu verlieren, im Gegensatz zu Proof of Work. Bei Proof of Work haben Sie die Ausrüstung gekauft, ja, Sie haben Geld investiert, Sie haben Strom verbraucht, aber es gibt tatsächlich keinen Schutz dagegen, dass Sie das Netzwerk mit Ihrer Leistung angreifen können, derselbe 51%-Angriff, bei dem jemand mit vielen Minern versuchen kann, die Kette neu zu schreiben.\")]),_c('p',[_vm._v(\"Jetzt sprechen wir über den Nachweis des Einsatzes, bei dem bereits eine Einzahlung erfolgt ist, und wenn Sie etwas falsch machen, wird ein Teil davon abgezogen, als Strafe. Alle Knoten, absolut, in allen Architekturen, die ich derzeit beobachte, begannen Mechanismen für die Kommunikation zwischen Validatoren schnell in der Blockvorbereitungsphase zu erscheinen. Bei Polkadot ist es nicht anders. Jeder Validator einer separaten Parachain, der einen Block sammelt, kennt die Adressen oder hat bereits Kontakt zu weiteren 15-63 Validatoren, die mit Ihnen in diesem Zeitalter, für einen bestimmten Zeitraum, als Validatoren sind, und jeder von ihnen wird zufällig zu einem Blockproduzenten zu einem bestimmten Zeitpunkt. Aber die Ernennung zum Produzenten hebt nicht eine sehr wichtige Komponente dieses Prozesses auf. Sie hören nicht auf, mit den anderen Teilnehmern zu interagieren. Es gibt immer eine Gruppe von Validatoren, die einem bestimmten Zeitalter, einem bestimmten Zeitschlitz, zur Validierung einer bestimmten Parachain oder eines Segments des Weltcomputers zugewiesen sind. Unabhängig davon, ob Sie ein Validator-Controller sind, der speziell damit beauftragt ist, den nächsten Block im Weltcomputer dieses Segments zu produzieren, bleiben Sie dennoch in Kontakt mit den anderen Validatoren und haben ständigen Kontakt zu ihnen.\")]),_c('p',[_vm._v(\"Warum ist dieser ständige Kontakt notwendig? Es stellt sich heraus, dass es ziemlich einfach ist. Wir möchten nicht, wenn wir in den inneren Teil übergehen, Angst haben oder uns Sorgen machen, dass wir eine der Operationen falsch ausgeführt haben. So überraschend es auch sein mag, es ist für jeden Validator vorteilhaft, bevor er weitergeht, sich zuerst an seine Kollegen zu wenden, die mit der Validierung beauftragt sind, und sie zu bitten, die Berechnungen zu überprüfen. Diese Überprüfung ist informell, daher sammelt der beauftragte Controller nach dem Gespräch mit dem Pool der Validator zusätzliche Antworten von allen Validatoren, die dieser Parachain oder diesem Netzwerksegment zugewiesen sind. Zusammen mit zusätzlichen Bestätigungen geht der Controller zur nächsten Stufe über. Aber auch hier ist es nicht ganz so einfach. In diesem Stadium muss ein weiterer Prozess durchgeführt werden. Es ist wichtig zu beachten, dass in diesem Stadium unser Informationsblock immer noch ein Kandidatenblock ist und die Abwicklung von Informationen bereits im Speicher stattfindet. Weder am Ende noch nachdem wir den Block erstellt und versiegelt und ihn mit einem Archivar im letzten Teil verbunden haben, nämlich hier, in diesem mittleren Teil, wo alle Berechnungen tatsächlich durchgeführt werden, werden die Informationen im Speicher gespeichert. Daher stellt unser Controller neben dem Gespräch mit seinen Kollegen auch die Speicherung von Daten in einem Speicher sicher, was auch ziemlich metaphysisch ist, denn in dem Moment, in dem Sie mit anderen Validatoren kommunizieren, wird dieser Speicher gefüllt. Wie wird das überprüft? Wir müssen zur nächsten Stufe übergehen.\")]),_c('p',[_vm._v(\"Zusammenfassend, um den mittleren Teil abzuschließen, schauen wir noch einmal. Wir haben immer noch nur einen Kandidatenblock ganz am Anfang. Ja, alle Transaktionen werden irgendwo an der Bushaltestelle grob berechnet, jeder hat gemäß seiner Tickets seinen Platz eingenommen. Wir haben die erste Grenze überschritten, die im Wesentlichen den direkten Kontakt zwischen Validatoren und Blockcollators herstellt. In Ethereum und Polkadot sind dies jetzt leicht unterschiedliche Schemata. Aber alles, was am Anfang auf der linken Seite passiert, bietet keine Cybersicherheit für Daten und Berechnungen. Es ist nur Vorbereitung. Sobald wir die Aufmerksamkeit der Validatoren erlangt haben und in die Umgebung eingetreten sind, beginnt die Arbeit mit dem Block von Informationen im Weltcomputer. Ein zufällig ausgewählter Validator, in unserem Fall mit einer Busroute - ein Controller, geht tatsächlich durch jeden der Sitze, überprüft das Ticket, überprüft und führt alle Berechnungen durch, sammelt alle Informationen in einem Baum. Der resultierende Wurzelknoten dieses Baums wird zum Header des vorgeschlagenen Blocks. Der Validator, der tatsächlich alle Berechnungen mit diesem Block von Informationen durchführt, kommuniziert mit den anderen Teilnehmern, die eine ähnliche Funktion für dieselbe Route in einem undefinierten Zeitschlitz ausführen. Und während der Kommunikation mit ihnen und der Aufforderung, alle Berechnungen zu überprüfen, füllen wir tatsächlich einen bestimmten Datenspeicher im Netzwerk. Es handelt sich nicht um einen spezifischen physischen Speicher; es gibt keine spezifische IP-Adresse, keine spezifische Festplatte, auf die sie alle über ein VPN oder ein Login- und Passwortschema laden, natürlich nicht. Im Prozess der Kommunikation mit anderen Validatoren verbleiben die Daten auf ihren lokalen Maschinen, und diese Daten werden weiterhin an der Transformation dieses Kandidaten zu einem neuen Block von Informationen teilnehmen. Im Wesentlichen wird der versiegelte Block, der sich im Relay-Chain niederlassen wird, gesammelt. Wir haben einen Block zusammengestellt. Alle Metadaten rund um die Berechnungen sind bereits ausgefüllt, was bedeutet, dass wir versuchen können, zur nächsten Grenze überzugehen.\")]),_c('p',[_vm._v(\"In diesem Moment wollen wir uns in die Passage der nächsten Grenze vertiefen. Der entscheidendste Aspekt in der Endphase wird der Blockheader. Wir machen uns weniger Sorgen um die Ausführung von Berechnungen; wir können hier unsere Perspektive vereinfachen, da sich die Berechnungen je nach Architektur, ob Ethereum oder Polkadot, unterscheiden können. Der Schlüsselpunkt ist, dass in der Zwischenphase, basierend auf dem, was ich in der Theorie und Praxis bei der Implementierung des Weltcomputerkonzepts beobachte, die meisten Berechnungen auf einer Zwischenebene stattfinden. Die letzte Ebene dient nur zur Ausführung wesentlicher Überprüfungen. Fast alle diese Überprüfungen in einer Multi-Chain-Architektur beziehen sich auf die Verkettung oder Zusammenführung von Blockheadern zu einem Block.\")]),_c('p',[_vm._v(\"Im letzten Teil unserer Reise wird das wichtigste Element im Informationsblock des Weltcomputers der Eckpfeiler – der Header. Die zweite Komponente dreht sich mehr um Meta-Informationen. Wenn der Header das tatsächliche Ergebnis aller Berechnungen ist, besteht die zusätzliche übertragene Meta-Information aus Quittungen und Signaturen der Validatoren, die an der Zwischenphase dieses Prozesses teilgenommen haben. In der Endphase können wir das Gesamtbild allein als die Montage des gleichen Baums visualisieren, nicht als Liste von Transaktionen. Im letzten Teil der Relay-Chain ist der entscheidende Aspekt die Montage von Headern aus vielen ähnlichen Prozessen, die jedoch mit verschiedenen Segmenten des Weltcomputers, verschiedenen Parachains, verbunden sind.\")]),_c('p',[_vm._v(\"Jede Parachain, jede Gruppe von Validatoren – wir haben ein Beispiel besprochen, aber in Wirklichkeit geschehen solche Blockvorbereitungen für Parachains 30-40 Mal. Die Anzahl der Parachain-Slots oder die Anzahl der L2-Netzwerke in Ethereum wird zu einer ähnlichen Anzahl von Prozessen mit einer ähnlichen Architektur führen. In der Endphase werden wir jedoch überall ein annähernd identisches Bild sehen – wie der Blockheader aus einer Vielzahl von Headern aus anderen Blöcken gebildet wird. In diesem Prozess müssen wir eine weitere Entität einführen und über die Grenze zur zweiten Phase zurückkehren.\")]),_c('p',[_vm._v(\"Finalisierer. Tatsächlich sind sie auch Validatoren, aber Relay-Chain-Validatoren. In der Polkadot-Architektur haben wir tausend Validatoren, die in zwei Gruppen unterteilt sind. Die erste, eine sehr kleine Gruppe, ist nur für die Bildung des Blockheaders und eines neuen Blocks zuständig, der aus den Headern der Zustandsblöcke besteht. Die zweite Gruppe – Parachain-Validatoren – ist weiter in viele Untergruppen unterteilt, aber diese Gruppe wird Parachain-Validatoren genannt. In L2-Netzwerken über Ethereum wird diese Geschichte letztendlich mehr Verständnis, mehr Nenner gewinnen. Lassen Sie uns uns vorerst auf die Polkadot-Architektur konzentrieren. Finalisierer helfen neben der Überprüfung eines zusätzlichen Satzes von Meta-Informationen und der erneuten Überprüfung eines Validierers mit einer spezifischen ID, der zufällig ausgewählt wurde, um diesen Block aus allen Blöcken zu generieren, auch bei der erneuten Überprüfung von Meta-Informationen, der Überprüfung und Montage aller Header zu einem. Es ist etwas komplex, ja, wenn wir es aus der Perspektive der Baummontage betrachten.\")]),_c('p',[_vm._v(\"Zusätzlich dazu findet in der Polkadot-Architektur und in Ethereum mit den neuesten Änderungen eine Datenverfügbarkeitsprüfung statt. Dafür besuchen Finalisierer Parachain-Validatoren und versuchen, tatsächliche Informationen über jeden im Netzwerk gespeicherten Block anzufordern. Wenn sie Daten von mindestens 1/3 der Validatoren erhalten, die Technologie verwenden, die redundante Speicherung von Informationen ermöglicht, und anschließend, wenn jemand sie verliert, können ein, zwei oder drei Validatoren sie immer noch wiederherstellen, gibt es einen kritischen Schwellenwert von 1/3. Wenn 1/3 der Knoten antworten und sagen, dass wir Daten über den produzierten Block haben, teilen die Finalisierer dem Block mit, dass es sich bereits um einen vollständig geformten Informationsblock handelt, dass alle Berechnungen korrekt durchgeführt wurden, dass wir bereits den Header dieses Blocks genommen und mit den Headern anderer Segmente des Netzwerks kombiniert haben. Wir haben bereits den Hauptheader des gesamten Netzwerks gebildet. Danach setzen die Finalisierer viele Häkchen auf den endgültigen Block, der alle durchgeführten Berechnungen kombiniert.\")]),_c('p',[_vm._v(\"Derzeit ist dies die Situation aus der Perspektive des am meisten ingenieurtechnisch umgesetzten Multi-Chain-heterogenen Ökosystems, das Polkadot ist. Es ist das am meisten ingenieurtechnisch umgesetzte Multi-Chain-heterogene Ökosystem, nicht allzu weit von Ethereum entfernt. Ich möchte mich auf den Vergleich konzentrieren, und wenn jemand daran interessiert ist zu verstehen, wie Informationsblöcke in Ethereum mit L2-Netzwerken fließen, kann er das jetzt versuchen. Ich werde zu dieser Frage zurückkehren, wenn einige Elemente von Ethereum in Bezug auf Heterogenität und Multi-Chain-Aspekte abgeschlossen sind. Es könnte 1-2 Jahre dauern, und dann können wir ein solches Bild erstellen. Dennoch können wir im Allgemeinen ein Schema mit drei Hauptstufen akzeptieren:\")]),_c('p',[_c('strong',[_vm._v(\"1. Bildung eines Kandidaten für den Informationsblock:\")])]),_c('ul',[_c('li',[_vm._v(\"In diesem Stadium wird der anfängliche Kandidat für den Informationsblock gebildet.\")])]),_c('p',[_c('strong',[_vm._v(\"2. Ausführung aller Berechnungen, Datenspeicherung, Datenverfügbarkeit, Überprüfung mit anderen Knoten, Sicherstellung, dass alle Zustandsübergänge gemäß spezifischer Algorithmen korrekt durchgeführt werden, und Speicherung dieser Algorithmen in der Hauptzitadelle:\")])]),_c('ul',[_c('li',[_vm._v(\"In diesem Stadium erfolgt die tatsächliche Ausführung der Berechnungen, das Speichern von Daten in bestimmten Schichten, die Sicherstellung der Datenverfügbarkeit, die Überprüfung mit anderen Knoten, um zu bestätigen, dass alle Zustandsübergänge gemäß Algorithmen erfolgen, die irgendwo in der Hauptzitadelle gespeichert sind.\")])]),_c('p',[_c('strong',[_vm._v(\"3. Finalisierung, die die Berechnungen nicht erneut überprüfen wird, sondern die Meta-Informationen überprüfen wird, wie diese Meta-Informationen gespeichert sind. Es wird dann den endgültigen Block zusammenstellen, der der Zustand der Zustände ist, und ihn als gemeinsamen Informationsblock für das gesamte segmentierte Multi-Chain-Netzwerk veröffentlichen:\")])]),_c('ul',[_c('li',[_vm._v(\"Das abschließende Stadium beinhaltet die Überprüfung der Meta-Informationen, die Überprüfung, wie diese Meta-Informationen gespeichert sind, das Zusammenstellen des endgültigen Blocks (Zustand der Zustände) und das Veröffentlichen als gemeinsamen Informationsblock für das gesamte segmentierte Multi-Chain-Netzwerk.\")])]),_c('p',[_vm._v(\"An diesem Punkt können wir sagen, dass unsere Informationen gespeichert sind. Sie sind durch das Herz gegangen, das Herz hat seinen Datentransfer korrekt ausgeführt, und wir können bereits die Ausgabewerte verwenden. Einige werden sie verwenden, um eine mit einem intelligenten Schloss gekaufte Wohnung zu öffnen, während andere vielleicht ihr gerade für 10 Ether erhaltenes NFT präsentieren.\")]),_c('p',[_vm._v(\"Im Allgemeinen funktioniert es ungefähr so. Damit endet der theoretische Teil. Ich denke, es hat etwa 2 Stunden gedauert, und vor uns liegen praktische Sitzungen, die ich in den nächsten Monaten aufzeichnen werde. Sie werden uns helfen, die beobachteten Daten aus dem Konsolenfenster, dezentralen Anwendungen, Block-Explorern zu verstehen, wo wir nach und nach verstehen werden, wie all diese theoretischen Zahlen und Buchstaben tatsächlich in der Implementierung unter Verwendung von Polkadot als Beispiel aussehen. Ich werde auch damit beginnen, praktische Erfahrungen mit Implementierungen auf der L2-Ebene zu sammeln, indem ich eines der bekannten Frameworks für den Aufbau von L2 verwende. Vielen Dank an alle, die zugeschaut haben.\")])])}\nvar staticRenderFns = []\n\n\n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/gridsome%22,%22cacheIdentifier%22:%223ec475f9-vue-loader-template%22%7D!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "GQnC":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js */ \"UQSp\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"Kw5r\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].config.optionMergeStrategies;\nvar imported = {\n  VueRemarkRoot: _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Component) {\n  var components = Component.options.components = Component.options.components || {};\n  var computed = Component.options.computed = Component.options.computed || {};\n  Object.keys(imported).forEach(function (key) {\n    if (_typeof(imported[key]) === 'object' && typeof imported[key].render === 'function') {\n      components[key] = imported[key];\n    } else if (typeof imported[key] === 'function' && typeof imported[key].options.render === 'function') {\n      components[key] = imported[key];\n    } else {\n      computed[key] = function () {\n        return imported[key];\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "TvDB":
/*!******************************************************************************************************************************************************************!*\
  !*** ./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--16-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"lMtx\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "UQSp":
/*!****************************************************************!*\
  !*** ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// @vue/component\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VueRemarkRoot',\n  render: function render(h) {\n    return h('div', null, this.$slots[\"default\"]);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js?");

/***/ }),

/***/ "c+v+":
/*!*************************************************************************************************************************************************************!*\
  !*** ./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--15-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"GQnC\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "hFNh":
/*!****************************************************************************************************************************************!*\
  !*** ./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=0327c631& ***!
  \****************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/gridsome\",\"cacheIdentifier\":\"3ec475f9-vue-loader-template\"}!../../../../node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=0327c631& */ \"CbiQ\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "j1rw":
/*!*********************************************************************************************************!*\
  !*** ./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=template&id=0327c631& */ \"hFNh\");\n/* harmony import */ var _node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/gridsome/node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"7uw+\");\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"c+v+\");\n/* harmony import */ var _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"TvDB\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_template_id_0327c631___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\n\nif (typeof _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === 'function') Object(_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(component)\n\nif (typeof _the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === 'function') Object(_the_path_of_a_new_block_of_information_in_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(component)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?");

/***/ }),

/***/ "lMtx":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initFrontMatter; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"Kw5r\");\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].config.optionMergeStrategies;\nvar key = '__vueRemarkFrontMatter';\nvar data = {\n  \"excerpt\": null,\n  \"title\": \"Teil 4: Der Weg eines neuen Informationsblocks im Weltcomputer\",\n  \"description\": \"Der vierte und letzte Teil unserer Vorlesung ist \\\"Der Weltcomputer in Ihrem Zuhause.\\\" Danach werde ich mit der Aufzeichnung von Screencasts für den praktischen Teil der Sitzungen beginnen.\",\n  \"metaOptions\": [\"Lernen\"],\n  \"defaultName\": \"World computer in your home\"\n};\nfunction initFrontMatter(Component) {\n  if (Component.options[key]) {\n    Component.options[key] = data;\n  }\n\n  vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].util.defineReactive(Component.options, key, data);\n  Component.options.computed = strats.computed({\n    $frontmatter: function $frontmatter() {\n      return Component.options[key];\n    }\n  }, Component.options.computed);\n}\n\n//# sourceURL=webpack:///./courses/de/learn/world-computer/the-path-of-a-new-block-of-information-in-the-world-computer.md?./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ })

}]);