(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{UQSp:function(e,o,t){"use strict";o.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},m0PG:function(e,o,t){"use strict";t.r(o);var n=t("7uw+"),r=t("UQSp"),s=t("Kw5r");function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}s.a.config.optionMergeStrategies;var a={VueRemarkRoot:r.a},p=function(e){var o=e.options.components=e.options.components||{},t=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===i(a[e])&&"function"==typeof a[e].render||"function"==typeof a[e]&&"function"==typeof a[e].options.render?o[e]=a[e]:t[e]=function(){return a[e]}}))},l=s.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",d={excerpt:null,title:"Lesson #6, Sensor map deployment",description:"SENSOR MAP DEPLOYMENT",lessonNumber:6,courseID:4,metaOptions:["Online Courses","Sensors Connectivity & Decentralized Sensors Network"]};var u=function(e){e.options[c]&&(e.options[c]=d),s.a.util.defineReactive(e.options,c,d),e.options.computed=l.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},v=Object(n.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("VueRemarkRoot",[t("p",[e._v("After assembling a sensor and setting up Sensors Connectivity module it is time to deploy personal decentralized sensor map.")]),t("h2",{attrs:{id:"requirements--installation"}},[t("a",{attrs:{href:"#requirements--installation","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Requirements & Installation")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Since the sensor map is powered by JavaScript, first you need to install the "),t("code",{pre:!0},[e._v("node")]),e._v(" and the "),t("code",{pre:!0},[e._v("yarn")]),e._v(" manager:")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"bash"}},[e._v("sudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs\nsudo npm install --global yarn")])],1),t("li",[t("p",[e._v("Download and build the map:")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"bash"}},[e._v("git clone https://github.com/airalab/sensors.robonomics.network.git\ncd sensors.robonomics.network/\nyarn install")])],1),t("li",[t("p",[e._v("Run the map in "),t("code",{pre:!0},[e._v("development")]),e._v(" mode for testing")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("yarn serve")])],1),t("li",[t("p",[e._v("Go to URL from terminal, you should see the sensor map. After that, stop it with "),t("code",{pre:!0},[e._v("Ctrl+C")]),e._v(".")])])]),t("h2",{attrs:{id:"configuration"}},[t("a",{attrs:{href:"#configuration","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Configuration")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Find your IPFS ID with:")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"bash"}},[e._v('$ ipfs id\n{\n\t"ID": "QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP",\n\t"PublicKey": "CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/uMV3rLM/C+LOh2DGPo3chr+VM+vyYMKi...\n    ...')])],1),t("li",[t("p",[e._v("Go to "),t("code",{pre:!0},[e._v("src")]),e._v(" folder and rename the files:")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"bash"}},[e._v("cd src\ncp config.template.json config.json\ncp agents.template.json agents.json")])],1),t("li",[t("p",[e._v("Insert your IPFS ID in "),t("code",{pre:!0},[e._v("agents.json")]),e._v(":")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"json"}},[e._v('[\n  "QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP"\n]')])],1),t("li",[t("p",[e._v("Open "),t("code",{pre:!0},[e._v("config.json")]),e._v(" file and change the next part of configuration file:")]),t("LessonCodeWrapper",{attrs:{codeClass:"big-code",language:"json"}},[e._v('...\n  REMOTE_PROVIDER: "",\n  WIND_PROVIDER: "",\n  MAP: {\n    zoom: "8",\n    position: {\n      lat: "",\n      lng: "",\n    },\n  },\n  SHOW_MESSAGES: true,\n};')]),t("p",[e._v("Here you have to insert latitude ("),t("code",{pre:!0},[e._v("lat")]),e._v(") and longitude ("),t("code",{pre:!0},[e._v("lng")]),e._v(") of your city. Optionally, you can set up "),t("a",{attrs:{href:"https://github.com/danwild/wind-js-server",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("wind direction service")]),e._v(" and provide URL to it in "),t("code",{pre:!0},[e._v("WIND_PROVIDER")]),e._v(" field.")])],1)]),t("h2",{attrs:{id:"building"}},[t("a",{attrs:{href:"#building","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Building")]),t("List",{attrs:{type:"numbers"}},[t("li",[t("p",[e._v("Run the following command to build files for release:")]),t("LessonCodeWrapper",{attrs:{language:"bash"}},[e._v("yarn build")]),t("p",[e._v("It will create "),t("code",{pre:!0},[e._v("dist")]),e._v(" directory with all components of static website.")])],1),t("li",[t("p",[e._v("To check if everything is correct, move to "),t("code",{pre:!0},[e._v("dist")]),e._v(" directory and open "),t("code",{pre:!0},[e._v("index.html")]),e._v(" file. After some time sensor's data from your Sensors Connectivity module will appear on the map.")])])])],1)}),[],!1,null,null,null);"function"==typeof p&&p(v),"function"==typeof u&&u(v);o.default=v.exports}}]);