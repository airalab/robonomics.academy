(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vue-remark--courses--uk--learn--world-computer--the-heart-of-the-world-computer-md"],{

/***/ "E8Wl":
/*!****************************************************************************!*\
  !*** ./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./the-heart-of-the-world-computer.md?vue&type=template&id=7bffd610& */ \"Eu+T\");\n/* harmony import */ var _node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/gridsome/node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"7uw+\");\n/* harmony import */ var _the_heart_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./the-heart-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"iHVP\");\n/* harmony import */ var _the_heart_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./the-heart-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"l31Z\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_gridsome_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\n\nif (typeof _the_heart_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === 'function') Object(_the_heart_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(component)\n\nif (typeof _the_heart_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === 'function') Object(_the_heart_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(component)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?");

/***/ }),

/***/ "Eu+T":
/*!***********************************************************************************************************!*\
  !*** ./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=template&id=7bffd610& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/gridsome\",\"cacheIdentifier\":\"3ec475f9-vue-loader-template\"}!../../../../node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-heart-of-the-world-computer.md?vue&type=template&id=7bffd610& */ \"SLw9\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_3ec475f9_vue_loader_template_node_modules_gridsome_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_template_id_7bffd610___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?");

/***/ }),

/***/ "JGRR":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initFrontMatter; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"Kw5r\");\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].config.optionMergeStrategies;\nvar key = '__vueRemarkFrontMatter';\nvar data = {\n  \"excerpt\": null,\n  \"title\": \"Частина 2: Серце світового комп'ютера\",\n  \"description\": \"Що лежить в основі проектів, таких як Ethereum або Polkadot, або будь-якого іншого проекту web3, який претендує на звання світового комп'ютера, і чому порівняння з серцем в людському тілі так добре вписується в абстрактну архітектуру світового комп'ютера?\",\n  \"metaOptions\": [\"Вивчайте\"],\n  \"defaultName\": \"World computer in your home\"\n};\nfunction initFrontMatter(Component) {\n  if (Component.options[key]) {\n    Component.options[key] = data;\n  }\n\n  vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].util.defineReactive(Component.options, key, data);\n  Component.options.computed = strats.computed({\n    $frontmatter: function $frontmatter() {\n      return Component.options[key];\n    }\n  }, Component.options.computed);\n}\n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?./node_modules/babel-loader/lib??ref--16-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "SLw9":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/gridsome","cacheIdentifier":"3ec475f9-vue-loader-template"}!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=template&id=7bffd610& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('VueRemarkRoot',[_c('p',[_vm._v(\"Що лежить в основі проектів, таких як Ethereum або Polkadot, або будь-якого іншого проекту web3, який претендує на звання світового комп'ютера, і чому порівняння з серцем в людському тілі так добре вписується в абстрактну архітектуру світового комп'ютера?\")]),_c('p',[_vm._v(\"Давайте спробуємо зрозуміти ці питання в цій частині лекції, і для початку нам треба трохи відірватися від біткойн-максималістів. Ймовірно, ви вже читали одну або кілька популярно-наукових статей, присвячених біткоїну у своєму житті, і головне, що практично відзначається скрізь, це три основні переваги біткоїну як електронних грошей:\")]),_c('ul',[_c('li',[_vm._v(\"Стійкість до цензури\")]),_c('li',[_vm._v(\"Незмінність даних, збережених у блокчейні біткону\")]),_c('li',[_vm._v(\"Прозорість транзакцій\")])]),_c('p',[_vm._v(\"Давайте швидко пройдемося кожною з цих властивостей, і, що найважливіше, в кінці нам треба трохи відступити від них, оскільки світовий комп'ютер успадковує їх як свого роду спадкоємця біткоїну.\")]),_c('p',[_c('strong',[_vm._v(\"По-перше\")]),_vm._v(\", незмінність даних. Звичайно, ця властивість, з точки зору електронних грошей, має значні переваги і важливість. Після того, як ви відправите транзакцію або отримаєте біткоїни, після одного або двох блоків ви поступово починаєте відчувати незмінність даних у блокчейні. Протягом перших 15 хвилин ви можете спостерігати, використовуючи дослідник блокчейну, як транзакція повинна вирішитися. Ви вже бачите це в мережі, але воно не закінчене, що означає, що ці біткоїни ще не на вашому рахунку. Однак після кількох боків ви впевнені, що ці кошти не зникнуть з вашого рахунку. З плином часу ймовірність того, що значення будуть якось перезаписані з вашого рахунку, стає майже незначною, практично зводячись до нуля. Це наша властивість незмінності даних. Як це круто, коли ви можете поділитися інформацією з отримувачем, надіслати їм посилання на дослідник блокчейну, і вам не потрібно отримувати жодних паперів або документів від банку, які підтверджують, що ви відправили платіж у певну дату і час - це друга перевага біткоїну, яка дуже допомагає на практиці і, ймовірно, є найприємнішим бонусом при порівнянні банківського переказу та переказу біткоїну.\")]),_c('p',[_c('strong',[_vm._v(\"По-друге\")]),_vm._v(\", прозорість транзакцій. Практично немає страху при використанні біткоїну, що ви опинитеся в регіоні світу або підключитеся до постачальника Інтернету через який ви не зможете виконувати операції з мережею біткоїну. Практично немає варіантів, окрім того, що вас замкнуть у темній кімнаті без доступу до Інтернету, щоб ви не могли використовувати мережу біткоїну.\")]),_c('p',[_vm._v(\"Ці три властивості, звичайно, дуже важливі. Тепер, щоб зрозуміти питання \\\"Що є в основі світового комп'ютера,\\\" нам потрібно відступити від них, абстрагуватися і зробити невеликий стрибок віри, стрибок, приблизно, на 100 років назад до 1930-х.\\nУ 1936 році Алан Тьюрінг зробив пропозицію науковій спільноті щодо вирішення проблеми формалізації і, фактично, більш якісного опису такого поняття, як алгоритм. Цікаво, що з пропозиції Алана Тьюрінга виникла архітектура та розвиток всієї комп'ютерної науки у майбутньому, але він ні в якому разі не прагнув до ідеї створення персонального комп'ютера, і він нічого не знав про центри обробки даних або хмари. Його завданням було забезпечити спосіб визначенн алгоритму в контексті завдань, що стоять перед математиками. Це захоплююча картина на протязі століть, що досягнення комп'ютерної науки виявляється побічним продуктом досить банальної проблеми серед математиків.\")]),_c('p',[_vm._v(\"Давайте заглибимося в те, що запропонував Алан Тьюрінг, не заглиблюючись занадто глибоко в теорію алгоритмів та мету, для якої він її запропонував. Алан Тьюрінг запропонував машину Тьюрінга, яка представляє собою нескінченну стрічку (ми можемо назвати її клітинами пам'яті, щоб спростити), яку проходить читаюча та пишуча головка. Ця головка, розташована над певною клітиною, може читати дані, застосовувати до них деякі прості операції та записувати нові значення.\")]),_c('p',[_vm._v(\"Сьогодні, коли ви чуєте фрази подібні до цієї, вам може здатися: \\\"Ну, так, це жорсткий диск, комп'ютер або щось подібне.\\\" Це абсолютно правильно. Цей опис породив першу архітектуру комп'ютера. Однак основне завдання машини Тьюрінга полягало в тому, щоб забезпечити засіб представлення системи або сутності, здатної виконувати будь-які формалізовані обчислення. Можна уявити ящик або кімнату, навіть заповнену лампами, в яку ви вставляєте свою перфокарту, картку або передаєте сигнал Bluetooth, і машина починає працювати, виконуючи прості операції, які в кінцевому підсумку вирішують вашу проблему. Таким чином, машина Тьюрінга є універсальним обчислювальним механізмом, який в першу чергу вирішує універсальне та важливе завдання забезпечення механізму, за допомогою якого можна виконувати будь-які прості обчислення або, точніше, будь-які формалізовані обчислення—обчислення, які можуть бути розкладені на мову математики.\")]),_c('p',[_vm._v(\"З цього підходу до вирішення проблем і теорії алгоритмів виник персональний комп’ютер. З цього визначення в 2014 році по суті виникла концепція Ethereum як першого світового комп’ютера. Коротко опишемо, що це собою являє. Ми маємо набір транзакцій або запитів на обчислення як вхідні дані. Ці запити надходять до обчислювальної машини або, якщо говорити про її теоретичну суть, «переходу стану», фактичної зміни стану. Пам’ятаєте, буквально пару хвилин тому я говорив про нескінченну стрічку та головку для читання, що рухається по ній? Отже, головка, що перетинає цю стрічку, ефективно змінює стан кожної комірки, з якою вона працює. На виході ми отримуємо результати. Ми не говоримо про конкретний ефект запису в комірку, не обговорюємо жодних додаткових операцій зберігання, лише те, що, вводячи набір даних або зчитуючи їх із нескінченної стрічки, ми можемо застосувати набір формалізованих правил, записаних у нашому переміщенні головою вздовж стрічки. Застосувавши набір операцій з даними, ми отримуємо вихідні значення, які можна записати в комірку або передати далі по проводах, і не тільки по повітрю, по проводах, але й, можливо, іншими способами в майбутньому.\\nСаме функція переходу між станами лежить в основі світового комп’ютера. Саме з цього визначення обчислювальної машини Алана Тьюрінга для уточнення теорії алгоритму випливає поняття алгоритму, і, в принципі, не має значення, чи це персональний комп’ютер, чи центр обробки даних. Невелике доповнення, звичайно, після того, як було знайдено теоретичне рішення для створення комп’ютера, завдання остаточно зосередилося на пошуку його апаратної форми. Тому не дивно, що коли ми сьогодні говоримо про світовий комп’ютер, ми посилаємося на теорію, якій майже століття. Можна сказати, що знадобилося цілих 100 років, щоб перейти від абстрактного опису комп’ютера до його реальної реалізації у формі серверів, вашого кишенькового смартфона чи ноутбука на вашому столі.\")]),_c('p',[_vm._v(\"У суті завдання останніх 100 років, після знаходження деякого рішення в галузі математики, полягало саме в тому, щоб надати йому фізичну форму, знайти набір транзисторів, які можна було б розмістити на платі, вивчити, як їх всі паяти, зменшити процеси обчислювального процесора і так далі. Не дивно, що теорія з 1936 року знаходить застосування в 2014 році для ідей світового комп'ютера. Ці 100 років були зайняті, взагалі, в іншій області - галузі фізичної реалізації цього комп'ютера.\")]),_c('p',[_vm._v(\"Коли планета насичувалася, і у нас були персональні комп'ютери, обчислювальні машини навіть всередині розумних пристроїв, і коли на планеті почали зростати центри обробки даних, питання зсунулося від апаратного рішення до того, як може виглядати обчислювальна машина не на фізичному або математично абстрактному рівні, а на якомусь нематеріальному, можливо, метафізичному рівні відносно всієї планети. Однак основа залишається тією ж: функція переходу стану і нічого більше.\")]),_c('p',[_vm._v(\"Як додаток до сказаного, щоб ми не тільки зупинялися на теорії 1936 року і не тільки руйнували кайдани максималістів Bitcoin, відкрийте білий папір Ethereum. Там ви знайдете важливу фразу \\\"Машина, що завершує обчислення\\\" - це основне визначення Ethereum. Машина, що завершує обчислення, означає, що Ethereum може обробляти будь-які прості операції, описані формальною мовою, операції, які можливі. Це не якийсь набір операцій, які Ethereum може надати як калькулятор або вдосконалений калькулятор для вчених. Змість цього, це абстракція всередині якої можна завантажити будь-які можливі варіації, маніпуляції змінними, константами, додаваннями, обчисленнями з будь-якими станами і так далі. Ви не знайдете нічого відмінного від того, що пропонував Тьюрінг у 1930-х роках в концепції Ethereum. Ви знайдете інженерне втілення того, як це зробити. Якщо ми перейдемо і відкриємо вікі Polkadot, буде трохи складніше знайти. Для цього вам слід використовувати пошук, ввести \\\"Функція переходу стану\\\" і в результатах пошуку знайти кілька згадок того, що Polkadot гарантує нічого іншого, крім функції переходу стану. Ані зберігання даних в блокчейні Polkadot, ані будь-які додаткові послуги - тільки найчистіша зміна стану, спричинена вхідними транзакціями і оброблена валідаторами Polkadot. Тепер давайте спробуємо краще поглибитися в це.\")]),_c('p',[_vm._v(\"Зараз додамо трохи до цієї лінійної діаграми, щоб перейти від теорії 1930-х років до сучасної реальності, де ми описуємо абстрактне зображення світового комп'ютера. Для цього розглянемо приклад з Алісою та Бобом. Аліса, будучи в офісі, хоче запустити пилосос-робот Боба для прибирання вдома. Якщо ми розглянемо сучасні концепції того, як реалізоване зв'язок між мобільним додатком Аліси та пилосос-роботом вдома, ви побачите приблизно наступне зображення: мобільний додаток Аліси генерує транзакцію в якому-небудь хмарі, де відбуваються обчислення, і вихідні значення цих обчислень ефективно перетворюються на команду для запуску пилосос-робота. Було б корисно для нас, з польової робототехніки та Робономіки як концепцій у світі web3, зрозуміти, що в хмарі є цифровий двійник цього робота, і його стан змінюється. Ми можемо, взагалі, не йти так далеко і зупинитися на тому, що Аліса відправляє транзакцію в хмару, а хмара, виконавши всі необхідні обчислення та маніпуляції, генерує команду для запуску пилосос-робота Боба.\")]),_c('p',[_vm._v(\"У цій схемі сьогодні є кілька основних питань: якщо ви взаємодієте з фізичним комп'ютером перед вами або знаходитесь в кімнаті з пилосос-роботом, ви підходили б, натискати фізичну кнопку та запускати його в рух. Що змінюється, коли замість стрілок, тут не ручний привід, а комунікаційний шар, інтернет? Виникає безліч питань про те, як ми можемо безпечно підключити Алісу до цієї хмари, як ми можемо бути впевнені, що Аліса має доступ до цієї хмари. Виникає питання про мережу зв'язку - як ми можемо захистити Алісу від того, що хтось інший звертається до її пилосос-робота, запитуючи, наприклад, зробити відео всієї її квартири замість прибирання, і виникає схожий аспект: чому пилосос-робот слухатиме цю хмару з такою повагою та чесністю? Чому робот повністю довірятиме цій хмарі?\")]),_c('p',[_vm._v(\"Сьогоднішній підхід з архітектурою хмарних рішень, які з'єднують ваш мобільний телефон, або, точніше, додаток на вашому мобільному телефоні, та якусь технологію з іншого боку, розумні пристрої, базується на значних досягненнях у побудові фізичних комп'ютерів. Комп'ютери в центрах обробки даних сьогодні - це щось надзвичайне - рівень технічних процесів просто дивовижний. Однак з точки зору комуікаційних технологій, коли у вас вже є деякий досвід роботи з інтернет-додатками, здається, що десь там, на рівні технічної школи або коледжу, або можливо не зовсім поруч з тим, як розробники, архітекти процесорів Intel вирішують свої завдання зараз. Майже всі питання про підключення Аліси до Боба зводяться виключно до виведення конкретного сертифіката доступу на конкретну IP-адресу з обох сторін, зв'язуючи їх разом, і хмара буде володіти та робити все. Найважливіше в цій схемі - зробити все, що означає виконати переходи стану або операції, які відбуваються без будь-яких гарантій, що для Аліси, для Боба, вони будуть виконані за тією ж логікою. Ніхто не може сказати нічого про те, як організована хмара. Це чорна скринька, де обчислення не формалізовані, і ні Аліса, ні Боб не знають, як виконуються обчислення.\")]),_c('p',[_vm._v(\"Місце, де ви повинні повністю довіряти - покладаючись на репутацію компанії, яка володіє цими центрами обробки даних, і ви повинні повністю довіряти постачальникам мережевого доступу, які видаватимуть сертифікат та перевірятимуть безпеку вашого з'єднання. Фактично, якщо ми говоримо про бум інтернет-застосунків, це велика проблема. Проблема полягає в тому, що насправді є деякі цитаделі, розташовані в конкретних юрисдикціях, які працюють на відносно простому технологічному стеку, щоб підключити вас якнайлегше до хмари, яка представляє собою чорну скриньку. Незадоволення цим підходом насправді викликає інтерес до світового комп'ютера, оскільки він буде трохи інакше організовувати речі. І як? Давайте спробуємо доповнити схему, яку ми намалювали синім кольором прямо зараз.\")]),_c('p',[_vm._v(\"Таким чином, щоб доповнити нашу лінійну графіку, нашу лінійну діаграму з обох сторін, давайте розглянемо відкриття, які мають значення в комп'ютерних науках і які безпосередньо або опосередковано пов'язані з досягненнями зі світу web3.\")]),_c('p',[_vm._v(\"Почнемо з Леслі Лампорта в 1976 році. Ті, хто відвідував мої презентації, лекції з 2015-2020 років, можливо пам'ятають, як часто я любив згадувати, що до винаходу Bitcoin проблеми, пов'язані з створенням децентралізованої мережі, були добре описані Леслі Лампортом в 1976 році в проблемі Візантійських генералів. Рішення проблеми Візантійських генералів лежить в основі алгоритмів Tendermint PBFT та всіх синхронних алгоритмів, використованих ід Telegram Open Network до Tendermint, до Cosmos та інших блокчейн-проектів, які, відповідно, йшли шляхом Візантійських генералів.\")]),_c('p',[_vm._v(\"Другим цікавим досягненням в інтернет-технологіях є торрент-трекери. У нас немає жодного конкретного, вже видаленого, хмарного або чорного ящика, що зберігає файли. Однак користувачі по всьому світу, обмінюючись торрент-файлами, можуть завантажити саме той файл, який вони шукали, і це працює без заміни даних. Ніхто не завантажує вам жодних вірусів, замінюючи файл. Можливо, іноді в файлі може бути вбудований вірус, але ідея отримання посилання на завантаження та фактичного завантаження чогось іншого, ніж вам пропонували завантажити, використовуючи технологію торрентів, неможлива. Подібні процеси існують в мережі IPFS, орієнтованій на хеш-сховище - спосіб з'єднання різних учасників з довірою до інформації, яку ви передаєте, не використовуючи чорний ящик, точно.\")]),_c('p',[_vm._v(\"І, звичайно, Bitcoin. Bitcoin, як більш колективний приклад, я впевнений, що Сатоші Накамото добре знав рішення Леслі Лампорта для проблеми Візантійських генералів і, звичайно, спостерігав, як розвивалася ідея торрент-трекерів. Якщо ми не підкреслюємо властивості, які отримав блокчейн Bitcoin, такі як незмінність, прозорість транзакцій і, до певної міри, стійкість до цензури, то Bitcoin є інтернет-сервісом, який виконує перехід стану, деякі зміни стану на основі транзакцій без центрального вузла. Це приклад колективної побудови глобальної мережі, в якій є постійно працююча функція переходу стану, якій ми можемо довіряти, і для забезпечення довіри не використовуються журисдикції, конкретні IP-адреси або найпримітивніші технології, які використовуються і досі використовуються сьогодні при побудові хмарних сервісів. Колективне уявлення про Bitcoin дозволило накладання загальної концепції з 1930-х років про машину з повним набором команд на існування універсальної абстрактної функції для всього.\")]),_c('p',[_vm._v(\"Так от, що нам потрібно додати до цієї схеми, щоб уявити глобальний комп'ютер? Знизу ми надаємо валідаторів консенсусу або, взагалі, валідаторів. Можна сказати, що \\\"Шар доступності даних\\\" ймовірно, фраза, яку багато хто чув цього року в Ethereum, і вона стала перевагою також для Bitcoin. Однак у схемі організації глобального комп'ютера це один елемент головоломки і, як я вже зазначив, він доповнює основну функцію, яка лежить в основі глобального комп'ютера - ункцію універсального переходу стану. Повертаючись до самого початку, аналогія з серцем в людському тілі тут цікава. Це не розумна річ, насправді. Так, воно не генерує, можна сказати, що мозок набагато важливіший. Проте, життя неможливе без серця. Воно просто качає кров. Точно так само, в основі глобального комп'ютера всі транзакції прокачуються через функцію переходу стану, що призводить до виходів. Але для організації цього в розподіленій інтернет-мережі без необхідності довіряти якійсь цитаделі, нам потрібно доповнити картину двома компонентами.\")]),_c('p',[_vm._v(\"Перший компонент - це набір комп'ютерів або вузлів, які готові виконувати перехід стану. Коли ви відправляєте транзакції, вони не просто йдуть сюди; вони йдуть до валідаторів. Валідатори виконують обчислення, пригадуючи те, що я вже згадував у цьому триваючому розмові. Вони беруть вашу транзакцію, отримують інформацію з блокчейну про те, як обробити цю транзакцію, застосовують цю обробку, а потім координують з іншими валідаторами той факт, що вони правильно виконали перехід стану. Ядро глобального комп'ютера, щодо захисту від ситуацій, коли Боб, робот-пилосос, отримує правильну команду від Еліс у офісі, ґрунтується не на довірі, а на перехресній перевірці великою кількістю учасників мережі на основі доступної інформації з блокчейну. Не лише з блокчейну, до речі. Це складно, і ми зараз не будемо вдаватися в це, але в основному, велика кількість валідаторів по черзі спостерігають і мають стимули, деякі внутрішні стимули в межах протоколу, щоб запобігти тому, що універсальна та здатна обчислювати будь-що машина виконала цю операцію неправильно. Валідатор ефективно обробляє транзакції, які надходять до глобального комп'ютера, і інші валідатори допомагають запобігти ситуаціям, коли один з валідаторів виконав неправильний розрахунок. Чим кращі алгоритми консенсусу валідаторів, тим кращий захист ми маємо для функції переходу стану або, іншими словами, серця нашого глобального комп'ютера.\")]),_c('p',[_vm._v(\"Друга частина цієї схеми - це служба доступності даних - те, що ми завжди називали базою даних у Bitcoin або Ethereum. Фактично, нам доведеться відмовитися від цього концепту, оскільки в архітектурі всіх проектів відбувається фундаментальна зміна, і для тих, хто спеціально спрямовується на глобальний комп'ютер, ця зміна є найважливішою. На сьогоднішній день, як приклад, існують різні реалізації мереж Layer 2 поверх Ethereum - такі як Arbitrum, Optimism та інші. Якщо ви почнете досліджувати їхні основні відмінності та принципи роботи, ви знайдете, що у деяких випадках мережа L2 в Ethereum відправляє більшу кількість даних, виключно з першого рівня блокчейну, тобто з блокчейну Ethereum. Усі необхідні частинки головоломки для підтвердження того, що обчислення на рівні L2 було вірним, можна знайти в першому рівні блокчейну Ethereum. З іншого боку, інші підходи вказують на те, що поза першим рівнем Ethereum зберігається щось інше, що потрібно знайти для підтвердження вірності транзакцій. Таким чином, прямо зараз, перед нашими очима, знову постає питання про удосконалення, але конкретно такої архітектури, де транзакції йдуть ліворуч, в середині ми маємо серце у вигляді функції переходу стану, валідатори, і їх консенсус дозволяє правильне виконання цього переходу стану. Але також постає питання доступності даних, яке необхідно забезпечити як перевірку, так і, в суті, існування самої служби. Деякі підходи та шаблони для створення L2 поверх Ethereum сьогодні ставлять питання: \\\"Що, якщо певний рівень L2 втрачає дані, які він не зберігає в основному блокчейні Ethereum?\\\"\")]),_c('p',[_vm._v(\"Давайте доповнимо цю картину тим, як побудований Polkadot. У Polkadot є два механізми консенсусу: консенсус \\\"babe\\\", відповідальний за консенсус на рівні паралелі і є швидким, та консенсус \\\"grandpa\\\", який є повільним і перевіряє все пізніше. Таким чином, якщо ви заглибитеся в статтю вікі з назвою \\\"Шлях блоку в мережі Polkadot\\\", ви зіткнетеся з цікавими скороченнями. Після досягнення консенсусу \\\"babe\\\" на рівні паралелі, консенсус \\\"grandpa\\\" вводить концепцію \\\"доказу валідності та доступності даних\\\". Глибше занурюючись, ви знайдете термін \\\"chunk\\\" зайвих шматків інформації, натхненний технологіями CD RW з 90-х та 2000-х років. Це відповідає на питання про те, як зберегти інфомацію, коли абсолютна довіра до певного суб'єкта в мережі неможлива. Концепція \\\"chunk\\\" зайвої інформації є одним з цих шаблонів.\")]),_c('p',[_vm._v(\"Підсумовуючи, в основі лежить абстрактна функція, яка дозволяє будь-яке обчислення і була описана Аланом Тьюрінгом у 1930-х роках. Особистий комп'ютер, в суті, як побічний ефект математичної проблеми, виник в результаті роботи Тьюрінга. Технології, які спочатку застосовувалися в Bitcoin, такі як консенсус, який дозволяє мережі існувати без конкретного центру обробки даних або суб'єкта, відповідального за правильність даних, формують працюючий механізм. Це виходить за межі надання конкретної послуги для електронних грошових переказів; це дозволяє нам аудитувати та контролювати будь-яке обчислення в мережі. Крім того, ми стикаємося з викликом забезпечення доступності даних, оскільки це не є основною проблемою світового комп'ютера. Завдання світового комп'ютера полягає в його основі, виконанні обчислень, управлінні переходами стану та виконанні обчислень, тоді як дані в цій схемі служать головоломкою, яка є більш необхідною для підтримки нижньої частини. Таким чином, цю загальну схему можна розглядати як абстрактне та узагальнене зображення структури світового комп'ютера, де функція переходу стану знаходиться в його основі.\")])])}\nvar staticRenderFns = []\n\n\n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/gridsome%22,%22cacheIdentifier%22:%223ec475f9-vue-loader-template%22%7D!./node_modules/gridsome/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "UQSp":
/*!****************************************************************!*\
  !*** ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// @vue/component\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VueRemarkRoot',\n  render: function render(h) {\n    return h('div', null, this.$slots[\"default\"]);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js?");

/***/ }),

/***/ "cwN+":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js */ \"UQSp\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"Kw5r\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].config.optionMergeStrategies;\nvar imported = {\n  VueRemarkRoot: _home_runner_work_robonomics_academy_robonomics_academy_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Component) {\n  var components = Component.options.components = Component.options.components || {};\n  var computed = Component.options.computed = Component.options.computed || {};\n  Object.keys(imported).forEach(function (key) {\n    if (_typeof(imported[key]) === 'object' && typeof imported[key].render === 'function') {\n      components[key] = imported[key];\n    } else if (typeof imported[key] === 'function' && typeof imported[key].options.render === 'function') {\n      components[key] = imported[key];\n    } else {\n      computed[key] = function () {\n        return imported[key];\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?./node_modules/babel-loader/lib??ref--15-0!./node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "iHVP":
/*!********************************************************************************************************************************!*\
  !*** ./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--15-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-heart-of-the-world-computer.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"cwN+\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?");

/***/ }),

/***/ "l31Z":
/*!*************************************************************************************************************************************!*\
  !*** ./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \*************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--16-0!../../../../node_modules/gridsome/node_modules/vue-loader/lib??ref--17-0!../../../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./the-heart-of-the-world-computer.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"JGRR\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_gridsome_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_the_heart_of_the_world_computer_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./courses/uk/learn/world-computer/the-heart-of-the-world-computer.md?");

/***/ })

}]);